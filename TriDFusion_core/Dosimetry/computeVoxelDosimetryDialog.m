function computeVoxelDosimetryDialog(sDosimetryScriptPath)
%function computeVoxelDosimetryDialog(sDosimetryScriptPath)
%Run PHITS, on a selected series.
%See TriDFuison.doc (or pdf) for more information about options.
%
%Author: Daniel Lafontaine, lafontad@mskcc.org
%
%Last specifications modified:
%
% Copyright 2023, Daniel Lafontaine, on behalf of the TriDFusion development team.
%
% This file is part of The Triple Dimention Fusion (TriDFusion).
%
% TriDFusion development has been led by:  Daniel Lafontaine
%
% TriDFusion is distributed under the terms of the Lesser GNU Public License.
%
%     This version of TriDFusion is free software: you can redistribute it and/or modify
%     it under the terms of the GNU General Public License as published by
%     the Free Software Foundation, either version 3 of the License, or
%     (at your option) any later version.
%
% TriDFusion is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
% without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
% See the GNU General Public License for more details.
%
% You should have received a copy of the GNU General Public License
% along with TriDFusion.  If not, see <http://www.gnu.org/licenses/>.

    gtRadionuclide = getDoseRadionuclidesTemplate();

    if isempty(gtRadionuclide)

        progressBar(0, 'Error:computeVoxelDosimetryDialog() radionuclide template not found!');
        msgbox('Error: computeVoxelDosimetryDialog(): Radionuclide template not found!', 'Error');
        return;
    end

    DLG_DOSIMETRY_X = 960;
    DLG_DOSIMETRY_Y = 540;

    if getMainWindowSize('xsize') < DLG_DOSIMETRY_X

        DLG_DOSIMETRY_X = getMainWindowSize('xsize');
    end

    if getMainWindowSize('ysize') < DLG_DOSIMETRY_Y

        DLG_DOSIMETRY_Y = getMainWindowSize('ysize');
    end

    if viewerUIFigure('get') == true

        dlgDosimetry = ...
            uifigure('Position', [(getMainWindowPosition('xpos')+(getMainWindowSize('xsize')/2)-DLG_DOSIMETRY_X/2) ...
                                (getMainWindowPosition('ypos')+(getMainWindowSize('ysize')/2)-DLG_DOSIMETRY_Y/2) ...
                                DLG_DOSIMETRY_X ...
                                DLG_DOSIMETRY_Y ...
                                ],...
                   'Resize', 'off', ...
                   'Color', viewerBackgroundColor('get'),...
                   'WindowStyle', 'modal', ...
                   'Name' , 'Voxel Dosimetry for dose rate reconstruction (BQML->Gy/s)'...
                   );
    else

        dlgDosimetry = ...
            dialog('Position', [(getMainWindowPosition('xpos')+(getMainWindowSize('xsize')/2)-DLG_DOSIMETRY_X/2) ...
                                (getMainWindowPosition('ypos')+(getMainWindowSize('ysize')/2)-DLG_DOSIMETRY_Y/2) ...
                                DLG_DOSIMETRY_X ...
                                DLG_DOSIMETRY_Y ...
                                ],...
                   'MenuBar'    , 'none',...
                   'Resize'     , 'off', ...    
                   'NumberTitle', 'off',...
                   'MenuBar'    , 'none',...
                   'Color'      , viewerBackgroundColor('get'), ...
                   'Name'       , 'Voxel Dosimetry for dose rate reconstruction (BQML->Gy/s)',...
                   'Toolbar'    , 'none'...               
                   );      
    end

    setObjectIcon(dlgDosimetry);

    % axeDosimetry = ...
    % axes(dlgDosimetry, ...
    %      'Units'   , 'normalized', ...
    %      'Position', [0 0 1 1], ...
    %      'Color'   , viewerBackgroundColor('get'),...
    %      'XColor'  , viewerForegroundColor('get'),...
    %      'YColor'  , viewerForegroundColor('get'),...
    %      'ZColor'  , viewerForegroundColor('get'),...             
    %      'Visible' , 'off'...             
    %      );
    % axeDosimetry.Interactions = [zoomInteraction regionZoomInteraction rulerPanInteraction];
    % axeDosimetry.Toolbar.Visible = 'off'; 

    uiDosimetry = ...
    uipanel(dlgDosimetry,...
            'Units'   , 'normalized',...
            'Position', [0 0 1 1], ...
            'Visible', 'on', ...
            'BackgroundColor', viewerBackgroundColor('get'), ...
            'ForegroundColor', viewerForegroundColor('get') ... 
            );
% 
%     if viewerUIFigure('get') == false
% 
%         uiDosimetrySlider = ...
%         uicontrol('Style'   , 'Slider', ...
%                   'Parent'  , dlgDosimetry,...
%                   'Units'   , 'normalized',...
%                   'position', [0.99 ...
%                                0 ...
%                                0.01 ...
%                                1 ...
%                                ],...
%                   'Value', 1, ...
%                   'Callback',@uiDosimetrySliderCallback, ...
%                   'BackgroundColor', 'white', ...
%                   'ForegroundColor', 'black' ...
%                   );
%     %     addlistener(uiDosimetrySlider, 'Value', 'PreSet', @uiDosimetrySliderCallback);
%         addlistener(uiDosimetrySlider, 'ContinuousValueChange', @uiDosimetrySliderCallback);
%     end

    % Radionuclide

    uicontrol(uiDosimetry,...
              'style'     , 'text',...
              'Units'     , 'pixels',...
              'FontWeight', 'bold',...
              'FontSize'  , 10,...
              'FontName'  , 'MS Sans Serif', ...                      
              'string'    , 'Radionuclide',...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...                   
              'position', [10 ...
                           DLG_DOSIMETRY_Y-50 ...
                           100 ...
                           20] ...
              );   

    edtDosimetryRadionuclide = ...
    uicontrol(uiDosimetry, ...
              'Style'     , 'edit', ...
              'Units'     , 'pixels',...
              'FontWeight', 'normal',...
              'FontSize'  , 10,...
              'FontName'  , 'MS Sans Serif', ...                  
              'String'    , voxelDosimetryRadionuclide('get'), ...
              'Enable'    , 'off', ...
              'BackgroundColor', 'white', ...
              'ForegroundColor', 'black', ...
              'position', [170 ...
                           DLG_DOSIMETRY_Y-50 ...
                           150 ...
                           25], ...                 
              'Callback', @edtDosimetryRadionuclideCallback...
              );

%     btnDosimetryRadionuclide = ...
    uicontrol(uiDosimetry, ...
             'String'    , 'Periodic Table',...
             'Units'     , 'pixels',...
             'FontWeight', 'bold',...
             'BackgroundColor', 'white', ...
             'ForegroundColor', 'black', ...
             'position', [370 ...
                          DLG_DOSIMETRY_Y-50 ...
                          150 ...
                          25], ...                 
             'Callback', @btnDosimetryRadionuclideCallback...
             );

    % Physical Model                 

    % Alpha

    txtDosimetryAlpha = ...
    uicontrol(uiDosimetry,...
          'style'     , 'text',...
          'Units'     , 'pixels',...
          'FontWeight', 'normal',...
          'FontSize'  , 10,...
          'FontName'  , 'MS Sans Serif', ...                      
          'string'    , 'Alpha',...
          'horizontalalignment', 'left',...
          'BackgroundColor', viewerBackgroundColor('get'), ...
          'ForegroundColor', viewerForegroundColor('get'), ...                   
          'Visible' ,'on', ...
          'position', [10 ...
                       DLG_DOSIMETRY_Y-100 ...
                       150 ...
                       25] ... 
              );   
    
    popDosimetryAlpha = ...
    uicontrol(uiDosimetry, ...
              'Style'   , 'popup', ...
              'Units'     , 'pixels',...
              'FontWeight', 'normal',...
              'FontSize'  , 10,...
              'FontName'  , 'MS Sans Serif', ...                  
              'String'  , {'Local Deposition', 'Kernel Convolution', 'Monte Carlo', 'Exclude'}, ...
              'Value'   , voxelDosimetryAlphaPhysicalModel('get') ,...
              'Enable'  , 'off', ...
              'BackgroundColor', 'white', ...
              'ForegroundColor', 'black', ...
              'Visible' ,'on', ...
              'position', [170 ...
                          DLG_DOSIMETRY_Y-100 ...
                          150 ...
                          25], ...                 
              'Callback', @popDosimetryAlphaCallback...
              );

    txtDosimetryAlphaSourceParticles = ...
    uicontrol(uiDosimetry,...
              'style'     , 'text',...
              'Units'     , 'pixels',...
              'FontWeight', 'normal',...
              'FontSize'  , 10,...
              'FontName'  , 'MS Sans Serif', ...                      
              'string'    , 'Source Particles',...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...                   
              'Visible','off', ...
              'position', [370 ...
                          DLG_DOSIMETRY_Y-100 ...
                          140 ...
                          25] ...
              );  

    edtDosimetryAlphaSourceParticles = ...
    uicontrol(uiDosimetry,...
              'style'   , 'edit',...
              'Units'   , 'pixels',...
              'string'  , num2str(voxelDosimetryAlphaSourceParticles('get')),...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...    
              'Visible','off', ...
              'position', [510 ...
                          DLG_DOSIMETRY_Y-100 ...
                          100 ...
                          25], ... 
              'Callback', @edtDosimetryAlphaSourceParticlesCallback...                         
              );

    txtDosimetryAlphaSourceParticlesBatches = ...
    uicontrol(uiDosimetry,...
              'style'     , 'text',...
              'Units'     , 'pixels',...
              'FontWeight', 'normal',...
              'FontSize'  , 10,...
              'FontName'  , 'MS Sans Serif', ...                      
              'string'    , 'Batches',...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...                   
              'Visible','off', ...
              'position', [650 ...
                          DLG_DOSIMETRY_Y-100 ...
                          60 ...
                          25] ... 
              );  

    edtDosimetryAlphaSourceParticlesBatches = ...
    uicontrol(uiDosimetry,...
              'style'   , 'edit',...
              'Units'   , 'pixels',...
              'string'  , num2str(voxelDosimetryAlphaSourceParticlesBatches('get')),...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...    
              'Visible','off', ...
              'position', [740 ...
                          DLG_DOSIMETRY_Y-100 ...
                          100 ...
                          25], ... 
              'Callback', @edtDosimetryAlphaSourceParticlesBatchesCallback...                         
              );

    txtDosimetryAlphaCutoff = ...
    uicontrol(uiDosimetry,...
              'style'     , 'text',...
              'Units'     , 'pixels',...
              'FontWeight', 'normal',...
              'FontSize'  , 10,...
              'FontName'  , 'MS Sans Serif', ...                      
              'string'    , 'Kernel Cutoff (mm)',...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...                   
              'Visible','off', ...
              'position', [370 ...
                          DLG_DOSIMETRY_Y-100 ...
                          140 ...
                          25] ...
              );  
    
    edtDosimetryAlphaCutoff = ...
    uicontrol(uiDosimetry,...
              'style'   , 'edit',...
              'Units'   , 'pixels',...
              'string'  , num2str(voxelDosimetryAlphaCutoff('get')),...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...                   
              'Visible','off', ...              
              'position', [510 ...
                          DLG_DOSIMETRY_Y-100 ...
                          100 ...
                          25], ...   
              'Callback', @edtDosimetryAlphaCutoffCallback...                         
              );

    % Beta

    txtDosimetryBeta = ...
    uicontrol(uiDosimetry,...
              'style'     , 'text',...
              'Units'     , 'pixels',...
              'FontWeight', 'normal',...
              'FontSize'  , 10,...
              'FontName'  , 'MS Sans Serif', ...                      
              'string'    , 'Beta',...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...                   
              'Visible','on', ...
          'position', [10 ...
                       DLG_DOSIMETRY_Y-130 ...
                       150 ...
                       25] ... 
              );   

    popDosimetryBeta = ...
    uicontrol(uiDosimetry, ...
              'Style'     , 'popup', ...
              'Units'     , 'pixels',...
              'FontWeight', 'normal',...
              'FontSize'  , 10,...
              'FontName'  , 'MS Sans Serif', ...                  
              'String'    , {'Local Deposition', 'Kernel Convolution', 'Monte Carlo', 'Exclude'}, ...
              'Value'     , voxelDosimetryBetaPhysicalModel('get') ,...
              'Enable'    , 'off', ...
              'BackgroundColor', 'white', ...
              'ForegroundColor', 'black', ...
              'Visible','on', ...
              'position', [170 ...
                          DLG_DOSIMETRY_Y-130 ...
                          150 ...
                          25], ...                 
              'Callback', @popDosimetryBetaCallback...
              );

   txtDosimetryBetaSourceParticles = ...
   uicontrol(uiDosimetry,...
              'style'     , 'text',...
              'Units'     , 'pixels',...
              'FontWeight', 'normal',...
              'FontSize'  , 10,...
              'FontName'  , 'MS Sans Serif', ...                      
              'string'    , 'Source Particles',...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...                   
              'Visible','off', ...
              'position', [370 ...
                          DLG_DOSIMETRY_Y-130 ...
                          140 ...
                          25] ...
              );  

    edtDosimetryBetaSourceParticles = ...
    uicontrol(uiDosimetry,...
              'style'   , 'edit',...
              'Units'   , 'pixels',...
              'string'  , num2str(voxelDosimetryBetaSourceParticles('get')),...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...    
              'Visible','off', ...
              'position', [510 ...
                          DLG_DOSIMETRY_Y-130 ...
                          100 ...
                          25], ... 
              'Callback', @edtDosimetryBetaSourceParticlesCallback...
              );

    txtDosimetryBetaSourceParticlesBatches = ...
    uicontrol(uiDosimetry,...
              'style'     , 'text',...
              'Units'     , 'pixels',...
              'FontWeight', 'normal',...
              'FontSize'  , 10,...
              'FontName'  , 'MS Sans Serif', ...                      
              'string'    , 'Batches',...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...                   
              'Visible','off', ...
              'position', [650 ...
                          DLG_DOSIMETRY_Y-130 ...
                          60 ...
                          25] ... 
              );  

    edtDosimetryBetaSourceParticlesBatches = ...
    uicontrol(uiDosimetry,...
              'style'   , 'edit',...
              'Units'   , 'pixels',...
              'string'  , num2str(voxelDosimetryBetaSourceParticlesBatches('get')),...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...    
              'Visible','off', ...
              'position', [740 ...
                          DLG_DOSIMETRY_Y-130 ...
                          100 ...
                          25], ... 
              'Callback', @edtDosimetryBetaSourceParticlesBatchesCallback...
              );
    
    txtDosimetryBetaCutoff = ...
    uicontrol(uiDosimetry,...
              'style'     , 'text',...
              'Units'     , 'pixels',...
              'FontWeight', 'normal',...
              'FontSize'  , 10,...
              'FontName'  , 'MS Sans Serif', ...                      
              'string'    , 'Kernel Cutoff (mm)',...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...                   
              'Visible','off', ...
              'position', [370 ...
                          DLG_DOSIMETRY_Y-130 ...
                          140 ...
                          25] ...
                  );  

    edtDosimetryBetaCutoff = ...
    uicontrol(uiDosimetry,...
              'style'   , 'edit',...
              'Units'   , 'pixels',...
              'string'  , num2str(voxelDosimetryBetaCutoff('get')),...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...                   
              'Visible','off', ...
              'position', [510 ...
                          DLG_DOSIMETRY_Y-130 ...
                          100 ...
                          25], ...  
              'Callback', @edtDosimetryBetaCutoffCallback...
              );

    % Gamma

    txtDosimetryGamma = ...
    uicontrol(uiDosimetry,...
              'style'     , 'text',...
              'Units'     , 'pixels',...
              'FontWeight', 'normal',...
              'FontSize'  , 10,...
              'FontName'  , 'MS Sans Serif', ...                      
              'string'    , 'Gamma',...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...                   
              'Visible','on', ...
              'position', [10 ...
                           DLG_DOSIMETRY_Y-160 ...
                           150 ...
                           25] ... 
              );   

    popDosimetryGamma = ...
    uicontrol(uiDosimetry, ...
              'Style'     , 'popup', ...
              'Units'     , 'pixels',...
              'FontWeight', 'normal',...
              'FontSize'  , 10,...
              'FontName'  , 'MS Sans Serif', ...                  
              'String'    , {'Local Deposition', 'Kernel Convolution', 'Monte Carlo', 'Exclude'}, ...
              'Value'     , voxelDosimetryGammaPhysicalModel('get') ,...
              'Enable'    , 'off', ...
              'BackgroundColor', 'white', ...
              'ForegroundColor', 'black', ...
              'Visible','on', ...
              'position', [170 ...
                          DLG_DOSIMETRY_Y-160 ...
                          150 ...
                          25], ...             
              'Callback', @popDosimetryGammaCallback...
              );

     txtDosimetryGammaSourceParticles = ...
     uicontrol(uiDosimetry,...
               'style'     , 'text',...
               'Units'     , 'pixels',...
               'FontWeight', 'normal',...
               'FontSize'  , 10,...
               'FontName'  , 'MS Sans Serif', ...                      
               'string'    , 'Source Particles',...
               'horizontalalignment', 'left',...
               'BackgroundColor', viewerBackgroundColor('get'), ...
               'ForegroundColor', viewerForegroundColor('get'), ...                   
               'Visible','off', ...
              'position', [370 ...
                          DLG_DOSIMETRY_Y-160 ...
                          140 ...
                          25] ...
               );  

    edtDosimetryGammaSourceParticles = ...
    uicontrol(uiDosimetry,...
              'style'   , 'edit',...
              'Units'   , 'pixels',...
              'string'  , num2str(voxelDosimetryGammaSourceParticles('get')),...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...                   
              'Visible','off', ...
              'position', [510 ...
                          DLG_DOSIMETRY_Y-160 ...
                          100 ...
                          25], ...  
              'Callback', @edtDosimetryGammaSourceParticlesCallback...
              );

    txtDosimetryGammaSourceParticlesBatches = ...
    uicontrol(uiDosimetry,...
              'style'     , 'text',...
              'Units'     , 'pixels',...
              'FontWeight', 'normal',...
              'FontSize'  , 10,...
              'FontName'  , 'MS Sans Serif', ...                      
              'string'    , 'Batches',...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...                   
              'Visible','off', ...
              'position', [650 ...
                          DLG_DOSIMETRY_Y-160 ...
                          60 ...
                          25] ... 
              );  

    edtDosimetryGammaSourceParticlesBatches = ...
    uicontrol(uiDosimetry,...
              'style'   , 'edit',...
              'Units'   , 'pixels',...
              'string'  , num2str(voxelDosimetryGammaSourceParticlesBatches('get')),...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...    
              'Visible','off', ...
              'position', [740 ...
                          DLG_DOSIMETRY_Y-160 ...
                          100 ...
                          25], ... 
              'Callback', @edtDosimetryGammaSourceParticlesBatchesCallback...
              );

    txtDosimetryGammaCutoff = ...
    uicontrol(uiDosimetry,...
              'style'     , 'text',...
              'Units'     , 'pixels',...
              'FontWeight', 'normal',...
              'FontSize'  , 10,...
              'FontName'  , 'MS Sans Serif', ...                      
              'string'    , 'Kernel Cutoff (mm)',...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...                   
              'Visible','off', ...
              'position', [370 ...
                          DLG_DOSIMETRY_Y-160 ...
                          140 ...
                          25] ...
              );  
    
    edtDosimetryGammaCutoff = ...
    uicontrol(uiDosimetry,...
              'style'   , 'edit',...
              'Units'   , 'pixels',...
              'string'  , num2str(voxelDosimetryGammaCutoff('get')),...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...                   
              'Visible','off', ...
              'position', [510 ...
                          DLG_DOSIMETRY_Y-160 ...
                          100 ...
                          25], ...  
              'Callback', @edtDosimetryGammaCutoffCallback...
              );

    % Monoenergetic Electron

    txtDosimetryMonoenergeticElectron = ...
    uicontrol(uiDosimetry,...
              'style'     , 'text',...
              'Units'     , 'pixels',...
              'FontWeight', 'normal',...
              'FontSize'  , 10,...
              'FontName'  , 'MS Sans Serif', ...                      
              'string'    , 'Monoenergetic Electron',...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...                   
              'Visible','on', ...
              'position', [10 ...
                           DLG_DOSIMETRY_Y-190 ...
                           160 ...
                           25] ... 
              );   

       popDosimetryMonoenergeticElectron = ...
       uicontrol(uiDosimetry, ...
                 'Style'     , 'popup', ...
                 'Units'     , 'pixels',...
                 'FontWeight', 'normal',...
                 'FontSize'  , 10,...
                 'FontName'  , 'MS Sans Serif', ...                  
                 'String'    , {'Local Deposition', 'Kernel Convolution', 'Monte Carlo', 'Exclude'}, ...
                 'Value'     , voxelDosimetryMonoenergeticElectronPhysicalModel('get') ,...
                 'Enable'    , 'off', ...
                 'BackgroundColor', 'white', ...
                 'ForegroundColor', 'black', ...
                 'Visible','on', ...
                 'position', [170 ...
                             DLG_DOSIMETRY_Y-190 ...
                             150 ...
                             25], ...                 
                 'Callback', @popDosimetryMonoenergeticElectronCallback...
                 );

     txtDosimetryMonoenergeticElectronSourceParticles = ...
     uicontrol(uiDosimetry,...
               'style'     , 'text',...
               'Units'     , 'pixels',...
               'FontWeight', 'normal',...
               'FontSize'  , 10,...
               'FontName'  , 'MS Sans Serif', ...                      
               'string'    , 'Source Particles',...
               'horizontalalignment', 'left',...
               'BackgroundColor', viewerBackgroundColor('get'), ...
               'ForegroundColor', viewerForegroundColor('get'), ...                   
               'Visible','off', ...
              'position', [370 ...
                          DLG_DOSIMETRY_Y-190 ...
                          140 ...
                          25] ...
               );  

    edtDosimetryMonoenergeticElectronSourceParticles = ...
    uicontrol(uiDosimetry,...
              'style'   , 'edit',...
              'Units'   , 'pixels',...
              'string'  , num2str(voxelDosimetryMonoenergeticElectronSourceParticles('get')),...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...                   
              'Visible','off', ...
              'position', [510 ...
                          DLG_DOSIMETRY_Y-190 ...
                          100 ...
                          25], ... 
              'Callback', @edtDosimetryMonoenergeticElectronSourceParticlesCallback...
             );

    txtDosimetryMonoenergeticElectronSourceParticlesBatches = ...
    uicontrol(uiDosimetry,...
              'style'     , 'text',...
              'Units'     , 'pixels',...
              'FontWeight', 'normal',...
              'FontSize'  , 10,...
              'FontName'  , 'MS Sans Serif', ...                      
              'string'    , 'Batches',...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...                   
              'Visible','off', ...
              'position', [650 ...
                          DLG_DOSIMETRY_Y-190 ...
                          60 ...
                          25] ... 
              );  

    edtDosimetryMonoenergeticElectronSourceParticlesBatches = ...
    uicontrol(uiDosimetry,...
              'style'   , 'edit',...
              'Units'   , 'pixels',...
              'string'  , num2str(voxelDosimetryMonoenergeticElectronSourceParticlesBatches('get')),...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...    
              'Visible','off', ...
              'position', [740 ...
                          DLG_DOSIMETRY_Y-190 ...
                          100 ...
                          25], ...  
              'Callback', @edtDosimetryMonoenergeticElectronSourceParticlesBatchesCallback...
              );

    txtDosimetryMonoenergeticElectronCutoff = ...
    uicontrol(uiDosimetry,...
              'style'     , 'text',...
              'Units'     , 'pixels',...
              'FontWeight', 'normal',...
              'FontSize'  , 10,...
              'FontName'  , 'MS Sans Serif', ...                      
              'string'    , 'Kernel Cutoff (mm)',...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...                   
              'Visible','off', ...
              'position', [370 ...
                          DLG_DOSIMETRY_Y-190 ...
                          140 ...
                          25] ...
              );  
    
    edtDosimetryMonoenergeticElectronCutoff = ...
    uicontrol(uiDosimetry,...
              'style'   , 'edit',...
              'Units'   , 'pixels',...
              'string'  , num2str(voxelDosimetryMonoenergeticElectronCutoff('get')),...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...                   
              'Visible','off', ...
              'position', [510 ...
                          DLG_DOSIMETRY_Y-190 ...
                          100 ...
                          25], ...   
              'Callback', @edtDosimetryMonoenergeticElectronCutoffCallback...
              );

    % Positron

    txtDosimetryPositron = ...
    uicontrol(uiDosimetry,...
              'style'     , 'text',...
              'Units'     , 'pixels',...
              'FontWeight', 'normal',...
              'FontSize'  , 10,...
              'FontName'  , 'MS Sans Serif', ...                      
              'string'    , 'Positron',...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...                   
              'Visible','on', ...
              'position', [10 ...
                           DLG_DOSIMETRY_Y-220 ...
                           150 ...
                           25] ... 
              );   

    popDosimetryPositron = ...
    uicontrol(uiDosimetry, ...
              'Style'     , 'popup', ...
              'Units'     , 'pixels',...
              'FontWeight', 'normal',...
              'FontSize'  , 10,...
              'FontName'  , 'MS Sans Serif', ...                  
              'String'    , {'Local Deposition', 'Kernel Convolution', 'Monte Carlo', 'Exclude'}, ...
              'Value'     , voxelDosimetryPositronPhysicalModel('get') ,...
              'Enable'    , 'off', ...
              'BackgroundColor', 'white', ...
              'ForegroundColor', 'black', ...
              'Visible','on', ...
              'position', [170 ...
                          DLG_DOSIMETRY_Y-220 ...
                          150 ...
                          25], ...                   
              'Callback', @popDosimetryPositronCallback...
              );

     txtDosimetryPositronSourceParticles = ...
     uicontrol(uiDosimetry,...
               'style'     , 'text',...
               'Units'     , 'pixels',...
               'FontWeight', 'normal',...
               'FontSize'  , 10,...
               'FontName'  , 'MS Sans Serif', ...                      
               'string'    , 'Source Particles',...
               'horizontalalignment', 'left',...
               'BackgroundColor', viewerBackgroundColor('get'), ...
               'ForegroundColor', viewerForegroundColor('get'), ...                   
               'Visible','off', ...
               'position', [370 ...
                           DLG_DOSIMETRY_Y-220 ...
                           140 ...
                           25] ...
               );  

    edtDosimetryPositronSourceParticles = ...
    uicontrol(uiDosimetry,...
              'style'   , 'edit',...
              'Units'   , 'pixels',...
              'string'  , num2str(voxelDosimetryPositronSourceParticles('get')),...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...                   
              'Visible','off', ...
              'position', [510 ...
                          DLG_DOSIMETRY_Y-220 ...
                          100 ...
                          25], ... 
              'Callback', @edtDosimetryPositronSourceParticlesCallback...
              );

    txtDosimetryPositronSourceParticlesBatches = ...
    uicontrol(uiDosimetry,...
              'style'     , 'text',...
              'Units'     , 'pixels',...
              'FontWeight', 'normal',...
              'FontSize'  , 10,...
              'FontName'  , 'MS Sans Serif', ...                      
              'string'    , 'Batches',...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...                   
              'Visible','off', ...
              'position', [650 ...
                          DLG_DOSIMETRY_Y-220 ...
                          60 ...
                          25] ... 
              );  

    edtDosimetryPositronSourceParticlesBatches = ...
    uicontrol(uiDosimetry,...
              'style'   , 'edit',...
              'Units'   , 'pixels',...
              'string'  , num2str(voxelDosimetryPositronSourceParticlesBatches('get')),...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...    
              'Visible','off', ...
              'position', [740 ...
                          DLG_DOSIMETRY_Y-220 ...
                          100 ...
                          25], ... 
              'Callback', @edtDosimetryPositronSourceParticlesBatchesCallback...
              );

    txtDosimetryPositronCutoff = ...
    uicontrol(uiDosimetry,...
              'style'     , 'text',...
              'Units'     , 'pixels',...
              'FontWeight', 'normal',...
              'FontSize'  , 10,...
              'FontName'  , 'MS Sans Serif', ...                      
              'string'    , 'Kernel Cutoff (mm)',...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...                   
              'Visible','off', ...
              'position', [370 ...
                          DLG_DOSIMETRY_Y-220 ...
                          140 ...
                          25] ...
              );  
    
    edtDosimetryPositronCutoff = ...
    uicontrol(uiDosimetry,...
              'style'   , 'edit',...
              'Units'   , 'pixels',...
              'string'  , num2str(voxelDosimetryPositronCutoff('get')),...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...                   
              'Visible','off', ...
              'position', [510 ...
                          DLG_DOSIMETRY_Y-220 ...
                          100 ...
                          25], ... 
              'Callback', @edtDosimetryPositronCutoffCallback...
              );

    % Xray

    txtDosimetryXray = ...
    uicontrol(uiDosimetry,...
              'style'     , 'text',...
              'Units'     , 'pixels',...
              'FontWeight', 'normal',...
              'FontSize'  , 10,...
              'FontName'  , 'MS Sans Serif', ...                      
              'string'    , 'Xray',...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...                   
              'Visible','on', ...
              'position', [10 ...
                           DLG_DOSIMETRY_Y-250 ...
                           150 ...
                           25] ... 
              );   

       popDosimetryXray = ...
       uicontrol(uiDosimetry, ...
                 'Style'     , 'popup', ...
                 'Units'     , 'pixels',...
                 'FontWeight', 'normal',...
                 'FontSize'  , 10,...
                 'FontName'  , 'MS Sans Serif', ...                  
                 'String'    , {'Local Deposition', 'Kernel Convolution', 'Monte Carlo', 'Exclude'}, ...
                 'Value'     , voxelDosimetryXrayPhysicalModel('get') ,...
                 'Enable'    , 'off', ...
                 'BackgroundColor', 'white', ...
                 'ForegroundColor', 'black', ...
                 'Visible','on', ...
                 'position', [170 ...
                             DLG_DOSIMETRY_Y-250 ...
                             150 ...
                             25], ...               
                 'Callback', @popDosimetryXrayCallback...
                 );


     txtDosimetryXraySourceParticles = ...
     uicontrol(uiDosimetry,...
               'style'     , 'text',...
               'Units'     , 'pixels',...
               'FontWeight', 'normal',...
               'FontSize'  , 10,...
               'FontName'  , 'MS Sans Serif', ...                      
               'string'    , 'Source Particles',...
               'horizontalalignment', 'left',...
               'BackgroundColor', viewerBackgroundColor('get'), ...
               'ForegroundColor', viewerForegroundColor('get'), ...                   
               'Visible','off', ...
               'position', [370 ...
                           DLG_DOSIMETRY_Y-250 ...
                           140 ...
                           25] ...
               );  

    edtDosimetryXraySourceParticles = ...
    uicontrol(uiDosimetry,...
              'style'   , 'edit',...
              'Units'   , 'pixels',...
              'string'  , num2str(voxelDosimetryXraySourceParticles('get')),...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...                   
              'Visible','off', ...
              'position', [510 ...
                          DLG_DOSIMETRY_Y-250 ...
                          100 ...
                          25], ...  
              'Callback', @edtDosimetryXraySourceParticlesCallback...
              );

    txtDosimetryXraySourceParticlesBatches = ...
    uicontrol(uiDosimetry,...
              'style'     , 'text',...
              'Units'     , 'pixels',...
              'FontWeight', 'normal',...
              'FontSize'  , 10,...
              'FontName'  , 'MS Sans Serif', ...                      
              'string'    , 'Batches',...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...                   
              'Visible','off', ...
              'position', [650 ...
                          DLG_DOSIMETRY_Y-250 ...
                          60 ...
                          25] ... 
              );  

    edtDosimetryXraySourceParticlesBatches = ...
    uicontrol(uiDosimetry,...
              'style'   , 'edit',...
              'Units'   , 'pixels',...
              'string'  , num2str(voxelDosimetryXraySourceParticlesBatches('get')),...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...    
              'Visible','off', ...
              'position', [740 ...
                          DLG_DOSIMETRY_Y-250 ...
                          100 ...
                          25], ... 
              'Callback', @edtDosimetryXraySourceParticlesBatchesCallback...
              );

    txtDosimetryXrayCutoff = ...
    uicontrol(uiDosimetry,...
              'style'     , 'text',...
              'Units'     , 'pixels',...
              'FontWeight', 'normal',...
              'FontSize'  , 10,...
              'FontName'  , 'MS Sans Serif', ...                      
              'string'    , 'Kernel Cutoff (mm)',...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...                   
              'Visible','off', ...
              'position', [370 ...
                          DLG_DOSIMETRY_Y-250 ...
                          140 ...
                          25] ...
              );  
    
    edtDosimetryXrayCutoff = ...
    uicontrol(uiDosimetry,...
              'style'   , 'edit',...
              'Units'   , 'pixels',...
              'string'  , num2str(voxelDosimetryXrayCutoff('get')),...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...                   
              'Visible','off', ...
              'position', [510 ...
                          DLG_DOSIMETRY_Y-250 ...
                          100 ...
                          25], ...   
              'Callback', @edtDosimetryXrayCutoffCallback...
              );

    % Tissue Dependant

    txtDosimetryMachineLearningTissueDependant = ...
    uicontrol(uiDosimetry,...
              'style'     , 'text',...
              'Units'     , 'pixels',...
              'FontWeight', 'normal',...
              'FontSize'  , 10,...
              'FontName'  , 'MS Sans Serif', ...                      
              'string'    , 'Machine Learning Tissue Composition Segmentation',...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...                   
              'Enable'  ,'Inactive', ...
              'position', [30 ...
                           DLG_DOSIMETRY_Y-303 ...
                           350 ...
                           20], ... 
              'ButtonDownFcn', @chkDosimetryMachineLearningTissueDependantCallback...
              );  

    chkDosimetryMachineLearningTissueDependant = ...
    uicontrol(uiDosimetry,...
              'style'   , 'checkbox',...
              'Units'   , 'pixels',...
              'enable'  , 'on',...
              'value'   , voxelDosimetryMachineLearningTissueDependant('get'),...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...
              'position', [10 ...
                           DLG_DOSIMETRY_Y-300 ...
                           20 ...
                           20], ...                     
              'Callback', @chkDosimetryMachineLearningTissueDependantCallback...
              );  

    if get(chkDosimetryMachineLearningTissueDependant, 'Value') == true

        [sSegmentatorScript, ~] = validateSegmentatorInstallation();

        if isempty(sSegmentatorScript)  % External Segmentor is not installed

            voxelDosimetryMachineLearningTissueDependant('set', false);

            set(chkDosimetryMachineLearningTissueDependant, 'Value', false);
            set(txtDosimetryMachineLearningTissueDependant, 'Enable', 'on');
            set(chkDosimetryMachineLearningTissueDependant, 'Enable', 'off');

            sTissueDependant = 'Tissue Dependant';                    
        else
            sTissueDependant = 'Background';
       end
    else
        sTissueDependant = 'Tissue Dependant';        
    end

    txtDosimetryTissueDependantBackground = ...
    uicontrol(uiDosimetry,...
              'style'     , 'text',...
              'Units'     , 'pixels',...
              'FontWeight', 'normal',...
              'FontSize'  , 10,...
              'FontName'  , 'MS Sans Serif', ...                      
              'string'    , sTissueDependant,...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...                   
              'position', [10 ...
                           DLG_DOSIMETRY_Y-330 ...
                           150 ...
                           20] ... 
              );   

       popDosimetryTissueDependantBackground = ...
       uicontrol(uiDosimetry, ...
                 'Style'   , 'popup', ...
                 'Units'     , 'pixels',...
                 'FontWeight', 'normal',...
                 'FontSize'  , 10,...
                 'FontName'  , 'MS Sans Serif', ...                  
                 'String'  , {'Water', 'Bone', 'Lung', 'Soft_Tissue'}, ...
                 'Value'   , voxelDosimetryTissueDependantBackground('get') ,...
                 'Enable'  , 'on', ...
                 'BackgroundColor', 'white', ...
                 'ForegroundColor', 'black', ...
                 'position', [170 ...
                             DLG_DOSIMETRY_Y-330 ...
                             150 ...
                             25], ...                  
                 'Callback', @popDosimetryTissueDependantCallback...
                 );

    % Y90 Time Integration Factor

    uicontrol(uiDosimetry,...
              'style'     , 'text',...
              'Units'     , 'pixels',...
              'FontWeight', 'normal',...
              'FontSize'  , 10,...
              'FontName'  , 'MS Sans Serif', ...                      
              'string'    , 'Y-90 Microsphere Time-Integration Factor',...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...                   
              'Enable'  ,'Inactive', ...
              'position', [30 ...
                           DLG_DOSIMETRY_Y-383 ...
                           350 ...
                           20], ...  
              'ButtonDownFcn', @chkDosimetryY90TimeIntegrationFactorCallback...
              );  

    if strcmpi(voxelDosimetryRadionuclide('get'), 'y-90')

        bTimeIntegrationFactor = true;
    else
        bTimeIntegrationFactor = false;
    end

    chkDosimetryY90TimeIntegrationFactor = ...
    uicontrol(uiDosimetry,...
              'style'   , 'checkbox',...
              'Units'   , 'pixels',...
              'enable'  , 'on',...
              'value'   , bTimeIntegrationFactor,...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...
              'position', [10 ...
                           DLG_DOSIMETRY_Y-380 ...
                           20 ...
                           20], ...                      
              'Callback', @chkDosimetryY90TimeIntegrationFactorCallback...
              ); 

    uicontrol(uiDosimetry,...
              'style'     , 'text',...
              'Units'     , 'pixels',...
              'FontWeight', 'normal',...
              'FontSize'  , 10,...
              'FontName'  , 'MS Sans Serif', ...                      
              'string'    , 'PHITS Debug Window',...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...                   
              'Enable'  ,'Inactive', ...
              'position', [30 ...
                           DLG_DOSIMETRY_Y-413 ...
                           350 ...
                           20], ...  
              'ButtonDownFcn', @chkDosimetryDebugModeCallback...
              );  

    chkDosimetryDebugMode = ...
    uicontrol(uiDosimetry,...
              'style'   , 'checkbox',...
              'Units'   , 'pixels',...
              'enable'  , 'on',...
              'value'   , voxelDosimetryPHITSDebugWindow('get'),...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...
              'position', [10 ...
                           DLG_DOSIMETRY_Y-410 ...
                           20 ...
                           20], ...                        
              'Callback', @chkDosimetryDebugModeCallback...
              ); 

    % Preset protocol

         uicontrol(uiDosimetry,...
                  'style'     , 'text',...
                  'Units'     , 'pixels',...
                  'FontWeight', 'bold',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...                      
                  'string'    , 'Preset protocol',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...                   
                  'position', [630 ...
                               DLG_DOSIMETRY_Y-410 ...
                               140 ...
                               20] ...  
                  );

    popDosimetryProtocol = ...
        uicontrol(uiDosimetry, ...
                  'enable'  , 'on',...
                  'Units'   , 'pixels',...
                  'Style'   , 'popup', ...
                  'position', [740 ...
                               DLG_DOSIMETRY_Y-410 ...
                               210 ...
                               20], ...  
                  'String'  , getDosimetryProtocolName(), ...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...                    
                  'Value'   , 1 ...
                  );
              
        uicontrol(uiDosimetry,...
                  'style'   , 'pushbutton',...
                  'Units'   , 'pixels',...
                  'String'  , 'Load',...
                  'position', [630 ...
                               DLG_DOSIMETRY_Y-450 ...
                               100 ...
                               25], ...  
                  'Enable'  , 'on', ...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'Callback', @loadDosimetryProtocolCallback...
                  );
              
        uicontrol(uiDosimetry,...
                  'style'   , 'pushbutton',...
                  'Units'   , 'pixels',...
                  'String'  ,'Save',...
                  'position', [740 ...
                               DLG_DOSIMETRY_Y-450 ...
                               100 ...
                               25], ...  
                  'Enable'  , 'on', ...
                  'BackgroundColor', [0.5300 0.6300 0.4000], ...
                  'ForegroundColor', [0.1 0.1 0.1], ...
                  'Callback', @saveDosimetryProtocolCallback...
                  ); 
              
        uicontrol(uiDosimetry, ...
                  'style'   , 'pushbutton',...
                  'Units'   , 'pixels',...
                  'String'  , 'Delete',...
                  'position', [850 ...
                               DLG_DOSIMETRY_Y-450 ...
                               100 ...
                               25], ...  
                  'Enable'  , 'on', ...
                  'BackgroundColor', [0.3255, 0.1137, 0.1137], ...
                  'ForegroundColor', [0.94 0.94 0.94], ...
                  'Callback', @deleteDosimetryProtocolCallback...
                  );
    % Contours

    chkDosimetryContour = ...
        uicontrol(uiDosimetry,...
                  'style'   , 'checkbox',...
                  'Units'   , 'pixels',...
                  'enable'  , 'off',...
                  'value'   , 0,...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [560 ...
                               DLG_DOSIMETRY_Y-290-40 ...
                               20 ...
                               20], ...                      
                  'Callback', @chkDosimetryContourCallback...
                  );

     txtDosimetryContour = ...
         uicontrol(uiDosimetry,...
                  'style'     , 'text',...
                  'enable'    , 'On',...
                  'Units'     , 'pixels',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...                      
                  'string'    , 'Contour',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...                   
                  'position', [580 ...
                               DLG_DOSIMETRY_Y-293-40 ...
                               100 ...
                               20], ...  
                  'ButtonDownFcn', @chkDosimetryContourCallback...
                  );

    atVoiInput = voiTemplate('get', get(uiSeriesPtr('get'), 'Value'));
    
    if isempty(atVoiInput)
        asVoiTag = ' ';
    else
        asVoiTag = cell(1, numel(atVoiInput));    
        for vv=1:numel(atVoiInput)
            asVoiTag{vv} = atVoiInput{vv}.Label;
        end
    end
    
    popDosimetryContours = ...
        uicontrol(uiDosimetry, ...
                  'enable'  , 'off',...
                  'Units'   , 'pixels',...
                  'Style'   , 'popup', ...
                  'position', [700 ...
                               DLG_DOSIMETRY_Y-290-40 ...
                               250 ...
                               20], ...   
                  'String'  , asVoiTag, ...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...                    
                  'Value'   , 1 ...
                  );
              
    chkDosimetryAllContours = ...
        uicontrol(uiDosimetry,...
                  'style'   , 'checkbox',...
                  'Units'   , 'pixels',...
                  'enable'  , 'on',...
                  'value'   , voxelDosimetryAllContours('get'),...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [560 ...
                               DLG_DOSIMETRY_Y-320-40 ...
                               20 ...
                               20], ...                     
                  'Callback', @chkDosimetryAllContoursCallback...
                  );

         uicontrol(uiDosimetry,...
                  'style'     , 'text',...
                  'Units'     , 'pixels',...
                  'enable'    , 'Inactive',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...                      
                  'string'    , 'All contours',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...                   
                  'position', [580 ...
                               DLG_DOSIMETRY_Y-323-40 ...
                               100 ...
                               20], ...   
                  'ButtonDownFcn', @chkDosimetryAllContoursCallback...
                  ); 

    if  get(chkDosimetryAllContours, 'Value') == true

        set(txtDosimetryContour, 'Enable', 'on');

        set(chkDosimetryContour, 'Enable', 'off');
        set(chkDosimetryContour, 'Value', false);

        set(popDosimetryContours, 'Enable', 'off');
        
    else
        set(txtDosimetryContour, 'Enable', 'inactive');
        set(chkDosimetryContour, 'Enable', 'on');

        if get(chkDosimetryContour, 'Value') == true
            set(popDosimetryContours, 'Enable', 'on');
        else
            set(popDosimetryContours, 'Enable', 'off');
        end
    end


     % Cancel or Proceed

     uicontrol(uiDosimetry,...
               'String'  ,'Cancel',...
               'Units'   , 'pixels',...
               'position', [850 ...
                            10 ...
                            100 ...
                            25], ... 
               'BackgroundColor', viewerBackgroundColor('get'), ...
               'ForegroundColor', viewerForegroundColor('get'), ...                
               'Callback', @cancelDosimetryFromContoursCallback...
               );

     uicontrol(uiDosimetry,...
               'String'    , 'Compute',...
               'Units'     , 'pixels',...
               'FontWeight', 'bold',...
               'position', [740 ...
                            10 ...
                            100 ...
                            25], ...  
              'BackgroundColor', [0.6300 0.6300 0.4000], ...
              'ForegroundColor', [0.1 0.1 0.1], ...               
              'Callback', @computeDosimetryFromContoursCallback...
              ); 

     uicontrol(uiDosimetry,...
              'style'     , 'text',...
              'enable'    , 'Inactive',...
              'FontWeight', 'normal',...
              'FontSize'  , 10,...
              'FontName'  , 'MS Sans Serif', ...                      
              'string'    , 'Module documentation: https://phits.jaea.go.jp/rirekie.html',...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', 'white', ...                   
              'position', [10 ...
                           10 ...
                           500 ...
                           20], ...
              'ButtonDownFcn', @visitPhitsDosimetry...
              );

    setUiControlFromRadionuclide(get(edtDosimetryRadionuclide, 'string'));

    function visitPhitsDosimetry(~, ~)

        web('https://phits.jaea.go.jp/rirekie.html');
    end

    function setUiControlFromRadionuclide(sRadionuclideName)
    
        sRadionuclideName = cleanString(sRadionuclideName);
        sRadionuclideName = regexprep(sRadionuclideName, '-', '');

        % Deactivate Alpha

        set(popDosimetryAlpha, 'Enable', 'off');
        set(txtDosimetryAlpha, 'FontWeight', 'normal');

        set(txtDosimetryAlphaCutoff, 'Visible', 'off');
        set(edtDosimetryAlphaCutoff, 'Visible', 'off');

        set(txtDosimetryAlphaSourceParticles       , 'Visible', 'off');
        set(edtDosimetryAlphaSourceParticles       , 'Visible', 'off');
        set(txtDosimetryAlphaSourceParticlesBatches, 'Visible', 'off');
        set(edtDosimetryAlphaSourceParticlesBatches, 'Visible', 'off');  

        % Deactivate Beta

        set(popDosimetryBeta, 'Enable', 'off');
        set(txtDosimetryBeta, 'FontWeight', 'normal');

        set(txtDosimetryBetaCutoff, 'Visible', 'off');
        set(edtDosimetryBetaCutoff, 'Visible', 'off');

        set(txtDosimetryBetaSourceParticles       , 'Visible', 'off');
        set(edtDosimetryBetaSourceParticles       , 'Visible', 'off');
        set(txtDosimetryBetaSourceParticlesBatches, 'Visible', 'off');
        set(edtDosimetryBetaSourceParticlesBatches, 'Visible', 'off');  

        % Deactivate Gamma       

        set(popDosimetryGamma, 'Enable', 'off');
        set(txtDosimetryGamma, 'FontWeight', 'normal');

        set(txtDosimetryGammaCutoff, 'Visible', 'off');
        set(edtDosimetryGammaCutoff, 'Visible', 'off');

        set(txtDosimetryGammaSourceParticles       , 'Visible', 'off');
        set(edtDosimetryGammaSourceParticles       , 'Visible', 'off');
        set(txtDosimetryGammaSourceParticlesBatches, 'Visible', 'off');
        set(edtDosimetryGammaSourceParticlesBatches, 'Visible', 'off'); 

        % Deactivate MonoenergeticElectron

        set(popDosimetryMonoenergeticElectron, 'Enable', 'off');
        set(txtDosimetryMonoenergeticElectron, 'FontWeight', 'normal');

        set(txtDosimetryMonoenergeticElectronCutoff, 'Visible', 'off');
        set(edtDosimetryMonoenergeticElectronCutoff, 'Visible', 'off');

        set(txtDosimetryMonoenergeticElectronSourceParticles       , 'Visible', 'off');
        set(edtDosimetryMonoenergeticElectronSourceParticles       , 'Visible', 'off');
        set(txtDosimetryMonoenergeticElectronSourceParticlesBatches, 'Visible', 'off');
        set(edtDosimetryMonoenergeticElectronSourceParticlesBatches, 'Visible', 'off');      

        % Deactivate Positron

        set(popDosimetryPositron, 'Enable', 'off');
        set(txtDosimetryPositron, 'FontWeight', 'normal');

        set(txtDosimetryPositronCutoff, 'Visible', 'off');
        set(edtDosimetryPositronCutoff, 'Visible', 'off');

        set(txtDosimetryPositronSourceParticles       , 'Visible', 'off');
        set(edtDosimetryPositronSourceParticles       , 'Visible', 'off');
        set(txtDosimetryPositronSourceParticlesBatches, 'Visible', 'off');
        set(edtDosimetryPositronSourceParticlesBatches, 'Visible', 'off');

        % Deactivate Xray
        
        set(popDosimetryXray, 'Enable', 'off');
        set(txtDosimetryXray, 'FontWeight', 'normal');

        set(txtDosimetryXrayCutoff, 'Visible', 'off');
        set(edtDosimetryXrayCutoff, 'Visible', 'off');

        set(txtDosimetryXraySourceParticles       , 'Visible', 'off');
        set(edtDosimetryXraySourceParticles       , 'Visible', 'off');
        set(txtDosimetryXraySourceParticlesBatches, 'Visible', 'off');
        set(edtDosimetryXraySourceParticlesBatches, 'Visible', 'off'); 

        try 
            % Activate Alpha

            if gtRadionuclide.(sRadionuclideName).emission.alpha == true 
     
                set(popDosimetryAlpha, 'Enable', 'On');
                set(txtDosimetryAlpha, 'FontWeight', 'bold');

                switch get(popDosimetryAlpha, 'Value')

                     case 2 % Kernel Convolution

                        set(txtDosimetryAlphaCutoff, 'Visible', 'on');
                        set(edtDosimetryAlphaCutoff, 'Visible', 'on');

                     case 3 % Monte Carlo

                        set(txtDosimetryAlphaSourceParticles       , 'Visible', 'on');
                        set(edtDosimetryAlphaSourceParticles       , 'Visible', 'on');
                        set(txtDosimetryAlphaSourceParticlesBatches, 'Visible', 'on');
                        set(edtDosimetryAlphaSourceParticlesBatches, 'Visible', 'on');                                              
                 end

            end

            % Activate Beta

             if gtRadionuclide.(sRadionuclideName).emission.beta == true

                set(popDosimetryBeta, 'Enable', 'On');
                set(txtDosimetryBeta, 'FontWeight', 'bold');

                switch get(popDosimetryBeta, 'Value')

                     case 2 % Kernel Convolution

                        set(txtDosimetryBetaCutoff, 'Visible', 'on');
                        set(edtDosimetryBetaCutoff, 'Visible', 'on');

                     case 3 % Monte Carlo

                        set(txtDosimetryBetaSourceParticles       , 'Visible', 'on');
                        set(edtDosimetryBetaSourceParticles       , 'Visible', 'on');
                        set(txtDosimetryBetaSourceParticlesBatches, 'Visible', 'on');
                        set(edtDosimetryBetaSourceParticlesBatches, 'Visible', 'on');                                              
                 end                 
             end

             % Activate Gamma

             if gtRadionuclide.(sRadionuclideName).emission.gamma == true

                set(popDosimetryGamma, 'Enable', 'On');
                set(txtDosimetryGamma, 'FontWeight', 'bold');

                switch get(popDosimetryGamma, 'Value')

                     case 2 % Kernel Convolution

                        set(txtDosimetryGammaCutoff, 'Visible', 'on');
                        set(edtDosimetryGammaCutoff, 'Visible', 'on');

                     case 3 % Monte Carlo

                        set(txtDosimetryGammaSourceParticles       , 'Visible', 'on');
                        set(edtDosimetryGammaSourceParticles       , 'Visible', 'on');
                        set(txtDosimetryGammaSourceParticlesBatches, 'Visible', 'on');
                        set(edtDosimetryGammaSourceParticlesBatches, 'Visible', 'on');                                              
                 end                  
             end         

             % Activate MonoenergeticElectron

             if gtRadionuclide.(sRadionuclideName).emission.monoenergeticElectron == true

                set(popDosimetryMonoenergeticElectron, 'Enable', 'On');
                set(txtDosimetryMonoenergeticElectron, 'FontWeight', 'bold');

                switch get(popDosimetryMonoenergeticElectron, 'Value')

                     case 2 % Kernel Convolution

                        set(txtDosimetryMonoenergeticElectronCutoff, 'Visible', 'on');
                        set(edtDosimetryMonoenergeticElectronCutoff, 'Visible', 'on');

                     case 3 % Monte Carlo

                        set(txtDosimetryMonoenergeticElectronSourceParticles       , 'Visible', 'on');
                        set(edtDosimetryMonoenergeticElectronSourceParticles       , 'Visible', 'on');
                        set(txtDosimetryMonoenergeticElectronSourceParticlesBatches, 'Visible', 'on');
                        set(edtDosimetryMonoenergeticElectronSourceParticlesBatches, 'Visible', 'on');                                              
                 end                   
             end

             % Activate Positron

             if gtRadionuclide.(sRadionuclideName).emission.positron == true

                set(popDosimetryPositron, 'Enable', 'On');
                set(txtDosimetryPositron, 'FontWeight', 'bold');

                switch get(popDosimetryPositron, 'Value')

                     case 2 % Kernel Convolution

                        set(txtDosimetryPositronCutoff, 'Visible', 'on');
                        set(edtDosimetryPositronCutoff, 'Visible', 'on');

                     case 3 % Monte Carlo

                        set(txtDosimetryPositronSourceParticles       , 'Visible', 'on');
                        set(edtDosimetryPositronSourceParticles       , 'Visible', 'on');
                        set(txtDosimetryPositronSourceParticlesBatches, 'Visible', 'on');
                        set(edtDosimetryPositronSourceParticlesBatches, 'Visible', 'on');                                              
                 end                  
             end

             % Activate Xray

             if gtRadionuclide.(sRadionuclideName).emission.xRay == true

                set(popDosimetryXray, 'Enable', 'On');
                set(txtDosimetryXray, 'FontWeight', 'bold');

                 switch get(popDosimetryXray, 'Value')

                     case 2 % Kernel Convolution

                        set(txtDosimetryXrayCutoff, 'Visible', 'on');
                        set(edtDosimetryXrayCutoff, 'Visible', 'on');

                     case 3 % Monte Carlo

                        set(txtDosimetryXraySourceParticles       , 'Visible', 'on');
                        set(edtDosimetryXraySourceParticles       , 'Visible', 'on');
                        set(txtDosimetryXraySourceParticlesBatches, 'Visible', 'on');
                        set(edtDosimetryXraySourceParticlesBatches, 'Visible', 'on');                                              
                 end                  
             end
          
        catch ME   
            logErrorToFile(ME);
            progressBar('Error: Radionuclide name is invalid or exist, please use a valid name!');
            f = errordlg('Radionuclide name is invalid or exist, please use a valid name!!', 'Radionuclide Name Validation');             
            setObjectIcon(f); 
        end

    end


    % Alpha    
    
    function popDosimetryAlphaCallback(hObject, ~)

        % if get(hObject, 'Value') == 2
        % 
        %     set(hObject, 'Value', 3);
        %     errordlg('Currently, only Local Deposition and Monte Carlo is supported!', 'Method Validation');  
        % end

        voxelDosimetryAlphaPhysicalModel('set', get(hObject, 'Value'));

        switch get(hObject, 'Value')
        
            case 2 % Kernel Convolution
            
                set(txtDosimetryAlphaCutoff, 'Visible', 'on');
                set(edtDosimetryAlphaCutoff, 'Visible', 'on');
    
                set(txtDosimetryAlphaSourceParticles       , 'Visible', 'off');
                set(edtDosimetryAlphaSourceParticles       , 'Visible', 'off');
                set(txtDosimetryAlphaSourceParticlesBatches, 'Visible', 'off');
                set(edtDosimetryAlphaSourceParticlesBatches, 'Visible', 'off'); 

            case 3 % Monte Carlo

                set(txtDosimetryAlphaCutoff, 'Visible', 'off');
                set(edtDosimetryAlphaCutoff, 'Visible', 'off');
    
                set(txtDosimetryAlphaSourceParticles       , 'Visible', 'on');
                set(edtDosimetryAlphaSourceParticles       , 'Visible', 'on');
                set(txtDosimetryAlphaSourceParticlesBatches, 'Visible', 'on');
                set(edtDosimetryAlphaSourceParticlesBatches, 'Visible', 'on');                                              

            otherwise

                set(txtDosimetryAlphaCutoff, 'Visible', 'off');
                set(edtDosimetryAlphaCutoff, 'Visible', 'off');
        
                set(txtDosimetryAlphaSourceParticles       , 'Visible', 'off');
                set(edtDosimetryAlphaSourceParticles       , 'Visible', 'off');
                set(txtDosimetryAlphaSourceParticlesBatches, 'Visible', 'off');
                set(edtDosimetryAlphaSourceParticlesBatches, 'Visible', 'off'); 
        end      
    end

    function edtDosimetryAlphaSourceParticlesCallback(hObject, ~)

        voxelDosimetryAlphaSourceParticles('set', str2double(get(hObject, 'String')));
    end

    function edtDosimetryAlphaSourceParticlesBatchesCallback(hObject, ~)

        voxelDosimetryAlphaSourceParticlesBatches('set', str2double(get(hObject, 'String')));
    end

    function edtDosimetryAlphaCutoffCallback(hObject, ~)

        voxelDosimetryAlphaCutoff('set', str2double(get(hObject, 'String')));
    end

    % Beta    
    
    function popDosimetryBetaCallback(hObject, ~)

        if get(hObject, 'Value') == 2

            set(hObject, 'Value', 3);
            errordlg('Currently, only Local Deposition and Monte Carlo is supported!', 'Method Validation');  
        end

        voxelDosimetryBetaPhysicalModel('set', get(hObject, 'Value'));

        switch get(hObject, 'Value')
        
            case 2 % Kernel Convolution
            
                set(txtDosimetryBetaCutoff, 'Visible', 'on');
                set(edtDosimetryBetaCutoff, 'Visible', 'on');
    
                set(txtDosimetryBetaSourceParticles       , 'Visible', 'off');
                set(edtDosimetryBetaSourceParticles       , 'Visible', 'off');
                set(txtDosimetryBetaSourceParticlesBatches, 'Visible', 'off');
                set(edtDosimetryBetaSourceParticlesBatches, 'Visible', 'off'); 

            case 3 % Monte Carlo

                set(txtDosimetryBetaCutoff, 'Visible', 'off');
                set(edtDosimetryBetaCutoff, 'Visible', 'off');
    
                set(txtDosimetryBetaSourceParticles       , 'Visible', 'on');
                set(edtDosimetryBetaSourceParticles       , 'Visible', 'on');
                set(txtDosimetryBetaSourceParticlesBatches, 'Visible', 'on');
                set(edtDosimetryBetaSourceParticlesBatches, 'Visible', 'on');                                              

            otherwise

                set(txtDosimetryBetaCutoff, 'Visible', 'off');
                set(edtDosimetryBetaCutoff, 'Visible', 'off');
        
                set(txtDosimetryBetaSourceParticles       , 'Visible', 'off');
                set(edtDosimetryBetaSourceParticles       , 'Visible', 'off');
                set(txtDosimetryBetaSourceParticlesBatches, 'Visible', 'off');
                set(edtDosimetryBetaSourceParticlesBatches, 'Visible', 'off'); 
        end      

    end

    function edtDosimetryBetaSourceParticlesCallback(hObject, ~)

        voxelDosimetryBetaSourceParticles('set', str2double(get(hObject, 'String')));
    end

    function edtDosimetryBetaSourceParticlesBatchesCallback(hObject, ~)

        voxelDosimetryBetaSourceParticlesBatches('set', str2double(get(hObject, 'String')));
    end

    function edtDosimetryBetaCutoffCallback(hObject, ~)

        voxelDosimetryBetaCutoff('set', str2double(get(hObject, 'String')));
    end

    % Gamma    
    
    function popDosimetryGammaCallback(hObject, ~)

        if get(hObject, 'Value') == 2

            set(hObject, 'Value', 3);
            errordlg('Currently, only Local Deposition and Monte Carlo is supported!', 'Method Validation');  
        end

        voxelDosimetryGammaPhysicalModel('set', get(hObject, 'Value'));

        switch get(hObject, 'Value')
        
            case 2 % Kernel Convolution
            
                set(txtDosimetryGammaCutoff, 'Visible', 'on');
                set(edtDosimetryGammaCutoff, 'Visible', 'on');
    
                set(txtDosimetryGammaSourceParticles       , 'Visible', 'off');
                set(edtDosimetryGammaSourceParticles       , 'Visible', 'off');
                set(txtDosimetryGammaSourceParticlesBatches, 'Visible', 'off');
                set(edtDosimetryGammaSourceParticlesBatches, 'Visible', 'off'); 

            case 3 % Monte Carlo

                set(txtDosimetryGammaCutoff, 'Visible', 'off');
                set(edtDosimetryGammaCutoff, 'Visible', 'off');
    
                set(txtDosimetryGammaSourceParticles       , 'Visible', 'on');
                set(edtDosimetryGammaSourceParticles       , 'Visible', 'on');
                set(txtDosimetryGammaSourceParticlesBatches, 'Visible', 'on');
                set(edtDosimetryGammaSourceParticlesBatches, 'Visible', 'on');                                              

            otherwise

                set(txtDosimetryGammaCutoff, 'Visible', 'off');
                set(edtDosimetryGammaCutoff, 'Visible', 'off');
        
                set(txtDosimetryGammaSourceParticles       , 'Visible', 'off');
                set(edtDosimetryGammaSourceParticles       , 'Visible', 'off');
                set(txtDosimetryGammaSourceParticlesBatches, 'Visible', 'off');
                set(edtDosimetryGammaSourceParticlesBatches, 'Visible', 'off'); 
        end      

    end

    function edtDosimetryGammaSourceParticlesCallback(hObject, ~)

        voxelDosimetryGammaSourceParticles('set', str2double(get(hObject, 'String')));
    end

    function edtDosimetryGammaSourceParticlesBatchesCallback(hObject, ~)

        voxelDosimetryGammaSourceParticlesBatches('set', str2double(get(hObject, 'String')));
    end

    function edtDosimetryGammaCutoffCallback(hObject, ~)

        voxelDosimetryGammaCutoff('set', str2double(get(hObject, 'String')));
    end

    % MonoenergeticElectron    
    
    function popDosimetryMonoenergeticElectronCallback(hObject, ~)

        if get(hObject, 'Value') == 2

            set(hObject, 'Value', 3);
            errordlg('Currently, only Local Deposition and Monte Carlo is supported!', 'Method Validation');  
        end

        voxelDosimetryMonoenergeticElectronPhysicalModel('set', get(hObject, 'Value'));

        switch get(hObject, 'Value')
        
            case 2 % Kernel Convolution
            
                set(txtDosimetryMonoenergeticElectronCutoff, 'Visible', 'on');
                set(edtDosimetryMonoenergeticElectronCutoff, 'Visible', 'on');
    
                set(txtDosimetryMonoenergeticElectronSourceParticles       , 'Visible', 'off');
                set(edtDosimetryMonoenergeticElectronSourceParticles       , 'Visible', 'off');
                set(txtDosimetryMonoenergeticElectronSourceParticlesBatches, 'Visible', 'off');
                set(edtDosimetryMonoenergeticElectronSourceParticlesBatches, 'Visible', 'off'); 

            case 3 % Monte Carlo

                set(txtDosimetryMonoenergeticElectronCutoff, 'Visible', 'off');
                set(edtDosimetryMonoenergeticElectronCutoff, 'Visible', 'off');
    
                set(txtDosimetryMonoenergeticElectronSourceParticles       , 'Visible', 'on');
                set(edtDosimetryMonoenergeticElectronSourceParticles       , 'Visible', 'on');
                set(txtDosimetryMonoenergeticElectronSourceParticlesBatches, 'Visible', 'on');
                set(edtDosimetryMonoenergeticElectronSourceParticlesBatches, 'Visible', 'on');                                              

            otherwise

                set(txtDosimetryMonoenergeticElectronCutoff, 'Visible', 'off');
                set(edtDosimetryMonoenergeticElectronCutoff, 'Visible', 'off');
        
                set(txtDosimetryMonoenergeticElectronSourceParticles       , 'Visible', 'off');
                set(edtDosimetryMonoenergeticElectronSourceParticles       , 'Visible', 'off');
                set(txtDosimetryMonoenergeticElectronSourceParticlesBatches, 'Visible', 'off');
                set(edtDosimetryMonoenergeticElectronSourceParticlesBatches, 'Visible', 'off'); 
        end      

    end

    function edtDosimetryMonoenergeticElectronSourceParticlesCallback(hObject, ~)

        voxelDosimetryMonoenergeticElectronSourceParticles('set', str2double(get(hObject, 'String')));
    end

    function edtDosimetryMonoenergeticElectronSourceParticlesBatchesCallback(hObject, ~)

        voxelDosimetryMonoenergeticElectronSourceParticlesBatches('set', str2double(get(hObject, 'String')));
    end

    function edtDosimetryMonoenergeticElectronCutoffCallback(hObject, ~)

        voxelDosimetryMonoenergeticElectronCutoff('set', str2double(get(hObject, 'String')));
    end

    % Positron    
    
    function popDosimetryPositronCallback(hObject, ~)

        if get(hObject, 'Value') == 2

            set(hObject, 'Value', 3);
            errordlg('Currently, only Local Deposition and Monte Carlo is supported!', 'Method Validation');  
        end

        voxelDosimetryPositronPhysicalModel('set', get(hObject, 'Value'));

        switch get(hObject, 'Value')
        
            case 2 % Kernel Convolution
            
                set(txtDosimetryPositronCutoff, 'Visible', 'on');
                set(edtDosimetryPositronCutoff, 'Visible', 'on');
    
                set(txtDosimetryPositronSourceParticles       , 'Visible', 'off');
                set(edtDosimetryPositronSourceParticles       , 'Visible', 'off');
                set(txtDosimetryPositronSourceParticlesBatches, 'Visible', 'off');
                set(edtDosimetryPositronSourceParticlesBatches, 'Visible', 'off'); 

            case 3 % Monte Carlo

                set(txtDosimetryPositronCutoff, 'Visible', 'off');
                set(edtDosimetryPositronCutoff, 'Visible', 'off');
    
                set(txtDosimetryPositronSourceParticles       , 'Visible', 'on');
                set(edtDosimetryPositronSourceParticles       , 'Visible', 'on');
                set(txtDosimetryPositronSourceParticlesBatches, 'Visible', 'on');
                set(edtDosimetryPositronSourceParticlesBatches, 'Visible', 'on');                                              

            otherwise

                set(txtDosimetryPositronCutoff, 'Visible', 'off');
                set(edtDosimetryPositronCutoff, 'Visible', 'off');
        
                set(txtDosimetryPositronSourceParticles       , 'Visible', 'off');
                set(edtDosimetryPositronSourceParticles       , 'Visible', 'off');
                set(txtDosimetryPositronSourceParticlesBatches, 'Visible', 'off');
                set(edtDosimetryPositronSourceParticlesBatches, 'Visible', 'off'); 
        end      

    end

    function edtDosimetryPositronSourceParticlesCallback(hObject, ~)

        voxelDosimetryPositronSourceParticles('set', str2double(get(hObject, 'String')));
    end

    function edtDosimetryPositronSourceParticlesBatchesCallback(hObject, ~)

        voxelDosimetryPositronSourceParticlesBatches('set', str2double(get(hObject, 'String')));
    end

    function edtDosimetryPositronCutoffCallback(hObject, ~)

        voxelDosimetryPositronCutoff('set', str2double(get(hObject, 'String')));
    end

    % Xray    
    
    function popDosimetryXrayCallback(hObject, ~)

        if get(hObject, 'Value') == 2

            set(hObject, 'Value', 3);
            errordlg('Currently, only Local Deposition and Monte Carlo is supported!', 'Method Validation');  
        end

        voxelDosimetryXrayPhysicalModel('set', get(hObject, 'Value'));

        switch get(hObject, 'Value')
        
            case 2 % Kernel Convolution
            
                set(txtDosimetryXrayCutoff, 'Visible', 'on');
                set(edtDosimetryXrayCutoff, 'Visible', 'on');
    
                set(txtDosimetryXraySourceParticles       , 'Visible', 'off');
                set(edtDosimetryXraySourceParticles       , 'Visible', 'off');
                set(txtDosimetryXraySourceParticlesBatches, 'Visible', 'off');
                set(edtDosimetryXraySourceParticlesBatches, 'Visible', 'off'); 

            case 3 % Monte Carlo

                set(txtDosimetryXrayCutoff, 'Visible', 'off');
                set(edtDosimetryXrayCutoff, 'Visible', 'off');
    
                set(txtDosimetryXraySourceParticles       , 'Visible', 'on');
                set(edtDosimetryXraySourceParticles       , 'Visible', 'on');
                set(txtDosimetryXraySourceParticlesBatches, 'Visible', 'on');
                set(edtDosimetryXraySourceParticlesBatches, 'Visible', 'on');                                              

            otherwise

                set(txtDosimetryXrayCutoff, 'Visible', 'off');
                set(edtDosimetryXrayCutoff, 'Visible', 'off');
        
                set(txtDosimetryXraySourceParticles       , 'Visible', 'off');
                set(edtDosimetryXraySourceParticles       , 'Visible', 'off');
                set(txtDosimetryXraySourceParticlesBatches, 'Visible', 'off');
                set(edtDosimetryXraySourceParticlesBatches, 'Visible', 'off'); 
        end      

    end

    function edtDosimetryXraySourceParticlesCallback(hObject, ~)

        voxelDosimetryXraySourceParticles('set', str2double(get(hObject, 'String')));
    end

    function edtDosimetryXraySourceParticlesBatchesCallback(hObject, ~)

        voxelDosimetryXraySourceParticlesBatches('set', str2double(get(hObject, 'String')));
    end

    function edtDosimetryXrayCutoffCallback(hObject, ~)

        voxelDosimetryXrayCutoff('set', str2double(get(hObject, 'String')));
    end

    function chkDosimetryMachineLearningTissueDependantCallback(hObject, ~)

       bObjectValue = get(chkDosimetryMachineLearningTissueDependant, 'Value');
        
        if strcmpi(get(hObject, 'Style'), 'text')
            
            set(chkDosimetryMachineLearningTissueDependant, 'Value', ~bObjectValue);
        end        
        
        bTissueDependant = get(chkDosimetryMachineLearningTissueDependant, 'Value');
    
        if bTissueDependant == true
    
            [sSegmentatorScript, ~] = validateSegmentatorInstallation();
    
            if isempty(sSegmentatorScript)  % External Segmentor is not installed
    
                bTissueDependant = false;
    
                set(chkDosimetryMachineLearningTissueDependant, 'Value', false);
                set(txtDosimetryMachineLearningTissueDependant, 'Enable', 'on');
                set(chkDosimetryMachineLearningTissueDependant, 'Enable', 'off');
    
                sTissueDependant = 'Tissue Dependant';                    
            else
                sTissueDependant = 'Background';
            end
        else
            sTissueDependant = 'Tissue Dependant';        
        end

        set(txtDosimetryTissueDependantBackground, 'String', sTissueDependant);

        voxelDosimetryMachineLearningTissueDependant('set', bTissueDependant);
    end


    function popDosimetryTissueDependantCallback(hObject, ~)

        voxelDosimetryTissueDependantBackground('set', get(hObject, 'Value'));
    end


    function chkDosimetryY90TimeIntegrationFactorCallback(hObject, ~)

        bObjectValue = get(chkDosimetryY90TimeIntegrationFactor, 'Value');
       
        if strcmpi(get(hObject, 'Style'), 'text')
            
            set(chkDosimetryY90TimeIntegrationFactor, 'Value', ~bObjectValue);
        end 
    end

   function chkDosimetryDebugModeCallback(hObject, ~)

        bObjectValue = get(chkDosimetryDebugMode, 'Value');
       
        if strcmpi(get(hObject, 'Style'), 'text')
            
            set(chkDosimetryDebugMode, 'Value', ~bObjectValue);
        end 

        voxelDosimetryPHITSDebugWindow('set', get(chkDosimetryDebugMode, 'Value'));
    end

    function btnDosimetryRadionuclideCallback(~, ~) 

        sRadionuclide = displayPeriodicTable(dlgDosimetry);

        if ~isempty(sRadionuclide)

            voxelDosimetryRadionuclide('set', sRadionuclide);

            set(edtDosimetryRadionuclide, 'String', sRadionuclide);

            setUiControlFromRadionuclide(sRadionuclide);  

            if strcmpi(sRadionuclide, 'y-90')
                set(chkDosimetryY90TimeIntegrationFactor, 'Value', true);
            else
                set(chkDosimetryY90TimeIntegrationFactor, 'Value', false);
            end
        end
    end
  
    function asDosimetryProtocol = getDosimetryProtocolName()
        
        sRootPath = viewerRootPath('get');
        sProtocolPath = sprintf('%s/protocol/', sRootPath);

        f = java.io.File(char(sProtocolPath));
        asListing = f.listFiles();

        sXmlProtocolFileName = '';

        for yy=1:numel(asListing) % If file exist
            if contains(char(asListing(yy)), 'dosimetry.xml')
                sXmlProtocolFileName = char(asListing(yy));
            end
        end

        if isempty(sXmlProtocolFileName)   
            asDosimetryProtocol{1} = ' ';
        else
            stXml = xml2struct(sXmlProtocolFileName);

            if isfield (stXml.dosimetry, 'protocol') 
                dNbXmlProtocol = numel(stXml.dosimetry.protocol);
                if dNbXmlProtocol
                    if dNbXmlProtocol >1
                        
                        asDosimetryProtocol = cell(1, dNbXmlProtocol);
                        for zz=1:dNbXmlProtocol
                            asDosimetryProtocol{zz}=stXml.dosimetry.protocol{1, zz}.protocolName.Text;    
                        end
                    else
                        asDosimetryProtocol{1} = stXml.dosimetry.protocol.protocolName.Text;
                    end
                else
                    asDosimetryProtocol{1} = ' ';
                end
            else
                asDosimetryProtocol{1} = ' ';
            end
        end
    end

    % Delete 

    function deleteDosimetryProtocolCallback(~, ~)
        
        sRootPath = viewerRootPath('get');
        sProtocolPath = sprintf('%s/protocol/', sRootPath);

        f = java.io.File(char(sProtocolPath));
        asListing = f.listFiles();

        sXmlProtocolFileName = '';

        for kk=1:numel(asListing) % If file exist
            if contains(char(asListing(kk)), 'dosimetry.xml')
                sXmlProtocolFileName = char(asListing(kk));
                break;
            end
        end

        asProtocolList  = get(popDosimetryProtocol, 'String');
        dProtocolOffset = get(popDosimetryProtocol, 'Value');
                
        sProtocolName = strtrim(asProtocolList{dProtocolOffset});
        
        if ~isempty(sXmlProtocolFileName) && ...  % Protocol file exist 
           ~isempty(sProtocolName)
       
            st = xml2struct(sXmlProtocolFileName);
            if isfield (st.dosimetry, 'protocol')       
                                
                dNbProtocol = numel(st.dosimetry.protocol);
                if dNbProtocol > 1
                    for pp=1:dNbProtocol
                        if strcmpi(st.dosimetry.protocol{1,pp}.protocolName.Text, sProtocolName)
                            st.dosimetry.protocol{1,pp}=[];
                            st.dosimetry.protocol(cellfun(@isempty, st.dosimetry.protocol)) = [];
                            break;
                        end
                    end
                else
                    if strcmpi(st.dosimetry.protocol.protocolName.Text, sProtocolName)
                        st.dosimetry.protocol=[];
                        st.dosimetry = rmfield(st.dosimetry, 'protocol');                        
                    end                    
                end        
            end
            
            struct2xml(st, sXmlProtocolFileName);
            
            set(popDosimetryProtocol, 'Value', 1);            
            set(popDosimetryProtocol, 'String', getDosimetryProtocolName());            
        end
            
    end

    % Save

    function saveDosimetryProtocolCallback(~, ~)
                
        DLG_PROTOCOL_NAME_X = 380;
        DLG_PROTOCOL_NAME_Y = 100;

        if viewerUIFigure('get') == true
    
            dlgProtocolName = ...
                uifigure('Position', [(getMainWindowPosition('xpos')+(getMainWindowSize('xsize')/2)-DLG_PROTOCOL_NAME_X/2) ...
                                (getMainWindowPosition('ypos')+(getMainWindowSize('ysize')/2)-DLG_PROTOCOL_NAME_Y/2) ...
                                DLG_PROTOCOL_NAME_X ...
                                DLG_PROTOCOL_NAME_Y ...
                                ],...
                       'Resize', 'off', ...
                       'Color', viewerBackgroundColor('get'),...
                       'WindowStyle', 'modal', ...
                       'Name' , 'Protocol Name'...
                       );
        else
            dlgProtocolName = ...
                dialog('Position', [(getMainWindowPosition('xpos')+(getMainWindowSize('xsize')/2)-DLG_PROTOCOL_NAME_X/2) ...
                                    (getMainWindowPosition('ypos')+(getMainWindowSize('ysize')/2)-DLG_PROTOCOL_NAME_Y/2) ...
                                    DLG_PROTOCOL_NAME_X ...
                                    DLG_PROTOCOL_NAME_Y ...
                                    ],...
                       'MenuBar', 'none',...
                       'Resize', 'off', ...    
                       'NumberTitle','off',...
                       'MenuBar', 'none',...
                       'Color', viewerBackgroundColor('get'), ...
                       'Name', 'Protocol Name',...
                       'Toolbar','none'...               
                       );        
        end
        
        axeProtocolName = ...
            axes(dlgProtocolName, ...
                 'Units'   , 'pixels', ...
                 'Position', [0 0 DLG_PROTOCOL_NAME_X DLG_PROTOCOL_NAME_Y], ...
                 'Color'   , viewerBackgroundColor('get'),...
                 'XColor'  , viewerForegroundColor('get'),...
                 'YColor'  , viewerForegroundColor('get'),...
                 'ZColor'  , viewerForegroundColor('get'),...             
                 'Visible' , 'off'...             
                 );
        axeProtocolName.Interactions = [zoomInteraction regionZoomInteraction rulerPanInteraction];
        axeProtocolName.Toolbar = []; 

            uicontrol(dlgProtocolName,...
                      'style'   , 'text',...
                      'string'  , 'Protocol Name',...
                      'horizontalalignment', 'left',...
                      'BackgroundColor', viewerBackgroundColor('get'), ...
                      'ForegroundColor', viewerForegroundColor('get'), ...                   
                      'position', [20 55 150 20]...
                      );
                  
        edtProtocolName = ...
            uicontrol(dlgProtocolName,...
                      'style'   , 'edit',...
                      'string'  , ' ',...
                      'horizontalalignment', 'left',...
                      'BackgroundColor', viewerBackgroundColor('get'), ...
                      'ForegroundColor', viewerForegroundColor('get'), ...                   
                      'position', [170 55 190 20]...
                      );
                  
         % Cancel or Proceed

         uicontrol(dlgProtocolName,...
                   'String','Cancel',...
                   'Position',[285 7 75 25],...
                   'BackgroundColor', viewerBackgroundColor('get'), ...
                   'ForegroundColor', viewerForegroundColor('get'), ...                
                   'Callback', @cancelSaveDosimetryProtocol...
                   );

         uicontrol(dlgProtocolName,...
                  'String','Save',...
                  'Position',[200 7 75 25],...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...               
                  'Callback', @saveDosimetryProtocol...
                  );
              
        function cancelSaveDosimetryProtocol(~, ~)
            
            delete(dlgProtocolName);
        end        
        
        function saveDosimetryProtocol(~, ~)   
            
            asProtocolList = strtrim(get(popDosimetryProtocol, 'String'));
        
            for nn=1:numel(asProtocolList)
                if strcmpi(asProtocolList{nn}, strtrim(get(edtProtocolName, 'String')))
                    
                    progressBar('Error: Protocol name invalid or exist, please use a valid name!');
                    errordlg('Protocol name invalid or exist, please use a valid name!', 'Protocol Name Validation');  
                    return;
                end
            end
                        
            st.dosimetry.guiName.Text = 'dosimetry';
            st.dosimetry.defaultProtocol.Text = '1'; 
            st.dosimetry.Attributes.version = '1.0';
            
            sRootPath = viewerRootPath('get');
            sProtocolPath = sprintf('%s/protocol/', sRootPath);
            
            f = java.io.File(char(sProtocolPath));
            asListing = f.listFiles();

            sXmlProtocolFileName = '';
            
            for kk=1:numel(asListing) % If file exist
                if contains(char(asListing(kk)), 'dosimetry.xml')
                    sXmlProtocolFileName = char(asListing(kk));
                    break;
                end
            end
            
            if isempty(sXmlProtocolFileName)                
                dNbProtocol = 0;        
                sXmlProtocolFileName = sprintf('%s/protocol/dosimetry.xml', sRootPath);
            else    
                stOld = xml2struct(sXmlProtocolFileName);

                if isfield (stOld.dosimetry, 'protocol')                                
                    
                    dNbProtocol = numel(stOld.dosimetry.protocol);
                    
                    st.dosimetry.protocol = cell(1, dNbProtocol+1);
                    
                    if dNbProtocol > 1
                        for pp=1:dNbProtocol
                            st.dosimetry.protocol{1,pp} = stOld.dosimetry.protocol{1,pp};
                        end
                    else
                        st.dosimetry.protocol{1,1} = stOld.dosimetry.protocol;            
                    end                
                else
                    dNbProtocol = 0;
                end
            end
            
            dProtocolOffset = dNbProtocol+1;

            st.dosimetry.protocol{1,dProtocolOffset}.protocolName.Text = strtrim(get(edtProtocolName, 'String'));
            
            delete(dlgProtocolName);

            % Radionuclide

            st.dosimetry.protocol{1,dProtocolOffset}.radionuclide.Text = get(edtDosimetryRadionuclide, 'String');

            % Alpha

            st.dosimetry.protocol{1,dProtocolOffset}.physicalModel.alpha.dosimetryType.Text          = get(popDosimetryAlpha                      , 'Value');
            st.dosimetry.protocol{1,dProtocolOffset}.physicalModel.alpha.cutoff.Text                 = get(edtDosimetryAlphaCutoff                , 'String');
            st.dosimetry.protocol{1,dProtocolOffset}.physicalModel.alpha.sourceParticles.Text        = get(edtDosimetryAlphaSourceParticles       , 'String');
            st.dosimetry.protocol{1,dProtocolOffset}.physicalModel.alpha.sourceParticlesBatches.Text = get(edtDosimetryAlphaSourceParticlesBatches, 'String');

            % Beta

            st.dosimetry.protocol{1,dProtocolOffset}.physicalModel.beta.dosimetryType.Text          = get(popDosimetryBeta                      , 'Value');
            st.dosimetry.protocol{1,dProtocolOffset}.physicalModel.beta.cutoff.Text                 = get(edtDosimetryBetaCutoff                , 'String');
            st.dosimetry.protocol{1,dProtocolOffset}.physicalModel.beta.sourceParticles.Text        = get(edtDosimetryBetaSourceParticles       , 'String');
            st.dosimetry.protocol{1,dProtocolOffset}.physicalModel.beta.sourceParticlesBatches.Text = get(edtDosimetryBetaSourceParticlesBatches, 'String');

            % Gamma

            st.dosimetry.protocol{1,dProtocolOffset}.physicalModel.gamma.dosimetryType.Text          = get(popDosimetryGamma                      , 'Value');
            st.dosimetry.protocol{1,dProtocolOffset}.physicalModel.gamma.cutoff.Text                 = get(edtDosimetryGammaCutoff                , 'String');
            st.dosimetry.protocol{1,dProtocolOffset}.physicalModel.gamma.sourceParticles.Text        = get(edtDosimetryGammaSourceParticles       , 'String');
            st.dosimetry.protocol{1,dProtocolOffset}.physicalModel.gamma.sourceParticlesBatches.Text = get(edtDosimetryGammaSourceParticlesBatches, 'String');

            % MonoenergeticElectron

            st.dosimetry.protocol{1,dProtocolOffset}.physicalModel.monoenergeticElectron.dosimetryType.Text          = get(popDosimetryMonoenergeticElectron                      , 'Value');
            st.dosimetry.protocol{1,dProtocolOffset}.physicalModel.monoenergeticElectron.cutoff.Text                 = get(edtDosimetryMonoenergeticElectronCutoff                , 'String');
            st.dosimetry.protocol{1,dProtocolOffset}.physicalModel.monoenergeticElectron.sourceParticles.Text        = get(edtDosimetryMonoenergeticElectronSourceParticles       , 'String');
            st.dosimetry.protocol{1,dProtocolOffset}.physicalModel.monoenergeticElectron.sourceParticlesBatches.Text = get(edtDosimetryMonoenergeticElectronSourceParticlesBatches, 'String');

            % Positron

            st.dosimetry.protocol{1,dProtocolOffset}.physicalModel.positron.dosimetryType.Text          = get(popDosimetryPositron                      , 'Value');
            st.dosimetry.protocol{1,dProtocolOffset}.physicalModel.positron.cutoff.Text                 = get(edtDosimetryPositronCutoff                , 'String');
            st.dosimetry.protocol{1,dProtocolOffset}.physicalModel.positron.sourceParticles.Text        = get(edtDosimetryPositronSourceParticles       , 'String');
            st.dosimetry.protocol{1,dProtocolOffset}.physicalModel.positron.sourceParticlesBatches.Text = get(edtDosimetryPositronSourceParticlesBatches, 'String');

            % Xray

            st.dosimetry.protocol{1,dProtocolOffset}.physicalModel.xRay.dosimetryType.Text          = get(popDosimetryXray                      , 'Value');
            st.dosimetry.protocol{1,dProtocolOffset}.physicalModel.xRay.cutoff.Text                 = get(edtDosimetryXrayCutoff                , 'String');
            st.dosimetry.protocol{1,dProtocolOffset}.physicalModel.xRay.sourceParticles.Text        = get(edtDosimetryXraySourceParticles       , 'String');
            st.dosimetry.protocol{1,dProtocolOffset}.physicalModel.xRay.sourceParticlesBatches.Text = get(edtDosimetryXraySourceParticlesBatches, 'String');

            % Tissue Dependant

            st.dosimetry.protocol{1,dProtocolOffset}.tissueDependant.machineLearning.enable.Text = get(chkDosimetryMachineLearningTissueDependant, 'Value');
            st.dosimetry.protocol{1,dProtocolOffset}.tissueDependant.value.Text                  = get(popDosimetryTissueDependantBackground     , 'Value');

            % Options

            st.dosimetry.protocol{1,dProtocolOffset}.options.y90timeIntegrationFactor.enable.Text = get(chkDosimetryY90TimeIntegrationFactor, 'Value');
            st.dosimetry.protocol{1,dProtocolOffset}.options.debugWindowMode.enable.Text          = get(chkDosimetryDebugMode, 'Value');

            struct2xml(st, sXmlProtocolFileName);
            
            set(popDosimetryProtocol, 'String', getDosimetryProtocolName());

        end
    end

    % Load

    function loadDosimetryProtocolCallback(~, ~)  
        
        % Refer saveDosimetryProtocol() for the saved element list
        
        sRootPath = viewerRootPath('get');
        sProtocolPath = sprintf('%s/protocol/', sRootPath);

        f = java.io.File(char(sProtocolPath));
        asListing = f.listFiles();

        sXmlProtocolFileName = '';

        for kk=1:numel(asListing) % If file exist
            if contains(char(asListing(kk)), 'dosimetry.xml')
                sXmlProtocolFileName = char(asListing(kk));
                break;
            end
        end

        asProtocolList  = get(popDosimetryProtocol, 'String');
        dProtocolOffset = get(popDosimetryProtocol, 'Value');
                
        sProtocolName = asProtocolList{dProtocolOffset};
        
        if ~isempty(sXmlProtocolFileName)  % Protocol file exist 
                   
            st = xml2struct(sXmlProtocolFileName);
            if isfield (st.dosimetry, 'protocol')       
                
                stDosimetry = [];
                
                dNbProtocol = numel(st.dosimetry.protocol);
                if dNbProtocol > 1
                    for pp=1:dNbProtocol
                        if strcmpi(st.dosimetry.protocol{1,pp}.protocolName.Text, sProtocolName)
                            stDosimetry = st.dosimetry.protocol{1,pp};                                                        
                        end
                    end
                else
                    if strcmpi(st.dosimetry.protocol.protocolName.Text, sProtocolName)
                        stDosimetry = st.dosimetry.protocol;                          
                    end                    
                end                
                
                 if ~isempty(stDosimetry)

                    % Radionuclide

                    set(edtDosimetryRadionuclide, 'String', stDosimetry.radionuclide.Text);

                    voxelDosimetryRadionuclide('set', stDosimetry.radionuclide.Text);

                    % Alpha
                    
                    set(popDosimetryAlpha, 'Value', str2double(stDosimetry.physicalModel.alpha.dosimetryType.Text));

                    set(edtDosimetryAlphaCutoff                , 'String', stDosimetry.physicalModel.alpha.cutoff.Text);
                    set(edtDosimetryAlphaSourceParticles       , 'String', stDosimetry.physicalModel.alpha.sourceParticles.Text);
                    set(edtDosimetryAlphaSourceParticlesBatches, 'String', stDosimetry.physicalModel.alpha.sourceParticlesBatches.Text); 

                    voxelDosimetryAlphaPhysicalModel('set', str2double(stDosimetry.physicalModel.alpha.dosimetryType.Text));

                    voxelDosimetryAlphaCutoff                ('set', str2double(stDosimetry.physicalModel.alpha.cutoff.Text));
                    voxelDosimetryAlphaSourceParticles       ('set', str2double(stDosimetry.physicalModel.alpha.sourceParticles.Text));
                    voxelDosimetryAlphaSourceParticlesBatches('set', str2double(stDosimetry.physicalModel.alpha.sourceParticlesBatches.Text));

                    % Beta
                    
                    set(popDosimetryBeta, 'Value', str2double(stDosimetry.physicalModel.beta.dosimetryType.Text));

                    set(edtDosimetryBetaCutoff                , 'String', stDosimetry.physicalModel.beta.cutoff.Text);
                    set(edtDosimetryBetaSourceParticles       , 'String', stDosimetry.physicalModel.beta.sourceParticles.Text);
                    set(edtDosimetryBetaSourceParticlesBatches, 'String', stDosimetry.physicalModel.beta.sourceParticlesBatches.Text); 

                    voxelDosimetryBetaPhysicalModel('set', str2double(stDosimetry.physicalModel.beta.dosimetryType.Text));

                    voxelDosimetryBetaCutoff                ('set', str2double(stDosimetry.physicalModel.beta.cutoff.Text));
                    voxelDosimetryBetaSourceParticles       ('set', str2double(stDosimetry.physicalModel.beta.sourceParticles.Text));
                    voxelDosimetryBetaSourceParticlesBatches('set', str2double(stDosimetry.physicalModel.beta.sourceParticlesBatches.Text));

                    % Gamma
                    
                    set(popDosimetryGamma, 'Value', str2double(stDosimetry.physicalModel.gamma.dosimetryType.Text));

                    set(edtDosimetryGammaCutoff                , 'String', stDosimetry.physicalModel.gamma.cutoff.Text);
                    set(edtDosimetryGammaSourceParticles       , 'String', stDosimetry.physicalModel.gamma.sourceParticles.Text);
                    set(edtDosimetryGammaSourceParticlesBatches, 'String', stDosimetry.physicalModel.gamma.sourceParticlesBatches.Text); 

                    voxelDosimetryGammaPhysicalModel('set', str2double(stDosimetry.physicalModel.gamma.dosimetryType.Text));

                    voxelDosimetryGammaCutoff                ('set', str2double(stDosimetry.physicalModel.gamma.cutoff.Text));
                    voxelDosimetryGammaSourceParticles       ('set', str2double(stDosimetry.physicalModel.gamma.sourceParticles.Text));
                    voxelDosimetryGammaSourceParticlesBatches('set', str2double(stDosimetry.physicalModel.gamma.sourceParticlesBatches.Text));       

                    % Monoenergetic Electron
                    
                    set(popDosimetryMonoenergeticElectron, 'Value', str2double(stDosimetry.physicalModel.monoenergeticElectron.dosimetryType.Text));

                    set(edtDosimetryMonoenergeticElectronCutoff                , 'String', stDosimetry.physicalModel.monoenergeticElectron.cutoff.Text);
                    set(edtDosimetryMonoenergeticElectronSourceParticles       , 'String', stDosimetry.physicalModel.monoenergeticElectron.sourceParticles.Text);
                    set(edtDosimetryMonoenergeticElectronSourceParticlesBatches, 'String', stDosimetry.physicalModel.monoenergeticElectron.sourceParticlesBatches.Text); 

                    voxelDosimetryMonoenergeticElectronPhysicalModel('set', str2double(stDosimetry.physicalModel.monoenergeticElectron.dosimetryType.Text));

                    voxelDosimetryMonoenergeticElectronCutoff                ('set', str2double(stDosimetry.physicalModel.monoenergeticElectron.cutoff.Text));
                    voxelDosimetryMonoenergeticElectronSourceParticles       ('set', str2double(stDosimetry.physicalModel.monoenergeticElectron.sourceParticles.Text));
                    voxelDosimetryMonoenergeticElectronSourceParticlesBatches('set', str2double(stDosimetry.physicalModel.monoenergeticElectron.sourceParticlesBatches.Text));    


                    % Positron
                    
                    set(popDosimetryPositron, 'Value', str2double(stDosimetry.physicalModel.positron.dosimetryType.Text));

                    set(edtDosimetryPositronCutoff                , 'String', stDosimetry.physicalModel.positron.cutoff.Text);
                    set(edtDosimetryPositronSourceParticles       , 'String', stDosimetry.physicalModel.positron.sourceParticles.Text);
                    set(edtDosimetryPositronSourceParticlesBatches, 'String', stDosimetry.physicalModel.positron.sourceParticlesBatches.Text); 

                    voxelDosimetryPositronPhysicalModel('set', str2double(stDosimetry.physicalModel.positron.dosimetryType.Text));

                    voxelDosimetryPositronCutoff                ('set', str2double(stDosimetry.physicalModel.positron.cutoff.Text));
                    voxelDosimetryPositronSourceParticles       ('set', str2double(stDosimetry.physicalModel.positron.sourceParticles.Text));
                    voxelDosimetryPositronSourceParticlesBatches('set', str2double(stDosimetry.physicalModel.positron.sourceParticlesBatches.Text));    

                    % Xray
                    
                    set(popDosimetryXray, 'Value', str2double(stDosimetry.physicalModel.xRay.dosimetryType.Text));

                    set(edtDosimetryXrayCutoff                , 'String', stDosimetry.physicalModel.xRay.cutoff.Text);
                    set(edtDosimetryXraySourceParticles       , 'String', stDosimetry.physicalModel.xRay.sourceParticles.Text);
                    set(edtDosimetryXraySourceParticlesBatches, 'String', stDosimetry.physicalModel.xRay.sourceParticlesBatches.Text); 

                    voxelDosimetryXrayPhysicalModel('set', str2double(stDosimetry.physicalModel.xRay.dosimetryType.Text));

                    voxelDosimetryXrayCutoff                ('set', str2double(stDosimetry.physicalModel.xRay.cutoff.Text));
                    voxelDosimetryXraySourceParticles       ('set', str2double(stDosimetry.physicalModel.xRay.sourceParticles.Text));
                    voxelDosimetryXraySourceParticlesBatches('set', str2double(stDosimetry.physicalModel.xRay.sourceParticlesBatches.Text));                        

                    % Tissue Dependant

                    set(chkDosimetryMachineLearningTissueDependant, 'Value', str2double(stDosimetry.tissueDependant.machineLearning.enable.Text));
                    set(popDosimetryTissueDependantBackground     , 'Value', str2double(stDosimetry.tissueDependant.value.Text));

                    voxelDosimetryMachineLearningTissueDependant('set', str2double(stDosimetry.tissueDependant.machineLearning.enable.Text));
                    voxelDosimetryTissueDependantBackground     ('set', str2double(stDosimetry.tissueDependant.value.Text));

                    setUiControlFromRadionuclide(get(edtDosimetryRadionuclide, 'string'));

                    % Options

                    set(chkDosimetryY90TimeIntegrationFactor, 'Value', str2double(stDosimetry.options.y90timeIntegrationFactor.enable.Text));
                    set(chkDosimetryDebugMode               , 'Value', str2double(stDosimetry.options.debugWindowMode.enable.Text)); 


                end
            end                      
        end                            
    end

    function chkDosimetryContourCallback(hObject, ~)

        bObjectValue = get(chkDosimetryContour, 'Value');
       
        if strcmpi(get(hObject, 'Style'), 'text')
            
            set(chkDosimetryContour, 'Value', ~bObjectValue);
        end 

        if  get(chkDosimetryContour, 'Value') == true
    
            set(popDosimetryContours, 'Enable', 'on');
            
        else
    
            set(popDosimetryContours, 'Enable', 'off');
        end

    end

    function chkDosimetryAllContoursCallback(hObject, ~)

        bObjectValue = get(chkDosimetryAllContours, 'Value');
       
        if strcmpi(get(hObject, 'Style'), 'text')
            
            set(chkDosimetryAllContours, 'Value', ~bObjectValue);
        end 

        voxelDosimetryAllContours('set', get(chkDosimetryAllContours, 'Value'));

        if  get(chkDosimetryAllContours, 'Value') == true
    
            set(txtDosimetryContour, 'Enable', 'on');
    
            set(chkDosimetryContour, 'Enable', 'off');
            set(chkDosimetryContour, 'Value', false);
    
            set(popDosimetryContours, 'Enable', 'off');
            
        else
            set(txtDosimetryContour, 'Enable', 'inactive');
            set(chkDosimetryContour, 'Enable', 'on');
    
            if get(chkDosimetryContour, 'Value') == true
                set(popDosimetryContours, 'Enable', 'on');
            else
                set(popDosimetryContours, 'Enable', 'off');
            end
        end

    end

    function cancelDosimetryFromContoursCallback(~, ~)

        delete(dlgDosimetry);
    end

    function computeDosimetryFromContoursCallback(~, ~)

        if get(chkDosimetryMachineLearningTissueDependant, 'Value') == true

            [sSegmentatorScript, ~] = validateSegmentatorInstallation();
        else
            sSegmentatorScript = [];
        end


        % Radionuclide

        stDosimetry.radionuclide = get(edtDosimetryRadionuclide, 'String');

        % Alpha

        sDosimetryAlphaEnable = get(popDosimetryAlpha, 'Enable');

        if strcmpi(sDosimetryAlphaEnable, 'On')

            bDosimetryAlphaEnable = true;
        else
            bDosimetryAlphaEnable = false;
        end

        asDosimetryTypeAlpha      = get(popDosimetryAlpha, 'String'); 
        dDosimetryTypeAlphaOffset = get(popDosimetryAlpha, 'Value'); 

        stDosimetry.physicalModel.alpha.enable                 = bDosimetryAlphaEnable;
        stDosimetry.physicalModel.alpha.dosimetryType          = asDosimetryTypeAlpha{dDosimetryTypeAlphaOffset};
        stDosimetry.physicalModel.alpha.sourceParticles        = get(edtDosimetryAlphaSourceParticles, 'String');
        stDosimetry.physicalModel.alpha.sourceParticlesBatches = get(edtDosimetryAlphaSourceParticlesBatches, 'String');
        stDosimetry.physicalModel.alpha.cutoff                 = get(edtDosimetryAlphaCutoff, 'String');

        % Beta

        sDosimetryBetaEnable = get(popDosimetryBeta, 'Enable');

        if strcmpi(sDosimetryBetaEnable, 'On')

            bDosimetryBetaEnable = true;
        else
            bDosimetryBetaEnable = false;
        end

        asDosimetryTypeBeta      = get(popDosimetryBeta, 'String'); 
        dDosimetryTypeBetaOffset = get(popDosimetryBeta, 'Value'); 

        stDosimetry.physicalModel.beta.enable                 = bDosimetryBetaEnable;
        stDosimetry.physicalModel.beta.dosimetryType          = asDosimetryTypeBeta{dDosimetryTypeBetaOffset};
        stDosimetry.physicalModel.beta.sourceParticles        = get(edtDosimetryBetaSourceParticles, 'String');
        stDosimetry.physicalModel.beta.sourceParticlesBatches = get(edtDosimetryBetaSourceParticlesBatches, 'String');
        stDosimetry.physicalModel.beta.cutoff                 = get(edtDosimetryBetaCutoff, 'String');

        % Gamma

        sDosimetryGammaEnable = get(popDosimetryGamma, 'Enable');

        if strcmpi(sDosimetryGammaEnable, 'On')

            bDosimetryGammaEnable = true;
        else
            bDosimetryGammaEnable = false;
        end

        asDosimetryTypeGamma      = get(popDosimetryGamma, 'String'); 
        dDosimetryTypeGammaOffset = get(popDosimetryGamma, 'Value'); 

        stDosimetry.physicalModel.gamma.enable                 = bDosimetryGammaEnable;
        stDosimetry.physicalModel.gamma.dosimetryType          = asDosimetryTypeGamma{dDosimetryTypeGammaOffset};
        stDosimetry.physicalModel.gamma.sourceParticles        = get(edtDosimetryGammaSourceParticles, 'String');
        stDosimetry.physicalModel.gamma.sourceParticlesBatches = get(edtDosimetryGammaSourceParticlesBatches, 'String');
        stDosimetry.physicalModel.gamma.cutoff                 = get(edtDosimetryGammaCutoff, 'String');

        % MonoenergeticElectron

        sDosimetryMonoenergeticElectronEnable = get(popDosimetryMonoenergeticElectron, 'Enable');

        if strcmpi(sDosimetryMonoenergeticElectronEnable, 'On')

            bDosimetryMonoenergeticElectronEnable = true;
        else
            bDosimetryMonoenergeticElectronEnable = false;
        end

        asDosimetryTypeMonoenergeticElectron      = get(popDosimetryMonoenergeticElectron, 'String'); 
        dDosimetryTypeMonoenergeticElectronOffset = get(popDosimetryMonoenergeticElectron, 'Value'); 

        stDosimetry.physicalModel.monoenergeticElectron.enable                 = bDosimetryMonoenergeticElectronEnable;
        stDosimetry.physicalModel.monoenergeticElectron.dosimetryType          = asDosimetryTypeMonoenergeticElectron{dDosimetryTypeMonoenergeticElectronOffset};
        stDosimetry.physicalModel.monoenergeticElectron.sourceParticles        = get(edtDosimetryMonoenergeticElectronSourceParticles, 'String');
        stDosimetry.physicalModel.monoenergeticElectron.sourceParticlesBatches = get(edtDosimetryMonoenergeticElectronSourceParticlesBatches, 'String');
        stDosimetry.physicalModel.monoenergeticElectron.cutoff                 = get(edtDosimetryMonoenergeticElectronCutoff, 'String');

        % Positron

        sDosimetryPositronEnable = get(popDosimetryPositron, 'Enable');

        if strcmpi(sDosimetryPositronEnable, 'On')

            bDosimetryPositronEnable = true;
        else
            bDosimetryPositronEnable = false;
        end

        asDosimetryTypePositron      = get(popDosimetryPositron, 'String'); 
        dDosimetryTypePositronOffset = get(popDosimetryPositron, 'Value'); 

        stDosimetry.physicalModel.positron.enable                 = bDosimetryPositronEnable;
        stDosimetry.physicalModel.positron.dosimetryType          = asDosimetryTypePositron{dDosimetryTypePositronOffset};
        stDosimetry.physicalModel.positron.sourceParticles        = get(edtDosimetryPositronSourceParticles, 'String');
        stDosimetry.physicalModel.positron.sourceParticlesBatches = get(edtDosimetryPositronSourceParticlesBatches, 'String');
        stDosimetry.physicalModel.positron.cutoff                 = get(edtDosimetryPositronCutoff, 'String');

        % Xray

        sDosimetryXrayEnable = get(popDosimetryXray, 'Enable');

        if strcmpi(sDosimetryXrayEnable, 'On')

            bDosimetryXrayEnable = true;
        else
            bDosimetryXrayEnable = false;
        end

        asDosimetryTypeXray      = get(popDosimetryXray, 'String'); 
        dDosimetryTypeXrayOffset = get(popDosimetryXray, 'Value'); 

        stDosimetry.physicalModel.xRay.enable                 = bDosimetryXrayEnable;
        stDosimetry.physicalModel.xRay.dosimetryType          = asDosimetryTypeXray{dDosimetryTypeXrayOffset};
        stDosimetry.physicalModel.xRay.sourceParticles        = get(edtDosimetryXraySourceParticles, 'String');
        stDosimetry.physicalModel.xRay.sourceParticlesBatches = get(edtDosimetryXraySourceParticlesBatches, 'String');
        stDosimetry.physicalModel.xRay.cutoff                 = get(edtDosimetryXrayCutoff, 'String');

        % Tissue Dependant

        stDosimetry.tissueDependant.machineLearning.enable = get(chkDosimetryMachineLearningTissueDependant, 'Value');
     
        asDependantBackground = get(popDosimetryTissueDependantBackground, 'String'); 
        dDependantOffset      = get(popDosimetryTissueDependantBackground, 'Value'); 

        stDosimetry.tissueDependant.background = asDependantBackground{dDependantOffset};

        % Options

        stDosimetry.options.y90timeIntegrationFactor = get(chkDosimetryY90TimeIntegrationFactor, 'Value');
        stDosimetry.options.debugWindowMode          = get(chkDosimetryDebugMode, 'Value');        

        % Contours

        stDosimetry.contours.all    =  get(chkDosimetryAllContours, 'Value');
        stDosimetry.contours.single =  get(chkDosimetryContour, 'Value');
    
        atVoiInput = voiTemplate('get', get(uiSeriesPtr('get'), 'Value'));   
        if isempty(atVoiInput)
            dContourOffset = [];
        else
            if get(chkDosimetryContour, 'Value') == true
                dContourOffset = get(popDosimetryContours, 'Value');
            else
                dContourOffset = [];
            end
        end

        stDosimetry.contours.offset = dContourOffset;

        delete(dlgDosimetry);

        computeVoxelDosimetry(sDosimetryScriptPath, sSegmentatorScript, stDosimetry, true);
    end
% 
%     function uiDosimetrySliderCallback(~, ~)
% 
%         val = get(uiDosimetrySlider, 'Value');
%     
%         aPosition = get(uiDosimetry, 'Position');
%     
%         dPanelOffset = -((1-val) * aPosition(4));
%     
%         set(uiDosimetry, ...
%             'Position', [aPosition(1) ...
%                          0-dPanelOffset ...
%                          aPosition(3) ...
%                          aPosition(4) ...
%                          ] ...
%             );
%     end

end