function setSegmentationFDGPercentCallback(hObject, ~)
%function setSegmentationFDGPercentCallback()
%Run FDG Tumor Segmentation, The tool is called from the main menu.
%See TriDFuison.doc (or pdf) for more information about options.
%
%Author: Daniel Lafontaine, lafontad@mskcc.org
%
%Last specifications modified:
%
% Copyright 2023, Daniel Lafontaine, on behalf of the TriDFusion development team.
%
% This file is part of The Triple Dimention Fusion (TriDFusion).
%
% TriDFusion development has been led by:  Daniel Lafontaine
%
% TriDFusion is distributed under the terms of the Lesser GNU Public License.
%
%     This version of TriDFusion is free software: you can redistribute it and/or modify
%     it under the terms of the GNU General Public License as published by
%     the Free Software Foundation, either version 3 of the License, or
%     (at your option) any later version.
%
% TriDFusion is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
% without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
% See the GNU General Public License for more details.
%
% You should have received a copy of the GNU General Public License
% along with TriDFusion.  If not, see <http://www.gnu.org/licenses/>.

    if exist('hObject', 'var')

        DLG_FDG_PERCENT_X = 380;
        DLG_FDG_PERCENT_Y = 250;

        if viewerUIFigure('get') == true
    
            dlgFDGSegmentation = ...
                uifigure('Position', [(getMainWindowPosition('xpos')+(getMainWindowSize('xsize')/2)-DLG_FDG_PERCENT_X/2) ...
                                    (getMainWindowPosition('ypos')+(getMainWindowSize('ysize')/2)-DLG_FDG_PERCENT_Y/2) ...
                                    DLG_FDG_PERCENT_X ...
                                    DLG_FDG_PERCENT_Y ...
                                    ],...
                       'Resize', 'off', ...
                       'Color', viewerBackgroundColor('get'),...
                       'WindowStyle', 'modal', ...
                       'Name' , 'FDG Segmentation'...
                       );
        else      
            dlgFDGSegmentation = ...
                dialog('Position', [(getMainWindowPosition('xpos')+(getMainWindowSize('xsize')/2)-DLG_FDG_PERCENT_X/2) ...
                                    (getMainWindowPosition('ypos')+(getMainWindowSize('ysize')/2)-DLG_FDG_PERCENT_Y/2) ...
                                    DLG_FDG_PERCENT_X ...
                                    DLG_FDG_PERCENT_Y ...
                                    ],...
                       'MenuBar', 'none',...
                       'Resize', 'off', ...    
                       'NumberTitle','off',...
                       'MenuBar', 'none',...
                       'Color', viewerBackgroundColor('get'), ...
                       'Name', 'FDG Segmentation',...
                       'Toolbar','none'...               
                       );
        end

        setObjectIcon(dlgFDGSegmentation);

        % Boundary percent of max
    
            uicontrol(dlgFDGSegmentation,...
                      'style'   , 'text',...
                      'Enable'  , 'On',...
                      'string'  , 'Boundary percent of max',...
                      'horizontalalignment', 'left',...
                      'BackgroundColor', viewerBackgroundColor('get'), ...
                      'ForegroundColor', viewerForegroundColor('get'), ...                   
                      'position', [20 215 250 20]...
                      );
    
        edtFDGBoundaryPercentOfMaxValue = ...
            uicontrol(dlgFDGSegmentation, ...
                      'Style'   , 'Edit', ...
                      'Position', [285 215 75 20], ...
                      'String'  , num2str(FDGSegmentationBoundaryPercentValue('get')), ...
                      'Enable'  , 'on', ...
                      'BackgroundColor', viewerBackgroundColor('get'), ...
                      'ForegroundColor', viewerForegroundColor('get'), ...
                      'CallBack', @edtFDGBoundaryPercentOfMaxValueCallback ...
                      ); 
    
        % Percent of peak value
    
            uicontrol(dlgFDGSegmentation,...
                      'style'   , 'text',...
                      'Enable'  , 'On',...
                      'string'  , 'Percent of Peak',...
                      'horizontalalignment', 'left',...
                      'BackgroundColor', viewerBackgroundColor('get'), ...
                      'ForegroundColor', viewerForegroundColor('get'), ...                   
                      'position', [20 190 250 20]...
                      );
    
        edtFDGPercentOfPeakdValue = ...
            uicontrol(dlgFDGSegmentation, ...
                      'Style'   , 'Edit', ...
                      'Position', [285 190 75 20], ...
                      'String'  , num2str(FDGSegmentationPercentOfPeakValue('get')), ...
                      'Enable'  , 'on', ...
                      'BackgroundColor', viewerBackgroundColor('get'), ...
                      'ForegroundColor', viewerForegroundColor('get'), ...
                      'CallBack', @edtFDGPercentOfPeakdValueCallback ...
                      ); 
    
        % Multiple peaks
    
            uicontrol(dlgFDGSegmentation,...
                      'style'   , 'text',...
                      'Enable'  , 'On',...
                      'string'  , 'Multiple Peaks (% of peak)',...
                      'horizontalalignment', 'left',...
                      'BackgroundColor', viewerBackgroundColor('get'), ...
                      'ForegroundColor', viewerForegroundColor('get'), ...                   
                      'position', [20 165 250 20]...
                      );
    
        edtFDGMultiplePeaksValue = ...
            uicontrol(dlgFDGSegmentation, ...
                      'Style'   , 'Edit', ...
                      'Position', [285 165 75 20], ...
                      'String'  , num2str(FDGSegmentationMultiplePeaksValue('get')), ...
                      'Enable'  , 'on', ...
                      'BackgroundColor', viewerBackgroundColor('get'), ...
                      'ForegroundColor', viewerForegroundColor('get'), ...
                      'CallBack', @edtFDGMultiplePeaksValueCallback ...
                      ); 
    
        % Bone mask threshold
    
            uicontrol(dlgFDGSegmentation,...
                      'style'   , 'text',...
                      'Enable'  , 'On',...
                      'string'  , 'Bone mask threshold (HU)',...
                      'horizontalalignment', 'left',...
                      'BackgroundColor', viewerBackgroundColor('get'), ...
                      'ForegroundColor', viewerForegroundColor('get'), ...                   
                      'position', [20 140 250 20]...
                      );
    
        edtFDGBoneMaskThresholdValue = ...
            uicontrol(dlgFDGSegmentation, ...
                      'Style'   , 'Edit', ...
                      'Position', [285 140 75 20], ...
                      'String'  , num2str(FDGSegmentationBoneMaskThresholdValue('get')), ...
                      'Enable'  , 'on', ...
                      'BackgroundColor', viewerBackgroundColor('get'), ...
                      'ForegroundColor', viewerForegroundColor('get'), ...
                      'CallBack', @edtFDGBoneMaskThresholdValueCallback ...
                      ); 
        % Pixel Edge
    
            uicontrol(dlgFDGSegmentation,...
                      'style'   , 'text',...
                      'Enable'  , 'Inactive',...
                      'string'  , 'Pixel Edge',...
                      'horizontalalignment', 'left',...
                      'BackgroundColor', viewerBackgroundColor('get'), ...
                      'ForegroundColor', viewerForegroundColor('get'), ...                   
                      'ButtonDownFcn'  , @chkFDGPixelEdgeCallback, ...
                      'position', [40 90 150 20]...
                      );
    
        chkFDGPixelEdge = ...
            uicontrol(dlgFDGSegmentation,...
                      'style'   , 'checkbox',...
                      'enable'  , 'on',...
                      'value'   , pixelEdge('get'),...
                      'position', [20 90 20 20],...
                      'BackgroundColor', viewerBackgroundColor('get'), ...
                      'ForegroundColor', viewerForegroundColor('get'), ...                   
                      'Callback', @chkFDGPixelEdgeCallback...
                      );
    
        % Smallest Contour (ml)
    
            uicontrol(dlgFDGSegmentation,...
                      'style'   , 'text',...
                      'Enable'  , 'On',...
                      'string'  , 'Smallest Contour (ml)',...
                      'horizontalalignment', 'left',...
                      'BackgroundColor', viewerBackgroundColor('get'), ...
                      'ForegroundColor', viewerForegroundColor('get'), ...                   
                      'position', [20 65 250 20]...
                      );
    
        edtFDGSmalestVoiValue = ...
            uicontrol(dlgFDGSegmentation, ...
                      'Style'   , 'Edit', ...
                      'Position', [285 65 75 20], ...
                      'String'  , num2str(FDGSmalestVoiValue('get')), ...
                      'Enable'  , 'on', ...
                      'BackgroundColor', viewerBackgroundColor('get'), ...
                      'ForegroundColor', viewerForegroundColor('get'), ...
                      'CallBack', @edtFDGSmalestVoiValueCallback ...
                      );        
    
         % Cancel or Proceed
    
         uicontrol(dlgFDGSegmentation,...
                   'String','Cancel',...
                   'Position',[285 7 75 25],...
                   'BackgroundColor', viewerBackgroundColor('get'), ...
                   'ForegroundColor', viewerForegroundColor('get'), ...                
                   'Callback', @cancelFDGSegmentationCallback...
                   );
    
         uicontrol(dlgFDGSegmentation,...
                  'String','Proceed',...
                  'Position',[200 7 75 25],...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...               
                  'Callback', @proceedFDGSegmentationCallback...
                  );    

    else % Execute the segmentation using the default values

         setSegmentationFDGPercent(FDGSegmentationBoneMaskThresholdValue('get'), ...
                                  FDGSegmentationBoundaryPercentValue('get')/100, ...
                                  FDGSmalestVoiValue('get'), ...
                                  pixelEdge('get'), ...
                                  FDGSegmentationPercentOfPeakValue('get'), ...
                                  FDGSegmentationMultiplePeaksValue('get'));       
    end

    function edtFDGSmalestVoiValueCallback(~, ~)

        dObjectValue = str2double(get(edtFDGSmalestVoiValue, 'String'));

        if dObjectValue < 0

            dObjectValue = 0;

            set(edtFDGSmalestVoiValue, 'String', num2str(dObjectValue));
        end

        FDGSmalestVoiValue('set', dObjectValue);

    end

    function chkFDGPixelEdgeCallback(hObject, ~)  
                
        bObjectValue = get(chkFDGPixelEdge, 'Value');
        
        if strcmpi(get(hObject, 'Style'), 'text')
            
            set(chkFDGPixelEdge, 'Value', ~bObjectValue);
        end        
        
        bObjectValue = get(chkFDGPixelEdge, 'Value');

        pixelEdge('set', bObjectValue);
        
        % Set contour panel checkbox
        set(chkPixelEdgePtr('get'), 'Value', pixelEdge('get'));
    end

    function edtFDGBoundaryPercentOfMaxValueCallback(~, ~)     

        dBoundaryPercent = str2double(get(edtFDGBoundaryPercentOfMaxValue, 'String'));

        if dBoundaryPercent <= 0

            dBoundaryPercent = 10;
            set(edtFDGBoundaryPercentOfMaxValue, 'String', num2str(dBoundaryPercent));

        elseif dBoundaryPercent >= 100
            
            dBoundaryPercent = 10;
            set(edtFDGBoundaryPercentOfMaxValue, 'String', num2str(dBoundaryPercent));           
        end

        FDGSegmentationBoundaryPercentValue('set', dBoundaryPercent);

    end

    function edtFDGPercentOfPeakdValueCallback(~, ~)     

        dPercentOdPeakValue = str2double(get(edtFDGPercentOfPeakdValue, 'String'));

        if dPercentOdPeakValue < 0

            dPercentOdPeakValue = 0;
            set(edtFDGPercentOfPeakdValue, 'String', num2str(dPercentOdPeakValue));        
        end

        FDGSegmentationPercentOfPeakValue('set', dPercentOdPeakValue);
    end

    function edtFDGMultiplePeaksValueCallback(~, ~)     

        dMultiplePeaksValue = str2double(get(edtFDGMultiplePeaksValue, 'String'));

        if dMultiplePeaksValue < 0

            dMultiplePeaksValue = 0;
            set(edtFDGMultiplePeaksValue, 'String', num2str(dMultiplePeaksValue));        
        end

        FDGSegmentationMultiplePeaksValue('set', dMultiplePeaksValue);
    end

    function edtFDGBoneMaskThresholdValueCallback(~, ~)     

        dBoneMaskThreshold = str2double(get(edtFDGBoneMaskThresholdValue, 'String'));

        if dBoneMaskThreshold <= 0

            dBoneMaskThreshold = 100;
            set(edtFDGBoneMaskThresholdValue, 'String', num2str(dBoneMaskThreshold));        
        end

        FDGSegmentationBoneMaskThresholdValue('set', dBoneMaskThreshold);

    end

    function cancelFDGSegmentationCallback(~, ~)   

        delete(dlgFDGSegmentation);
    end
    
    function proceedFDGSegmentationCallback(~, ~)

        dSmalestVoiValue   = str2double(get(edtFDGSmalestVoiValue, 'String'));
        dPixelEdge         = get(chkFDGPixelEdge, 'value');
        dBoundaryPercent   = str2double(get(edtFDGBoundaryPercentOfMaxValue, 'String'))/100;
        dPercentOdPeakValue = str2double(get(edtFDGPercentOfPeakdValue, 'String'));
        dMultiplePeaksValue = str2double(get(edtFDGMultiplePeaksValue, 'String'));
        dBoneMaskThreshold = str2double(get(edtFDGBoneMaskThresholdValue, 'String'));

        delete(dlgFDGSegmentation);

        setSegmentationFDGPercent(dBoneMaskThreshold, dBoundaryPercent, dSmalestVoiValue, dPixelEdge, dPercentOdPeakValue, dMultiplePeaksValue); % Percent of peak
    end

end
