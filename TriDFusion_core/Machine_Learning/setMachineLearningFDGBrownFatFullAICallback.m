function setMachineLearningFDGBrownFatFullAICallback(hObject, ~)
%function setMachineLearningFDGBrownFatFullAICallback(hObject)
%Run FDG SUV Brown Fat PET\CT Segmentation, The tool is called from the main menu.
%See TriDFuison.doc (or pdf) for more information about options.
%
%Author: Daniel Lafontaine, lafontad@mskcc.org
%
%Last specifications modified:
%
% Copyright 2023, Daniel Lafontaine, on behalf of the TriDFusion development team.
%
% This file is part of The Triple Dimention Fusion (TriDFusion).
%
% TriDFusion development has been led by:  Daniel Lafontaine
%
% TriDFusion is distributed under the terms of the Lesser GNU Public License.
%
%     This version of TriDFusion is free software: you can redistribute it and/or modify
%     it under the terms of the GNU General Public License as published by
%     the Free Software Foundation, either version 3 of the License, or
%     (at your option) any later version.
%
% TriDFusion is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
% without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
% See the GNU General Public License for more details.
%
% You should have received a copy of the GNU General Public License
% along with TriDFusion.  If not, see <http://www.gnu.org/licenses/>.

    [sPredictScript] = validateNnUNetv2Installation();

    dlgFDGBrownFatFullAISegmentation  = [];

    if ~isempty(sPredictScript) ... % External Segmentor is installed

        if exist('hObject', 'var')

            DLG_FDG_BROWN_FAT_PERCENT_X = 380;
            DLG_FDG_BROWN_FAT_PERCENT_Y = 190;

            if viewerUIFigure('get') == true

                dlgFDGBrownFatFullAISegmentation = ...
                    uifigure('Position', [(getMainWindowPosition('xpos')+(getMainWindowSize('xsize')/2)-DLG_FDG_BROWN_FAT_PERCENT_X/2) ...
                                        (getMainWindowPosition('ypos')+(getMainWindowSize('ysize')/2)-DLG_FDG_BROWN_FAT_PERCENT_Y/2) ...
                                        DLG_FDG_BROWN_FAT_PERCENT_X ...
                                        DLG_FDG_BROWN_FAT_PERCENT_Y ...
                                        ],...
                           'Resize', 'off', ...
                           'Color', viewerBackgroundColor('get'),...
                           'WindowStyle', 'modal', ...
                           'Name' , 'FDG Machine Learning Full AI Brown Fat Segmentation'...
                           );
            else
                dlgFDGBrownFatFullAISegmentation = ...
                    dialog('Position', [(getMainWindowPosition('xpos')+(getMainWindowSize('xsize')/2)-DLG_FDG_BROWN_FAT_PERCENT_X/2) ...
                                        (getMainWindowPosition('ypos')+(getMainWindowSize('ysize')/2)-DLG_FDG_BROWN_FAT_PERCENT_Y/2) ...
                                        DLG_FDG_BROWN_FAT_PERCENT_X ...
                                        DLG_FDG_BROWN_FAT_PERCENT_Y ...
                                        ],...
                           'MenuBar', 'none',...
                           'Resize', 'off', ...
                           'NumberTitle','off',...
                           'MenuBar', 'none',...
                           'Color', viewerBackgroundColor('get'), ...
                           'Name', 'FDG Machine Learning Full AI Brown Fat Segmentation',...
                           'Toolbar','none'...
                           );
            end

            setObjectIcon(dlgFDGBrownFatFullAISegmentation);

            % Fast Segmentation

                uicontrol(dlgFDGBrownFatFullAISegmentation,...
                          'style'   , 'text',...
                          'Enable'  , 'Inactive',...
                          'string'  , 'Fast Segmentation',...
                          'horizontalalignment', 'left',...
                          'BackgroundColor', viewerBackgroundColor('get'), ...
                          'ForegroundColor', viewerForegroundColor('get'), ...
                          'ButtonDownFcn'  , @chkFDGBrownFatFullAIFastSegmentationCallback, ...
                          'position', [40 140 150 20]...
                          );

            chkFDGBrownFatFullAIFastSegmentation = ...
                uicontrol(dlgFDGBrownFatFullAISegmentation,...
                          'style'   , 'checkbox',...
                          'enable'  , 'on',...
                          'value'   , machineLearningFDGBrownFatFastSegmentation('get'),...
                          'position', [20 140 20 20],...
                          'BackgroundColor', viewerBackgroundColor('get'), ...
                          'ForegroundColor', viewerForegroundColor('get'), ...
                          'Callback', @chkFDGBrownFatFullAIFastSegmentationCallback...
                          );
             
            % Smooth mask

                uicontrol(dlgFDGBrownFatFullAISegmentation,...
                          'style'   , 'text',...
                          'Enable'  , 'Inactive',...
                          'string'  , 'Smooth Mask',...
                          'horizontalalignment', 'left',...
                          'BackgroundColor', viewerBackgroundColor('get'), ...
                          'ForegroundColor', viewerForegroundColor('get'), ...
                          'ButtonDownFcn'  , @chkFDGBrownFatFullAISmoothMaskCallback, ...
                          'position', [40 115 150 20]...
                          );

            chkFDGBrownFatFullAISmoothMask = ...
                uicontrol(dlgFDGBrownFatFullAISegmentation,...
                          'style'   , 'checkbox',...
                          'enable'  , 'on',...
                          'value'   , machineLearningFDGBrownFatSmoothMask('get'),...
                          'position', [20 115 20 20],...
                          'BackgroundColor', viewerBackgroundColor('get'), ...
                          'ForegroundColor', viewerForegroundColor('get'), ...
                          'Callback', @chkFDGBrownFatFullAISmoothMaskCallback...
                          );

             % Pixel Edge

                uicontrol(dlgFDGBrownFatFullAISegmentation,...
                          'style'   , 'text',...
                          'Enable'  , 'Inactive',...
                          'string'  , 'Pixel Edge',...
                          'horizontalalignment', 'left',...
                          'BackgroundColor', viewerBackgroundColor('get'), ...
                          'ForegroundColor', viewerForegroundColor('get'), ...
                          'ButtonDownFcn'  , @chkFDGBrownFatFullAIPixelEdgeCallback, ...
                          'position', [40 90 150 20]...
                          );

            chkFDGBrownFatFullAIPixelEdge = ...
                uicontrol(dlgFDGBrownFatFullAISegmentation,...
                          'style'   , 'checkbox',...
                          'enable'  , 'on',...
                          'value'   , pixelEdge('get'),...
                          'position', [20 90 20 20],...
                          'BackgroundColor', viewerBackgroundColor('get'), ...
                          'ForegroundColor', viewerForegroundColor('get'), ...
                          'Callback', @chkFDGBrownFatFullAIPixelEdgeCallback...
                          );

            % Smallest Contour (ml)

                uicontrol(dlgFDGBrownFatFullAISegmentation,...
                          'style'   , 'text',...
                          'Enable'  , 'On',...
                          'string'  , 'Smallest Contour (ml)',...
                          'horizontalalignment', 'left',...
                          'BackgroundColor', viewerBackgroundColor('get'), ...
                          'ForegroundColor', viewerForegroundColor('get'), ...
                          'position', [20 65 250 20]...
                          );

            edtFDGBrownFatFullAISmallestVoiValue = ...
                uicontrol(dlgFDGBrownFatFullAISegmentation, ...
                          'Style'   , 'Edit', ...
                          'Position', [285 65 75 20], ...
                          'String'  , num2str(machineLearningFDGBrownFatSmallestVoiValue('get')), ...
                          'Enable'  , 'on', ...
                          'BackgroundColor', viewerBackgroundColor('get'), ...
                          'ForegroundColor', viewerForegroundColor('get'), ...
                          'CallBack', @edtFDGBrownFatFullAISmallestVoiValueCallback ...
                          );

             % Cancel or Proceed

             uicontrol(dlgFDGBrownFatFullAISegmentation,...
                       'String','Cancel',...
                       'Position',[285 7 75 25],...
                       'BackgroundColor', viewerBackgroundColor('get'), ...
                       'ForegroundColor', viewerForegroundColor('get'), ...
                       'Callback', @cancelFDGBrownFatFullAISegmentationCallback...
                       );

             uicontrol(dlgFDGBrownFatFullAISegmentation,...
                      'String','Proceed',...
                      'Position',[200 7 75 25],...
                      'BackgroundColor', viewerBackgroundColor('get'), ...
                      'ForegroundColor', viewerForegroundColor('get'), ...
                      'Callback', @proceedFDGBrownFatFullAISegmentationCallback...
                      );
        else

            % Options

            tBrownFatFullAI.options.CELossTrainer        = true;
            tBrownFatFullAI.options.classifySegmentation = true;
            tBrownFatFullAI.options.smoothMask           = machineLearningFDGBrownFatSmoothMask('get');
            tBrownFatFullAI.options.smallestVoiValue     = machineLearningFDGBrownFatSmallestVoiValue('get');
            tBrownFatFullAI.options.pixelEdge            = pixelEdge('get');
            tBrownFatFullAI.options.fastSegmentation     = machineLearningFDGBrownFatFastSegmentation('get');

            setMachineLearningFDGBrownFatFullAI(sPredictScript, '106', tBrownFatFullAI, true, false, []);
        end
    end


    function chkFDGBrownFatFullAIFastSegmentationCallback(hObject, ~)

        bObjectValue = get(chkFDGBrownFatFullAIFastSegmentation, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkFDGBrownFatFullAIFastSegmentation, 'Value', ~bObjectValue);
        end

        bObjectValue = get(chkFDGBrownFatFullAIFastSegmentation, 'Value');

        machineLearningFDGBrownFatFastSegmentation('set', bObjectValue);
    end

    function chkFDGBrownFatFullAISmoothMaskCallback(hObject, ~)

        bObjectValue = get(chkFDGBrownFatFullAISmoothMask, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkFDGBrownFatFullAISmoothMask, 'Value', ~bObjectValue);
        end

        bObjectValue = get(chkFDGBrownFatFullAISmoothMask, 'Value');

        machineLearningFDGBrownFatSmoothMask('set', bObjectValue);
    end

    function edtFDGBrownFatFullAISmallestVoiValueCallback(~, ~)

        dObjectValue = str2double(get(edtFDGBrownFatFullAISmallestVoiValue, 'String'));

        if dObjectValue < 0

            dObjectValue = 0;

            set(edtFDGBrownFatFullAISmallestVoiValue, 'String', num2str(dObjectValue));
        end

        machineLearningFDGBrownFatSmallestVoiValue('set', dObjectValue);

    end

    function chkFDGBrownFatFullAIPixelEdgeCallback(hObject, ~)

        bObjectValue = get(chkFDGBrownFatFullAIPixelEdge, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkFDGBrownFatFullAIPixelEdge, 'Value', ~bObjectValue);
        end

        bObjectValue = get(chkFDGBrownFatFullAIPixelEdge, 'Value');

        pixelEdge('set', bObjectValue);

        % Set contour panel checkbox

        set(chkPixelEdgePtr('get'), 'Value', pixelEdge('get'));
    end

    function cancelFDGBrownFatFullAISegmentationCallback(~, ~)

        delete(dlgFDGBrownFatFullAISegmentation);
    end

    function proceedFDGBrownFatFullAISegmentationCallback(~, ~)

        % Options

        tBrownFatFullAI.options.CELossTrainer        = true;
        tBrownFatFullAI.options.classifySegmentation = true;
        tBrownFatFullAI.options.smoothMask           = get(chkFDGBrownFatFullAISmoothMask, 'Value');
        tBrownFatFullAI.options.smallestVoiValue     = str2double(get(edtFDGBrownFatFullAISmallestVoiValue, 'String'));
        tBrownFatFullAI.options.pixelEdge            = get(chkFDGBrownFatFullAIPixelEdge, 'value');
        tBrownFatFullAI.options.fastSegmentation     = get(chkFDGBrownFatFullAIFastSegmentation, 'value');

        delete(dlgFDGBrownFatFullAISegmentation);

        setMachineLearningFDGBrownFatFullAI(sPredictScript, '106', tBrownFatFullAI, true, false, []);
    end
end
