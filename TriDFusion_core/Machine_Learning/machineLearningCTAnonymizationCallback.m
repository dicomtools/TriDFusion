function machineLearningCTAnonymizationCallback(hObject, ~)
%function machineLearningCTAnonymizationCallback(hObject)
%ML-Based Anonymization in CT Scans, The tool is called from the main menu.
%See TriDFuison.doc (or pdf) for more information about options.
%
%Author: Daniel Lafontaine, lafontad@mskcc.org
%
%Last specifications modified:
%
% Copyright 2024, Daniel Lafontaine, on behalf of the TriDFusion development team.
%
% This file is part of The Triple Dimention Fusion (TriDFusion).
%
% TriDFusion development has been led by:  Daniel Lafontaine
%
% TriDFusion is distributed under the terms of the Lesser GNU Public License.
%
%     This version of TriDFusion is free software: you can redistribute it and/or modify
%     it under the terms of the GNU General Public License as published by
%     the Free Software Foundation, either version 3 of the License, or
%     (at your option) any later version.
%
% TriDFusion is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
% without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
% See the GNU General Public License for more details.
%
% You should have received a copy of the GNU General Public License
% along with TriDFusion.  If not, see <http://www.gnu.org/licenses/>.

    [sSegmentatorScript, ~] = validateSegmentatorInstallation();

    if ~isempty(sSegmentatorScript) % External Segmentor is installed

        if exist('hObject', 'var')

            DLG_AI_CT_FACE_ANO_X = 380;
            DLG_AI_CT_FACE_ANO_Y = 165;

            if viewerUIFigure('get') == true
        
                dlgMachineLearningCTAnonymization = ...
                    uifigure('Position', [(getMainWindowPosition('xpos')+(getMainWindowSize('xsize')/2)-DLG_AI_CT_FACE_ANO_X/2) ...
                                        (getMainWindowPosition('ypos')+(getMainWindowSize('ysize')/2)-DLG_AI_CT_FACE_ANO_Y/2) ...
                                        DLG_AI_CT_FACE_ANO_X ...
                                        DLG_AI_CT_FACE_ANO_Y ...
                                        ],...
                           'Resize', 'off', ...
                           'Color', viewerBackgroundColor('get'),...
                           'WindowStyle', 'modal', ...
                           'Name' , 'Machine Learning CT Anonymization'...
                           );
            else       
                dlgMachineLearningCTAnonymization = ...
                    dialog('Position', [(getMainWindowPosition('xpos')+(getMainWindowSize('xsize')/2)-DLG_AI_CT_FACE_ANO_X/2) ...
                                        (getMainWindowPosition('ypos')+(getMainWindowSize('ysize')/2)-DLG_AI_CT_FACE_ANO_Y/2) ...
                                        DLG_AI_CT_FACE_ANO_X ...
                                        DLG_AI_CT_FACE_ANO_Y ...
                                        ],...
                           'MenuBar', 'none',...
                           'Resize', 'off', ...    
                           'NumberTitle','off',...
                           'MenuBar', 'none',...
                           'Color', viewerBackgroundColor('get'), ...
                           'Name', 'Machine Learning CT Anonymization',...
                           'Toolbar','none'...               
                           );    
            end

            setObjectIcon(dlgMachineLearningCTAnonymization);

                uicontrol(dlgMachineLearningCTAnonymization,...
                          'style'   , 'text',...
                          'Enable'  , 'On',...
                          'string'  , 'Anonymization Module',...
                          'horizontalalignment', 'left',...
                          'BackgroundColor', viewerBackgroundColor('get'), ...
                          'ForegroundColor', viewerForegroundColor('get'), ...                   
                          'position', [20 95 150 20]...
                          );

            asAnonymizationModule = {'Face', 'Skin', 'Both'};
            sAnonymizationModule = machineLearningCTAnonymizationAnonymizationModule('get');

            switch lower(sAnonymizationModule)
                case 'face'
                    dAnonymizationModuleOffset = 1;

                case 'skin'
                    dAnonymizationModuleOffset = 2;

               case 'both'    
                    dAnonymizationModuleOffset = 3;
            end

                uicontrol(dlgMachineLearningCTAnonymization, ...
                          'enable'  , 'on',...
                          'Units'   , 'pixel',...
                          'Style'   , 'popup', ...
                          'position', [190 ...
                                       95 ...
                                       170 ...
                                       20], ...
                          'String'  , asAnonymizationModule, ...
                          'BackgroundColor', viewerBackgroundColor('get'), ...
                          'ForegroundColor', viewerForegroundColor('get'), ...
                          'Callback', @popCTAnonymizationAnonymizationModuleCallback, ...
                          'Value'   , dAnonymizationModuleOffset ...
                          ); 


                uicontrol(dlgMachineLearningCTAnonymization,...
                          'style'   , 'text',...
                          'Enable'  , 'On',...
                          'string'  , 'Anonymization Technique',...
                          'horizontalalignment', 'left',...
                          'BackgroundColor', viewerBackgroundColor('get'), ...
                          'ForegroundColor', viewerForegroundColor('get'), ...                   
                          'position', [20 65 150 20]...
                          );

            asAnonymizationTechnique = {'Mean', 'Gauss Filter', 'Zero', 'Min', 'Random'};

            sAnonymizationTechnique = machineLearningCTAnonymizationAnonymizationTechnique('get');

            switch lower(sAnonymizationTechnique)

                case 'mean'

                    dAnonymizationTechniqueOffset = 1;
                
                case 'gauss filter'

                    dAnonymizationTechniqueOffset = 2;

                case 'zero'

                    dAnonymizationTechniqueOffset = 3;

                case 'min'

                    dAnonymizationTechniqueOffset = 4;

                case 'random'

                    dAnonymizationTechniqueOffset = 5;

                otherwise

                    progressBar(1, 'Error: Invalid Anonymization Technique!');
                    errordlg('Invalid Anonymization Technique!', 'Anonymization Technique Validation');
                    return;   
            end

                uicontrol(dlgMachineLearningCTAnonymization, ...
                          'enable'  , 'on',...
                          'Units'   , 'pixel',...
                          'Style'   , 'popup', ...
                          'position', [190 ...
                                       65 ...
                                       170 ...
                                       20], ...
                          'String'  , asAnonymizationTechnique, ...
                          'BackgroundColor', viewerBackgroundColor('get'), ...
                          'ForegroundColor', viewerForegroundColor('get'), ...
                          'Callback', @popCTAnonymizationAnonymizationTechniqueCallback, ...
                          'Value'   , dAnonymizationTechniqueOffset ...
                          );    

             % Associated Series
        
                uicontrol(dlgMachineLearningCTAnonymization,...
                          'style'   , 'text',...
                          'Enable'  , 'Inactive',...
                          'string'  , 'Include the related series',...
                          'horizontalalignment', 'left',...
                          'BackgroundColor', viewerBackgroundColor('get'), ...
                          'ForegroundColor', viewerForegroundColor('get'), ...                   
                          'ButtonDownFcn'  , @chkCTAnonymizationAssociatedSeriesCallback, ...
                          'position', [40 125 150 20]...
                          );
        
            chkCTAnonymizationAssociatedSeries = ...
                uicontrol(dlgMachineLearningCTAnonymization,...
                          'style'   , 'checkbox',...
                          'enable'  , 'on',...
                          'value'   , machineLearningCTAnonymizationAssociatedSeries('get'),...
                          'position', [20 125 20 20],...
                          'BackgroundColor', viewerBackgroundColor('get'), ...
                          'ForegroundColor', viewerForegroundColor('get'), ...                   
                          'Callback', @chkCTAnonymizationAssociatedSeriesCallback...
                          );

             % Cancel or Proceed
        
             uicontrol(dlgMachineLearningCTAnonymization,...
                       'String','Cancel',...
                       'Position',[285 7 75 25],...
                       'BackgroundColor', viewerBackgroundColor('get'), ...
                       'ForegroundColor', viewerForegroundColor('get'), ...                
                       'Callback', @cancelCTAnonymizationCallback...
                       );
        
             uicontrol(dlgMachineLearningCTAnonymization,...
                      'String','Proceed',...
                      'Position',[200 7 75 25],...
                      'BackgroundColor', viewerBackgroundColor('get'), ...
                      'ForegroundColor', viewerForegroundColor('get'), ...               
                      'Callback', @proceedCTAnonymizationCallback...
                      );   
        else

            sAnonymizationModule    = machineLearningCTAnonymizationAnonymizationModule('get');
            sAnonymizationTechnique = machineLearningCTAnonymizationAnonymizationTechnique('get');
            bAssociatedSeries       = machineLearningCTAnonymizationAssociatedSeries('get');

            machineLearningCTAnonymization(sSegmentatorScript, sAnonymizationModule, sAnonymizationTechnique, bAssociatedSeries, false, true);               
            
            close(fiMainWindowPtr('get'));     
        end

    end

    function popCTAnonymizationAnonymizationModuleCallback(hObject, ~)

        bObjectValue = get(hObject, 'Value');
        
        switch bObjectValue
        
          case 1
            sAnonymizationModule = 'face';
        
          case 2
            sAnonymizationModule = 'skin';
        
          case 3
            sAnonymizationModule = 'both';
            
          otherwise
            progressBar(1, 'Error: Invalid Anonymization Module!');
            errordlg('Invalid Anonymization Module!', 'Anonymization Module Validation');
            return;  
        end

        machineLearningCTAnonymizationAnonymizationModule('set', sAnonymizationModule);

    end

    function popCTAnonymizationAnonymizationTechniqueCallback(hObject, ~)

        bObjectValue = get(hObject, 'Value');
        
        switch bObjectValue
        
          case 1
            sAnonymizationTechnique = 'mean';
        
          case 2
            sAnonymizationTechnique = 'gauss filter';
        
          case 3
            sAnonymizationTechnique = 'zero';

          case 4
            sAnonymizationTechnique = 'min';

          case 5
            sAnonymizationTechnique = 'random';
            
          otherwise
            progressBar(1, 'Error: Invalid Anonymization Technique!');
            errordlg('Invalid Anonymization Technique!', 'Anonymization Technique Validation');
            return;  
        end

        machineLearningCTAnonymizationAnonymizationTechnique('set', sAnonymizationTechnique);

    end

    function chkCTAnonymizationAssociatedSeriesCallback(hObject, ~)

        bObjectValue = get(chkCTAnonymizationAssociatedSeries, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkCTAnonymizationAssociatedSeries, 'Value', ~bObjectValue);
        end

        bObjectValue = get(chkCTAnonymizationAssociatedSeries, 'Value');

        machineLearningCTAnonymizationAssociatedSeries('set', bObjectValue);
    end   

    function proceedCTAnonymizationCallback(~, ~)
        
        delete(dlgMachineLearningCTAnonymization);

        sAnonymizationModule    = machineLearningCTAnonymizationAnonymizationModule('get');
        sAnonymizationTechnique = machineLearningCTAnonymizationAnonymizationTechnique('get');
        bAssociatedSeries       = machineLearningCTAnonymizationAssociatedSeries('get');

        machineLearningCTAnonymization(sSegmentatorScript, sAnonymizationModule, sAnonymizationTechnique, bAssociatedSeries, true, false);            
    end

    function cancelCTAnonymizationCallback(~, ~)

        delete(dlgMachineLearningCTAnonymization);
    end

end