function importSTLCallback(~, ~)
%function importSTLCallback(~, ~)
%Import .stl Model.
%See TriDFuison.doc (or pdf) for more information about options.
%
%Author: Daniel Lafontaine, lafontad@mskcc.org
%
%Last specifications modified:
%
% Copyright 2020, Daniel Lafontaine, on behalf of the TriDFusion development team.
%
% This file is part of The Triple Dimention Fusion (TriDFusion).
%
% TriDFusion development has been led by:  Daniel Lafontaine
%
% TriDFusion is distributed under the terms of the Lesser GNU Public License.
%
%     This version of TriDFusion is free software: you can redistribute it and/or modify
%     it under the terms of the GNU General Public License as published by
%     the Free Software Foundation, either version 3 of the License, or
%     (at your option) any later version.
%
% TriDFusion is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
% without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
% See the GNU General Public License for more details.
%
% You should have received a copy of the GNU General Public License
% along with TriDFusion.  If not, see <http://www.gnu.org/licenses/>.

     if switchTo3DMode('get')     == true ||  ...
        switchToIsoSurface('get') == true || ...
        switchToMIPMode('get')    == true

         return;
     end
     
     filter = {'*.stl'};

     sCurrentDir  = viewerRootPath('get');

     sMatFile = [sCurrentDir '/' 'exportIsoLastUsedDir.mat'];
     % load last data directory
     if exist(sMatFile, 'file')
                                % lastDirMat mat file exists, load it
        load('-mat', sMatFile);
        if exist('exportIsoLastUsedDir', 'var')
            sCurrentDir = exportIsoLastUsedDir;
        end
        if sCurrentDir == 0
            sCurrentDir = pwd;
        end
     end

     [file, path] = uigetfile(sprintf('%s%s', char(sCurrentDir), char(filter)), 'Import STL');
     if file ~= 0

        try
            exportIsoLastUsedDir = path;
            save(sMatFile, 'exportIsoLastUsedDir');
        catch ME
            logErrorToFile(ME); 
            progressBar(1 , sprintf('Warning: Cant save file %s', sMatFile));
%                h = msgbox(sprintf('Warning: Cant save file %s', sMatFile), 'Warning');
%                if integrateToBrowser('get') == true
%                    sLogo = './TriDFusion/logo.png';
%                else
%                    sLogo = './logo.png';
%                end

%                javaFrame = get(h, 'JavaFrame');
%                javaFrame.setFigureIcon(javax.swing.ImageIcon(sLogo));
        end
     
%        mainDir('set', path);
         
        xSize = 1;
        ySize = 1;
        zSize = 1;        
        
        if viewerUIFigure('get') == true
    
            dlgSTLsize = ...
                uifigure('Position', [(getMainWindowPosition('xpos')+(getMainWindowSize('xsize')/2)-400/2) ...
                                    (getMainWindowPosition('ypos')+(getMainWindowSize('ysize')/2)-190/2) ...
                                    400 ...
                                    190 ...
                                    ],...
                         'Resize'     , 'off', ...
                         'Color'      , viewerBackgroundColor('get'),...
                         'WindowStyle', 'modal', ...
                         'Name'       , 'Import .stl file'...
                        );
         else
    
            dlgSTLsize = ...
                dialog('Position', [(getMainWindowPosition('xpos')+(getMainWindowSize('xsize')/2)-400/2) ...
                                    (getMainWindowPosition('ypos')+(getMainWindowSize('ysize')/2)-190/2) ...
                                    400 ...
                                    190 ...
                                    ],...
                       'MenuBar', 'none',...
                       'Resize', 'off', ...    
                       'NumberTitle','off',...
                       'MenuBar', 'none',...
                       'Color', viewerBackgroundColor('get'), ...
                       'Name', 'Import .stl file',...
                       'Toolbar','none'...   
                       );
        end
    
        setObjectIcon(dlgSTLsize);   

        axeSTLsize = ...
            axes(dlgSTLsize, ...
                 'Units'   , 'pixels', ...
                 'Position', get(dlgSTLsize, 'Position'), ...
                 'Color'   , viewerBackgroundColor('get'),...
                 'XColor'  , viewerForegroundColor('get'),...
                 'YColor'  , viewerForegroundColor('get'),...
                 'ZColor'  , viewerForegroundColor('get'),...             
                 'Visible' , 'off'...             
                 );               
        axeSTLsize.Interactions = [];
        deleteAxesToolbar(axeSTLsize);
        % axeSTLsize.Toolbar = []; 

    chkFillHoles = ...
        uicontrol(dlgSTLsize,...
                  'style'   , 'checkbox',...
                  'enable'  , 'on',...
                  'value'   , true,...
                  'position', [20 140 20 20],...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...                      
                  'Callback', @stlFillHolesCallback...
                  );

         uicontrol(dlgSTLsize,...
                  'style'   , 'text',...
                  'enable'  , 'inactive',...
                  'string'  , 'Fill Holes',...
                  'horizontalalignment', 'left',...
                  'position', [40 137 200 20],...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...                      
                  'ButtonDownFcn', @stlFillHolesCallback...
                  );
              
         uicontrol(dlgSTLsize,...
                  'style'   , 'text',...
                  'enable'  , 'On',...
                  'string'  , 'Pixel Value',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...                      
                  'position', [20 112 200 20]...
                  );

    edtPixelValue = ...
        uicontrol(dlgSTLsize,...
                 'enable'    , 'on',...
                 'style'     , 'edit',...
                 'Background', 'white',...
                 'string'    , '1',...
                 'BackgroundColor', viewerBackgroundColor('get'), ...
                 'ForegroundColor', viewerForegroundColor('get'), ...                     
                 'position'  , [130 115 80 20]...
                 );
             
          uicontrol(dlgSTLsize,...
                  'style'   , 'text',...
                  'enable'  , 'On',...
                  'string'  , 'Image Size',...
                  'horizontalAlignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...                     
                  'position', [20 87 200 20]...
                  );              
                
        edtImageSizeX = ...
            uicontrol(dlgSTLsize,...
                     'enable'    , 'on',...
                     'style'     , 'edit',...
                     'Background', 'white',...
                     'string'    , num2str(xSize),...
                     'BackgroundColor', viewerBackgroundColor('get'), ...
                     'ForegroundColor', viewerForegroundColor('get'), ...                    
                     'position'  , [130 90 80 20] ...
                     );

        edtImageSizeY = ...
            uicontrol(dlgSTLsize,...
                     'enable'    , 'on',...
                     'style'     , 'edit',...
                     'Background', 'white',...
                     'string'    , num2str(ySize),...
                     'BackgroundColor', viewerBackgroundColor('get'), ...
                     'ForegroundColor', viewerForegroundColor('get'), ...                    
                     'position'  , [215 90 80 20]...
                     );

        edtImageSizeZ = ...
            uicontrol(dlgSTLsize,...
                     'enable'    , 'on',...
                     'style'     , 'edit',...
                     'Background', 'white',...
                     'string'    , num2str(zSize),...
                     'BackgroundColor', viewerBackgroundColor('get'), ...
                     'ForegroundColor', viewerForegroundColor('get'), ...                    
                     'position'  , [300 90 80 20]...
                     );
                 
         uicontrol(dlgSTLsize,...
                  'style'   , 'text',...
                  'enable'  , 'On',...
                  'string'  , 'Voxel Size',...
                  'horizontalAlignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...                     
                  'position', [20 62 200 20]...
                  );              
                
        edtVoxelSizeX = ...
            uicontrol(dlgSTLsize,...
                     'enable'    , 'on',...
                     'style'     , 'edit',...
                     'Background', 'white',...
                     'string'    , num2str(xSize),...
                     'BackgroundColor', viewerBackgroundColor('get'), ...
                     'ForegroundColor', viewerForegroundColor('get'), ...                    
                     'position'  , [130 65 80 20]...
                     );

        edtVoxelSizeY = ...
            uicontrol(dlgSTLsize,...
                     'enable'    , 'on',...
                     'style'     , 'edit',...
                     'Background', 'white',...
                     'string'    , num2str(ySize),...
                     'BackgroundColor', viewerBackgroundColor('get'), ...
                     'ForegroundColor', viewerForegroundColor('get'), ...                    
                     'position'  , [215 65 80 20]...
                     );

        edtVoxelSizeZ = ...
            uicontrol(dlgSTLsize,...
                     'enable'    , 'on',...
                     'style'     , 'edit',...
                     'Background', 'white',...
                     'string'    , num2str(zSize),...
                     'BackgroundColor', viewerBackgroundColor('get'), ...
                     'ForegroundColor', viewerForegroundColor('get'), ...                    
                     'position'  , [300 65 80 20]...
                     );                
              
        
         % Cancel or Proceed

         uicontrol(dlgSTLsize,...
                   'String','Cancel',...
                   'Position',[305 7 75 25],...
                   'BackgroundColor', viewerBackgroundColor('get'), ...
                   'ForegroundColor', viewerForegroundColor('get'), ...                  
                   'Callback', @cancelImportSTLCallback...
                   );

         uicontrol(dlgSTLsize,...
                  'String','Proceed',...
                  'Position',[220 7 75 25],...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...                 
                  'Callback', @okImportSTLCallback...
                  );   
     end
    
    function stlFillHolesCallback(hObject, ~)

        if get(chkFillHoles, 'Value') == true
            if strcmpi(hObject.Style, 'checkbox')
                set(chkFillHoles, 'Value', true);
            else
                set(chkFillHoles, 'Value', false);
            end
        else
            if strcmpi(hObject.Style, 'checkbox')
                set(chkFillHoles, 'Value', false);
            else
                set(chkFillHoles, 'Value', true);
            end
        end
    end

    function okImportSTLCallback(~, ~)
         
        try  
 
%         set(fiMainWindowPtr('get'), 'Pointer', 'watch');
%         drawnow;

        if isVsplash('get') == true

            setVsplashCallback();
        end

        if size(dicomBuffer('get', [], get(uiSeriesPtr('get'), 'Value')), 3) ~= 1
            
            link2DMip('set', true);

            set(btnLinkMipPtr('get'), 'BackgroundColor', viewerButtonPushedBackgroundColor('get'));
            set(btnLinkMipPtr('get'), 'ForegroundColor', viewerButtonPushedForegroundColor('get')); 
            % set(btnLinkMipPtr('get'), 'FontWeight', 'bold');            
            set(btnLinkMipPtr('get'), 'CData', resizeTopBarIcon('link_mip_white.png'));
       end

        if isFusion('get') == true % Deactivate fusion
             setFusionCallback();
        end
        
        xImageSize = str2double(get(edtImageSizeX, 'String'));
        yImageSize = str2double(get(edtImageSizeY, 'String'));
        zImageSize = str2double(get(edtImageSizeZ, 'String'));
        
        xVoxelSize = str2double(get(edtVoxelSizeX, 'String'));
        yVoxelSize = str2double(get(edtVoxelSizeY, 'String'));
        zVoxelSize = str2double(get(edtVoxelSizeZ, 'String'));
        

        bFillHoles = get(chkFillHoles, 'Value');
        dPixelValue = str2double(get(edtPixelValue, 'String'));

        readSTLModel(path, file, xImageSize, yImageSize, zImageSize, xVoxelSize, yVoxelSize, zVoxelSize, dPixelValue, bFillHoles);
        
        delete(dlgSTLsize);
        
        catch ME
            logErrorToFile(ME); 
           progressBar(1, 'Error:okImportSTLCallback()');           
        end

%        set(fiMainWindowPtr('get'), 'Pointer', 'default');
%        drawnow; 
    
     end

     function cancelImportSTLCallback(~, ~)
         
        delete(dlgSTLsize);
     end
end
