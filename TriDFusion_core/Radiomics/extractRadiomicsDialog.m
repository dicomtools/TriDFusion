function extractRadiomicsDialog(sRadiomicsScript)
%function extractRadiomicsFromContours(sRadiomicsScript)
%Run PyRadiomics, from a mask created from all contours.
%See TriDFuison.doc (or pdf) for more information about options.
%
%Author: Daniel Lafontaine, lafontad@mskcc.org
%
%Last specifications modified:
%
% Copyright 2023, Daniel Lafontaine, on behalf of the TriDFusion development team.
%
% This file is part of The Triple Dimention Fusion (TriDFusion).
%
% TriDFusion development has been led by:  Daniel Lafontaine
%
% TriDFusion is distributed under the terms of the Lesser GNU Public License.
%
%     This version of TriDFusion is free software: you can redistribute it and/or modify
%     it under the terms of the GNU General Public License as published by
%     the Free Software Foundation, either version 3 of the License, or
%     (at your option) any later version.
%
% TriDFusion is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
% without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
% See the GNU General Public License for more details.
%
% You should have received a copy of the GNU General Public License
% along with TriDFusion.  If not, see <http://www.gnu.org/licenses/>.

    DLG_COLUMN_SIZE = 230;

    DLG_RADIOMICS_X = 40+7*DLG_COLUMN_SIZE;
    DLG_RADIOMICS_Y = 900;

    if getMainWindowSize('xsize') < DLG_RADIOMICS_X
        DLG_RADIOMICS_X = getMainWindowSize('xsize');
    end

    if getMainWindowSize('ysize') < DLG_RADIOMICS_Y
        DLG_RADIOMICS_Y = getMainWindowSize('ysize');
    end

    asFirstOrderFeatures = ...
        {'10Percentile' ...
         '90Percentile' ...
         'Energy' ...
         'Entropy' ...
         'InterquartileRange' ...
         'Kurtosis' ...
         'Maximum' ...
         'MeanAbsoluteDeviation' ...
         'meanDose' ...
         'Median' ...
         'Minimum' ...
         'Range' ...
         'RobustMeanAbsoluteDeviation' ...
         'RootMeanSquared' ...
         'Skewness' ...
         'TotalEnergy' ...
         'Uniformity' ...
         'Variance'};

    asShapeFeatures = ...
        {'VoxelVolume', ...
         'MeshVolume', ...
         'SurfaceArea', ...
         'SurfaceVolumeRatio', ...
         'Compactness1', ...
         'Compactness2', ...
         'Sphericity', ...
         'SphericalDisproportion', ...
         'Maximum3DDiameter', ...
         'Maximum2DDiameterSlice', ...
         'Maximum2DDiameterColumn', ...
         'Maximum2DDiameterRow', ...
         'MajorAxisLength', ...
         'MinorAxisLength', ...
         'LeastAxisLength', ...
         'Elongation', ...
         'Flatness'};

    asGlcmFeatures = ...
       {'Autocorrelation', ...
        'JointAverage', ...
        'ClusterProminence', ...
        'ClusterShade', ...
        'ClusterTendency', ...
        'Contrast', ...
        'Correlation', ...
        'DifferenceAverage', ...
        'DifferenceEntropy', ...
        'DifferenceVariance', ...
        'JointEnergy', ...
        'JointEntropy', ...
        'Imc1', ...
        'Imc2', ...
        'Idm', ...
        'Idmn', ...
        'Id', ...
        'Idn', ...
        'InverseVariance', ...
        'MaximumProbability', ...
        'SumAverage', ...
        'SumEntropy', ...
        'SumSquares'};

    asGldmFeatures = ...
       {'DependenceEntropy', ...
        'DependenceNonUniformity', ...
        'DependenceNonUniformityNormalized', ...
        'DependenceVariance', ...
        'GrayLevelNonUniformity', ...
        'GrayLevelVariance', ...
        'HighGrayLevelEmphasis', ...
        'LargeDependenceEmphasis', ...
        'LargeDependenceHighGrayLevelEmphasis', ...
        'LargeDependenceLowGrayLevelEmphasis', ...
        'LowGrayLevelEmphasis', ...
        'SmallDependenceEmphasis', ...
        'SmallDependenceHighGrayLevelEmphasis', ...
        'SmallDependenceLowGrayLevelEmphasis'};

    asGlrlmFeatures = ...
        {'GrayLevelNonUniformity', ...
         'GrayLevelNonUniformityNormalized', ...
         'GrayLevelVariance', ...
         'HighGrayLevelRunEmphasis', ...
         'LongRunEmphasis', ...
         'LongRunHighGrayLevelEmphasis', ...
         'LongRunLowGrayLevelEmphasis', ...
         'LowGrayLevelRunEmphasis', ...
         'RunEntropy', ...
         'RunLengthNonUniformity', ...
         'RunLengthNonUniformityNormalized', ...
         'RunPercentage', ...
         'RunVariance', ...
         'ShortRunEmphasis', ...
         'ShortRunHighGrayLevelEmphasis', ...
         'ShortRunLowGrayLevelEmphasis'};

    asGlszmFeatures = ...
        {'GrayLevelNonUniformity', ...
         'GrayLevelNonUniformityNormalized', ...
         'GrayLevelVariance', ...
         'HighGrayLevelZoneEmphasis', ...
         'LargeAreaEmphasis', ...
         'LargeAreaHighGrayLevelEmphasis', ...
         'LargeAreaLowGrayLevelEmphasis', ...
         'LowGrayLevelZoneEmphasis', ...
         'SizeZoneNonUniformity', ...
         'SizeZoneNonUniformityNormalized', ...
         'SmallAreaEmphasis', ...
         'SmallAreaHighGrayLevelEmphasis', ...
         'SmallAreaLowGrayLevelEmphasis', ...
         'ZoneEntropy', ...
         'ZonePercentage', ...
         'ZoneVariance'};

    asNgtdmFeatures = ...
        {'Busyness', ...
         'Coarseness', ...
         'Complexity', ...
         'Contrast', ...
         'Strength'};

    if viewerUIFigure('get') == true

        dlgRadiomics = ...
            uifigure('Position', [(getMainWindowPosition('xpos')+(getMainWindowSize('xsize')/2)-DLG_RADIOMICS_X/2) ...
                            (getMainWindowPosition('ypos')+(getMainWindowSize('ysize')/2)-DLG_RADIOMICS_Y/2) ...
                            DLG_RADIOMICS_X ...
                            DLG_RADIOMICS_Y ...
                            ],...
                   'Resize', 'off', ...
                   'Color', viewerBackgroundColor('get'),...
                   'WindowStyle', 'modal', ...
                   'Name' , 'Compute Radiomics'...
                   );
    else

        dlgRadiomics = ...
            dialog('Position', [(getMainWindowPosition('xpos')+(getMainWindowSize('xsize')/2)-DLG_RADIOMICS_X/2) ...
                                (getMainWindowPosition('ypos')+(getMainWindowSize('ysize')/2)-DLG_RADIOMICS_Y/2) ...
                                DLG_RADIOMICS_X ...
                                DLG_RADIOMICS_Y ...
                                ],...
                   'MenuBar'    , 'none',...
                   'Resize'     , 'on', ...
                   'NumberTitle', 'off',...
                   'MenuBar'    , 'none',...
                   'Color'      , viewerBackgroundColor('get'), ...
                   'Name'       , 'Compute Radiomics',...
                   'Toolbar'    , 'none'...
                   );
    end

    setObjectIcon(dlgRadiomics);

    axeRadiomics = ...
        axes(dlgRadiomics, ...
             'Units'   , 'normalized', ...
             'Position', [0 0 1 1], ...
             'Color'   , viewerBackgroundColor('get'),...
             'XColor'  , viewerForegroundColor('get'),...
             'YColor'  , viewerForegroundColor('get'),...
             'ZColor'  , viewerForegroundColor('get'),...
             'Visible' , 'off'...
             );
      axeRadiomics.Interactions = [];
      % axeRadiomics.Toolbar.Visible = 'off';
      deleteAxesToolbar(axeRadiomics);
      disableDefaultInteractivity(axeRadiomics);

      uiRadiomics = ...
         uipanel(dlgRadiomics,...
                 'Units'   , 'normalized',...
                 'Position', [0 0 1 1], ...
                 'Visible', 'on', ...
                 'BackgroundColor', viewerBackgroundColor('get'), ...
                 'ForegroundColor', viewerForegroundColor('get') ...
                 );

     if viewerUIFigure('get') == false

         uiRadiomicsSlider = ...
            uicontrol('Style'   , 'Slider', ...
                      'Parent'  , dlgRadiomics,...
                      'Units'   , 'normalized',...
                      'position', [0.99 ...
                                   0 ...
                                   0.01 ...
                                   1 ...
                                   ],...
                      'Value', 1, ...
                      'Callback',@uiRadiomicsSliderCallback, ...
                      'BackgroundColor', 'white', ...
                      'ForegroundColor', 'black' ...
                      );
    %     addlistener(uiRadiomicsSlider, 'Value', 'PreSet', @uiRadiomicsSliderCallback);
        addlistener(uiRadiomicsSlider, 'ContinuousValueChange', @uiRadiomicsSliderCallback);
     end

    % Feature Class
    if viewerUIFigure('get') == true

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'FontWeight', 'bold',...
                  'FontSize'  , 12,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Feature Class',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.01 ...
                               0.93 ...
                               0.1 ...
                               0.1] ...
                  );
    else
         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'FontWeight', 'bold',...
                  'FontSize'  , 12,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Feature Class',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.01 ...
                               0.89 ...
                               0.1 ...
                               0.1] ...
                  );
    end
    % Firstorder

    chkFeatureClassFirstorder = ...
        uicontrol(uiRadiomics,...
                  'style'   , 'checkbox',...
                  'Units'   , 'normalized',...
                  'enable'  , 'on',...
                  'value'   , 1,...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.01 ...
                               0.935 ...
                               0.02 ...
                               0.02], ...
                  'Callback', @chkFeatureClassFirstorderCallback...
                  );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'Inactive',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'firstorder',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.01+0.013 ...
                               0.935 ...
                               0.1 ...
                               0.02], ...
                  'ButtonDownFcn', @chkFeatureClassFirstorderCallback...
                  );

    chkFirstOrderFeatures = cell(1,numel(asFirstOrderFeatures));

    for ff=1:numel(asFirstOrderFeatures)
        chkFirstOrderFeatures{ff} = ...
            uicontrol(uiRadiomics,...
                      'style'   , 'checkbox',...
                      'Units'   , 'normalized',...
                      'enable'  , 'on',...
                      'value'   , 1,...
                      'BackgroundColor', viewerBackgroundColor('get'), ...
                      'ForegroundColor', viewerForegroundColor('get'), ...
                      'position', [0.01+0.013+0.002 ...
                                   0.935-(ff*0.022)...
                                   0.02 ...
                                   0.02], ...
                      'UserData', ff, ...
                      'Callback', @chkFirstOrderFeaturesCallback...
                      );

             uicontrol(uiRadiomics,...
                      'style'     , 'text',...
                      'Units'   , 'normalized',...
                      'enable'    , 'Inactive',...
                      'FontWeight', 'normal',...
                      'FontSize'  , 10,...
                      'FontName'  , 'MS Sans Serif', ...
                      'string'    , asFirstOrderFeatures{ff},...
                      'horizontalalignment', 'left',...
                      'BackgroundColor', viewerBackgroundColor('get'), ...
                      'ForegroundColor', viewerForegroundColor('get'), ...
                      'position', [0.01+0.013+0.002+0.013 ...
                                   0.935-(ff*0.022)...
                                   0.1 ...
                                   0.02], ...
                      'UserData', ff, ...
                      'ButtonDownFcn', @chkFirstOrderFeaturesCallback...
                      );
    end

    % Shape

    chkFeatureClassShape = ...
        uicontrol(uiRadiomics,...
                  'style'   , 'checkbox',...
                  'Units'   , 'normalized',...
                  'enable'  , 'on',...
                  'value'   , 1,...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.15 ...
                               0.935 ...
                               0.02 ...
                               0.02], ...
                  'Callback', @chkFeatureClassShapeCallback...
                  );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'Inactive',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'shape',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.15+0.013 ...
                               0.935 ...
                               0.1 ...
                               0.02], ...
                  'ButtonDownFcn', @chkFeatureClassShapeCallback...
                  );

    chkShapeFeatures = cell(1,numel(asShapeFeatures));

    for ff=1:numel(asShapeFeatures)
        chkShapeFeatures{ff} = ...
            uicontrol(uiRadiomics,...
                      'style'   , 'checkbox',...
                      'Units'   , 'normalized',...
                      'enable'  , 'on',...
                      'value'   , 1,...
                      'BackgroundColor', viewerBackgroundColor('get'), ...
                      'ForegroundColor', viewerForegroundColor('get'), ...
                      'position', [0.15+0.013+0.002 ...
                                   0.935-(ff*0.022)...
                                   0.02 ...
                                   0.02], ...
                      'UserData', ff, ...
                      'Callback', @chkShapeFeaturesCallback...
                      );

             uicontrol(uiRadiomics,...
                      'style'     , 'text',...
                      'Units'     , 'normalized',...
                      'enable'    , 'Inactive',...
                      'FontWeight', 'normal',...
                      'FontSize'  , 10,...
                      'FontName'  , 'MS Sans Serif', ...
                      'string'    , asShapeFeatures{ff},...
                      'horizontalalignment', 'left',...
                      'BackgroundColor', viewerBackgroundColor('get'), ...
                      'ForegroundColor', viewerForegroundColor('get'), ...
                      'position', [0.15+0.013+0.002+0.013 ...
                                   0.935-(ff*0.022)...
                                   0.1 ...
                                   0.02], ...
                      'UserData', ff, ...
                      'ButtonDownFcn', @chkShapeFeaturesCallback...
                      );
    end

    % glcm

    chkFeatureClassGlcm = ...
        uicontrol(uiRadiomics,...
                  'style'   , 'checkbox',...
                  'Units'   , 'normalized',...
                  'enable'  , 'on',...
                  'value'   , 1,...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.3 ...
                               0.935 ...
                               0.02 ...
                               0.02], ...
                  'Callback', @chkFeatureClassGlcmCallback...
                  );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'Inactive',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'glcm',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.3+0.013 ...
                               0.935 ...
                               0.1 ...
                               0.02], ...
                  'ButtonDownFcn', @chkFeatureClassGlcmCallback...
                  );

    chkGlcmFeatures = cell(1,numel(asGlcmFeatures));

    for ff=1:numel(asGlcmFeatures)
        chkGlcmFeatures{ff} = ...
            uicontrol(uiRadiomics,...
                      'style'   , 'checkbox',...
                      'Units'   , 'normalized',...
                      'enable'  , 'on',...
                      'value'   , 1,...
                      'BackgroundColor', viewerBackgroundColor('get'), ...
                      'ForegroundColor', viewerForegroundColor('get'), ...
                      'position', [0.3+0.013+0.002 ...
                                   0.935-(ff*0.022)...
                                   0.02 ...
                                   0.02], ...
                      'UserData', ff, ...
                      'Callback', @chkGlcmFeaturesCallback...
                      );

             uicontrol(uiRadiomics,...
                      'style'     , 'text',...
                      'Units'   , 'normalized',...
                      'enable'    , 'Inactive',...
                      'FontWeight', 'normal',...
                      'FontSize'  , 10,...
                      'FontName'  , 'MS Sans Serif', ...
                      'string'    , asGlcmFeatures{ff},...
                      'horizontalalignment', 'left',...
                      'BackgroundColor', viewerBackgroundColor('get'), ...
                      'ForegroundColor', viewerForegroundColor('get'), ...
                      'position', [0.3+0.013+0.002+0.013 ...
                                   0.935-(ff*0.022)...
                                   0.1 ...
                                   0.02], ...
                      'UserData', ff, ...
                      'ButtonDownFcn', @chkGlcmFeaturesCallback...
                      );
    end

    % gldm

    chkFeatureClassGldm = ...
        uicontrol(uiRadiomics,...
                  'style'   , 'checkbox',...
                  'Units'   , 'normalized',...
                  'enable'  , 'on',...
                  'value'   , 1,...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.45 ...
                               0.935 ...
                               0.02 ...
                               0.02], ...
                  'Callback', @chkFeatureClassGldmCallback...
                  );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'Inactive',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'gldm',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.45+0.013 ...
                               0.935 ...
                               0.1 ...
                               0.02], ...
                  'ButtonDownFcn', @chkFeatureClassGldmCallback...
                  );

    chkGldmFeatures = cell(1,numel(asGldmFeatures));

    for ff=1:numel(asGldmFeatures)
        chkGldmFeatures{ff} = ...
            uicontrol(uiRadiomics,...
                      'style'   , 'checkbox',...
                      'Units'   , 'normalized',...
                      'enable'  , 'on',...
                      'value'   , 1,...
                      'BackgroundColor', viewerBackgroundColor('get'), ...
                      'ForegroundColor', viewerForegroundColor('get'), ...
                      'position', [0.45+0.013+0.002 ...
                                   0.935-(ff*0.022)...
                                   0.02 ...
                                   0.02], ...
                      'UserData', ff, ...
                      'Callback', @chkGldmFeaturesCallback...
                      );

             uicontrol(uiRadiomics,...
                      'style'     , 'text',...
                      'Units'   , 'normalized',...
                      'enable'    , 'Inactive',...
                      'FontWeight', 'normal',...
                      'FontSize'  , 10,...
                      'FontName'  , 'MS Sans Serif', ...
                      'string'    , asGldmFeatures{ff},...
                      'horizontalalignment', 'left',...
                      'BackgroundColor', viewerBackgroundColor('get'), ...
                      'ForegroundColor', viewerForegroundColor('get'), ...
                      'position', [0.45+0.013+0.002+0.013 ...
                                   0.935-(ff*0.022)...
                                   0.1 ...
                                   0.02], ...
                      'UserData', ff, ...
                      'ButtonDownFcn', @chkGldmFeaturesCallback...
                      );
    end

    % glrlm

    chkFeatureClassGlrlm = ...
        uicontrol(uiRadiomics,...
                  'style'   , 'checkbox',...
                  'Units'   , 'normalized',...
                  'enable'  , 'on',...
                  'value'   , 1,...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.6 ...
                               0.935 ...
                               0.02 ...
                               0.02], ...
                  'Callback', @chkFeatureClassGlrlmCallback...
                  );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'Inactive',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'glrlm',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.6+0.013 ...
                               0.935 ...
                               0.1 ...
                               0.02], ...
                  'ButtonDownFcn', @chkFeatureClassGlrlmCallback...
                  );

    chkGlrlmFeatures = cell(1,numel(asGlrlmFeatures));

    for ff=1:numel(asGlrlmFeatures)
        chkGlrlmFeatures{ff} = ...
            uicontrol(uiRadiomics,...
                      'style'   , 'checkbox',...
                      'Units'   , 'normalized',...
                      'enable'  , 'on',...
                      'value'   , 1,...
                      'BackgroundColor', viewerBackgroundColor('get'), ...
                      'ForegroundColor', viewerForegroundColor('get'), ...
                      'position', [0.6+0.013+0.002 ...
                                   0.935-(ff*0.022)...
                                   0.1 ...
                                   0.02], ...
                      'UserData', ff, ...
                      'Callback', @chkGlrlmFeaturesCallback...
                      );

             uicontrol(uiRadiomics,...
                      'style'     , 'text',...
                      'Units'     , 'normalized',...
                      'enable'    , 'Inactive',...
                      'FontWeight', 'normal',...
                      'FontSize'  , 10,...
                      'FontName'  , 'MS Sans Serif', ...
                      'string'    , asGlrlmFeatures{ff},...
                      'horizontalalignment', 'left',...
                      'BackgroundColor', viewerBackgroundColor('get'), ...
                      'ForegroundColor', viewerForegroundColor('get'), ...
                      'position', [0.6+0.013+0.002+0.013 ...
                                   0.935-(ff*0.022)...
                                   0.1 ...
                                   0.02], ...
                      'UserData', ff, ...
                      'ButtonDownFcn', @chkGlrlmFeaturesCallback...
                      );
    end

    % glszm

    chkFeatureClassGlszm = ...
        uicontrol(uiRadiomics,...
                  'style'   , 'checkbox',...
                  'Units'   , 'normalized',...
                  'enable'  , 'on',...
                  'value'   , 1,...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.75 ...
                               0.935 ...
                               0.02 ...
                               0.02], ...
                  'Callback', @chkFeatureClassGlszmCallback...
                  );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'Inactive',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'glszm',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.75+0.013 ...
                               0.935 ...
                               0.1 ...
                               0.02], ...
                  'ButtonDownFcn', @chkFeatureClassGlszmCallback...
                  );

    chkGlszmFeatures = cell(1,numel(asGlszmFeatures));

    for ff=1:numel(asGlszmFeatures)
        chkGlszmFeatures{ff} = ...
            uicontrol(uiRadiomics,...
                      'style'   , 'checkbox',...
                      'Units'   , 'normalized',...
                      'enable'  , 'on',...
                      'value'   , 1,...
                      'BackgroundColor', viewerBackgroundColor('get'), ...
                      'ForegroundColor', viewerForegroundColor('get'), ...
                      'position', [0.75+0.013+0.002 ...
                                   0.935-(ff*0.022)...
                                   0.02 ...
                                   0.02], ...
                      'UserData', ff, ...
                      'Callback', @chkGlszmFeaturesCallback...
                      );

             uicontrol(uiRadiomics,...
                      'style'     , 'text',...
                      'Units'     , 'normalized',...
                      'enable'    , 'Inactive',...
                      'FontWeight', 'normal',...
                      'FontSize'  , 10,...
                      'FontName'  , 'MS Sans Serif', ...
                      'string'    , asGlrlmFeatures{ff},...
                      'horizontalalignment', 'left',...
                      'BackgroundColor', viewerBackgroundColor('get'), ...
                      'ForegroundColor', viewerForegroundColor('get'), ...
                      'position', [0.75+0.013+0.002+0.013 ...
                                   0.935-(ff*0.022)...
                                   0.1 ...
                                   0.02], ...
                      'UserData', ff, ...
                      'ButtonDownFcn', @chkGlszmFeaturesCallback...
                      );
    end

    % ngtdm

    chkFeatureClassNgtdm = ...
        uicontrol(uiRadiomics,...
                  'style'   , 'checkbox',...
                  'Units'     , 'normalized',...
                  'enable'  , 'on',...
                  'value'   , 1,...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.9 ...
                               0.935 ...
                               0.02 ...
                               0.02], ...
                  'Callback', @chkFeatureClassNgtdmCallback...
                  );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'Inactive',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'ngtdm',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.9+0.013 ...
                               0.935 ...
                               0.1 ...
                               0.02], ...
                  'ButtonDownFcn', @chkFeatureClassNgtdmCallback...
                  );

    chkNgtdmFeatures = cell(1,numel(asNgtdmFeatures));

    for ff=1:numel(asNgtdmFeatures)
        chkNgtdmFeatures{ff} = ...
            uicontrol(uiRadiomics,...
                      'style'   , 'checkbox',...
                      'Units'     , 'normalized',...
                      'enable'  , 'on',...
                      'value'   , 1,...
                      'BackgroundColor', viewerBackgroundColor('get'), ...
                      'ForegroundColor', viewerForegroundColor('get'), ...
                      'position', [0.9+0.013+0.002 ...
                                   0.935-(ff*0.022)...
                                   0.1 ...
                                   0.02], ...
                      'UserData', ff, ...
                      'Callback', @chkNgtdmFeaturesCallback...
                      );

             uicontrol(uiRadiomics,...
                      'style'     , 'text',...
                      'Units'     , 'normalized',...
                      'enable'    , 'Inactive',...
                      'FontWeight', 'normal',...
                      'FontSize'  , 10,...
                      'FontName'  , 'MS Sans Serif', ...
                      'string'    , asNgtdmFeatures{ff},...
                      'horizontalalignment', 'left',...
                      'BackgroundColor', viewerBackgroundColor('get'), ...
                      'ForegroundColor', viewerForegroundColor('get'), ...
                      'position', [0.9+0.013+0.002+0.013 ...
                                   0.935-(ff*0.022)...
                                   0.1 ...
                                   0.02], ...
                      'UserData', ff, ...
                      'ButtonDownFcn', @chkNgtdmFeaturesCallback...
                      );
    end

    % Setting

     uicontrol(uiRadiomics,...
              'style'     , 'text',...
              'FontWeight', 'bold',...
              'Units'     , 'normalized',...
              'FontSize'  , 12,...
              'FontName'  , 'MS Sans Serif', ...
              'string'    , 'Setting',...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...
              'position', [0.01 ...
                           0.335 ...
                           0.1 ...
                           0.1] ...
              );

    % Bin width

    chkSettingBinWidth = ...
        uicontrol(uiRadiomics,...
                  'style'   , 'checkbox',...
                  'Units'   , 'normalized',...
                  'enable'  , 'on',...
                  'value'   , 1,...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.01 ...
                               0.335+0.045 ...
                               0.02 ...
                               0.02], ...
                  'UserData', 'binWidth', ...
                  'Callback', @chkSettingBinWidthCallback...
                  );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'Inactive',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Bin Width',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.01+0.013 ...
                               0.335+0.045 ...
                               0.1 ...
                               0.02], ...
                  'ButtonDownFcn', @chkSettingBinWidthCallback...
                  );

    edtSettingBinWidth = ...
       uicontrol(uiRadiomics,...
                 'style'     , 'edit',...
                 'Units'     , 'normalized',...
                 'enable'    , 'on',...
                 'Background', 'white',...
                 'string'    , '25',...
                 'BackgroundColor', viewerBackgroundColor('get'), ...
                 'ForegroundColor', viewerForegroundColor('get'), ...
                 'UserData', 'width', ...
                 'position', [0.01+0.013+0.115 ...
                              0.335+0.045 ...
                              0.03 ...
                              0.023] ...
                 );

    % Resegmentation

    chkSettingResegmentation = ...
        uicontrol(uiRadiomics,...
                  'style'   , 'checkbox',...
                  'Units'   , 'normalized',...
                  'enable'  , 'on',...
                  'value'   , 0,...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.01 ...
                               0.335+0.045-0.028 ...
                               0.02 ...
                               0.02], ...
                  'UserData', 'resegmentRange', ...
                  'Callback', @chkSettingResegmentationCallback...
                  );

    txtSettingResegmentation = ...
         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'   , 'normalized',...
                  'enable'    , 'inactive',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Resegmentation (min max)',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.01+0.013 ...
                               0.335+0.045-0.028 ...
                               0.1 ...
                               0.02], ...
                  'ButtonDownFcn', @chkSettingResegmentationCallback...
                  );

    edtSettingResegmentationMin = ...
       uicontrol(uiRadiomics,...
                 'style'     , 'edit',...
                 'Units'     , 'normalized',...
                 'enable'    , 'off',...
                 'Background', 'white',...
                 'string'    , '0',...
                 'BackgroundColor', viewerBackgroundColor('get'), ...
                 'ForegroundColor', viewerForegroundColor('get'), ...
                 'UserData', 'min', ...
                 'position', [0.01+0.013+0.115 ...
                              0.335+0.045-0.028 ...
                              0.03 ...
                              0.023] ...
                 );

    edtSettingResegmentationMax = ...
       uicontrol(uiRadiomics,...
                 'style'     , 'edit',...
                 'Units'     , 'normalized',...
                 'enable'    , 'off',...
                 'Background', 'white',...
                 'string'    , '0',...
                 'BackgroundColor', viewerBackgroundColor('get'), ...
                 'ForegroundColor', viewerForegroundColor('get'), ...
                 'UserData', 'max', ...
                 'position', [0.01+0.013+0.115+0.033 ...
                              0.335+0.045-0.028 ...
                              0.03 ...
                              0.023] ...
                 );

    % Bin per ROI

    chkSettingBinPerRoi = ...
        uicontrol(uiRadiomics,...
                  'style'   , 'checkbox',...
                  'Units'   , 'normalized',...
                  'enable'  , 'on',...
                  'value'   , 0,...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.01 ...
                               0.335+0.045-(2*0.028) ...
                               0.02 ...
                               0.02], ...
                  'UserData', 'binCount', ...
                  'Callback', @chkSettingBinPerRoiCallback...
                  );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'inactive',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Bins per ROI',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.01+0.013 ...
                               0.335+0.045-(2*0.028) ...
                               0.1 ...
                               0.02], ...
                  'ButtonDownFcn', @chkSettingBinPerRoiCallback...
                  );

    edtSettingBinPerRoi = ...
       uicontrol(uiRadiomics,...
                 'style'     , 'edit',...
                 'Units'     , 'normalized',...
                 'enable'    , 'off',...
                 'Background', 'white',...
                 'string'    , '0',...
                 'BackgroundColor', viewerBackgroundColor('get'), ...
                 'ForegroundColor', viewerForegroundColor('get'), ...
                 'UserData', 'binValue', ...
                 'position', [0.01+0.013+0.115 ...
                              0.335+0.045-(2*0.028) ...
                              0.03 ...
                              0.023] ...
                 );

    % Resample Image

    chkSettingResampleImage = ...
        uicontrol(uiRadiomics,...
                  'style'   , 'checkbox',...
                  'Units'   , 'normalized',...
                  'enable'  , 'on',...
                  'value'   , 0,...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'UserData', 'resampledPixelSpacing', ...
                  'position', [0.01 ...
                               0.335+0.045-(4*0.028) ...
                               0.02 ...
                               0.02], ...
                  'Callback', @chkSettingResampleImageCallback...
                  );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'inactive',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Resample Image (x y z)',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.01+0.013 ...
                               0.335+0.045-(4*0.028) ...
                               0.1 ...
                               0.02], ...
                  'ButtonDownFcn', @chkSettingResampleImageCallback...
                  );

    edtSettingResampleImageX = ...
       uicontrol(uiRadiomics,...
                 'style'     , 'edit',...
                 'Units'     , 'normalized',...
                 'enable'    , 'off',...
                 'Background', 'white',...
                 'string'    , '0',...
                 'BackgroundColor', viewerBackgroundColor('get'), ...
                 'ForegroundColor', viewerForegroundColor('get'), ...
                 'position', [0.01+0.013+0.115 ...
                              0.335+0.045-(4*0.028) ...
                              0.03 ...
                              0.023] ...
                 );

    edtSettingResampleImageY = ...
       uicontrol(uiRadiomics,...
                 'style'     , 'edit',...
                 'Units'     , 'normalized',...
                 'enable'    , 'off',...
                 'Background', 'white',...
                 'string'    , '0',...
                 'BackgroundColor', viewerBackgroundColor('get'), ...
                 'ForegroundColor', viewerForegroundColor('get'), ...
                 'position', [0.01+0.013+0.115+0.033 ...
                              0.335+0.045-(4*0.028) ...
                              0.03 ...
                              0.023] ...
                 );

    edtSettingResampleImageZ = ...
       uicontrol(uiRadiomics,...
                 'style'     , 'edit',...
                 'Units'     , 'normalized',...
                 'enable'    , 'off',...
                 'Background', 'white',...
                 'string'    , '0',...
                 'BackgroundColor', viewerBackgroundColor('get'), ...
                 'ForegroundColor', viewerForegroundColor('get'), ...
                 'position', [0.01+0.013+0.115+(2*0.033) ...
                              0.335+0.045-(4*0.028) ...
                              0.03 ...
                              0.023] ...
                 );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'on',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Interpolation',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.01+0.013 ...
                               0.335+0.045-(5*0.028) ...
                               0.1 ...
                               0.02] ...
                  );

    asInterpolation = ...
        {'sitkNearestNeighbor',...
         'sitkLinear', ...
         'sitkBSpline', ...
         'sitkGaussian', ...
         'sitkLabelGaussian', ...
         'sitkHammingWindowedSinc', ...
         'sitkCosineWindowedSinc', ...
         'sitkWelchWindowedSinc', ...
         'sitkLanczosWindowedSinc', ...
         'sitkBlackmanWindowedSinc'
        };

    popSettingResampleImageInterpolation = ...
        uicontrol(uiRadiomics, ...
                  'enable'  , 'off',...
                  'Units'     , 'normalized',...
                  'Style'   , 'popup', ...
                  'UserData', 'interpolator', ...
                  'position', [0.01+0.013+0.115 ...
                              0.335+0.045-(5*0.028) ...
                              0.0955 ...
                              0.023], ...
                  'String'  , asInterpolation, ...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'Value'   , 3 ...
                  );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'on',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Pad Distance',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.01+0.013 ...
                               0.335+0.045-(6*0.028) ...
                               0.1 ...
                               0.02] ...
                  );

    edtSettingResampleImagePadDistance = ...
       uicontrol(uiRadiomics,...
                 'style'     , 'edit',...
                 'Units'     , 'normalized',...
                 'enable'    , 'off',...
                 'Background', 'white',...
                 'string'    , '5',...
                 'BackgroundColor', viewerBackgroundColor('get'), ...
                 'ForegroundColor', viewerForegroundColor('get'), ...
                 'UserData', 'padDistance', ...
                 'position', [0.01+0.013+0.115 ...
                              0.335+0.045-(6*0.028) ...
                              0.03 ...
                              0.023] ...
                 );

    % Normalization

    chkSettingNormalizeImage = ...
        uicontrol(uiRadiomics,...
                  'style'   , 'checkbox',...
                  'Units'   , 'normalized',...
                  'enable'  , 'on',...
                  'value'   , 0,...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'UserData', 'normalize', ...
                  'position', [0.01 ...
                               0.335+0.045-(8*0.028) ...
                               0.02 ...
                               0.02], ...
                  'Callback', @chkSettingNormalizeImageCallback...
                  );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'Inactive',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Normalize Image',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.01+0.013 ...
                               0.335+0.045-(8*0.028) ...
                               0.1 ...
                               0.02], ...
                  'ButtonDownFcn', @chkSettingNormalizeImageCallback...
                  );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'on',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Scale',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.01+0.013 ...
                               0.335+0.045-(9*0.028) ...
                               0.1 ...
                               0.02] ...
                  );

    edtSettingNormalizeImageScale = ...
       uicontrol(uiRadiomics,...
                 'style'     , 'edit',...
                 'Units'     , 'normalized',...
                 'enable'    , 'off',...
                 'Background', 'white',...
                 'string'    , '1',...
                 'BackgroundColor', viewerBackgroundColor('get'), ...
                 'ForegroundColor', viewerForegroundColor('get'), ...
                 'UserData', 'normalizeScale', ...
                 'position', [0.01+0.013+0.115 ...
                              0.335+0.045-(9*0.028) ...
                              0.03 ...
                              0.023], ...
                 'Callback', @edtSettingNormalizeImageScaleCallback...
                 );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'on',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Remove Outliers',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.01+0.013 ...
                               0.335+0.045-(10*0.028) ...
                               0.1 ...
                               0.02] ...
                  );

    edtSettingNormalizeImageRemoveOutliers = ...
       uicontrol(uiRadiomics,...
                 'style'     , 'edit',...
                 'Units'     , 'normalized',...
                 'enable'    , 'off',...
                 'Background', 'white',...
                 'string'    , ' ',...
                 'BackgroundColor', viewerBackgroundColor('get'), ...
                 'ForegroundColor', viewerForegroundColor('get'), ...
                 'UserData', 'removeOutliers', ...
                 'position', [0.01+0.013+0.115 ...
                              0.335+0.045-(10*0.028) ...
                              0.03 ...
                              0.023], ...
                 'Callback', @edtSettingNormalizeImageRemoveOutliersCallback...
                 );

    % Mask Validation

    chkSettingMaskValidation = ...
        uicontrol(uiRadiomics,...
                  'style'   , 'checkbox',...
                  'Units'   , 'normalized',...
                  'enable'  , 'on',...
                  'value'   , 0,...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'UserData', 'validateMask', ...
                  'position', [0.262 ...
                               0.335+0.045-(0*0.028) ...
                               0.02 ...
                               0.02], ...
                  'Callback', @chkSettingMaskValidationCallback...
                  );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'Inactive',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Validate Mask',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.262+0.013 ...
                               0.335+0.045-(0*0.028) ...
                               0.1 ...
                               0.02], ...
                  'ButtonDownFcn', @chkSettingMaskValidationCallback...
                  );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'Inactive',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Min ROI dimensions',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.262+0.013 ...
                               0.335+0.045-(1*0.028) ...
                               0.1 ...
                               0.02] ...
                  );

    edtSettingMaskValidationMinRoiDim = ...
       uicontrol(uiRadiomics,...
                 'style'     , 'edit',...
                 'Units'     , 'normalized',...
                 'enable'    , 'off',...
                 'Background', 'white',...
                 'string'    , '1',...
                 'BackgroundColor', viewerBackgroundColor('get'), ...
                 'ForegroundColor', viewerForegroundColor('get'), ...
                 'UserData', 'minimumROIDimensions', ...
                 'position', [0.262+0.013+0.115 ...
                              0.335+0.045-(1*0.028) ...
                              0.03 ...
                              0.023] ...
                 );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'Inactive',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Min ROI Size',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.262+0.013 ...
                               0.335+0.045-(2*0.028) ...
                               0.1 ...
                               0.02] ...
                  );

    edtSettingMaskValidationMinRoiSize = ...
       uicontrol(uiRadiomics,...
                 'style'     , 'edit',...
                 'Units'     , 'normalized',...
                 'enable'    , 'off',...
                 'Background', 'white',...
                 'string'    , '0',...
                 'BackgroundColor', viewerBackgroundColor('get'), ...
                 'ForegroundColor', viewerForegroundColor('get'), ...
                 'UserData', 'minimumROISize', ...
                 'position', [0.262+0.013+0.115 ...
                              0.335+0.045-(2*0.028) ...
                              0.03 ...
                              0.023] ...
                 );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'Inactive',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Geometry Tolerance',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.262+0.013 ...
                               0.335+0.045-(3*0.028) ...
                               0.1 ...
                               0.02] ...
                  );

    edtSettingMaskValidationGeometryTolerance = ...
       uicontrol(uiRadiomics,...
                 'style'     , 'edit',...
                 'Units'     , 'normalized',...
                 'enable'    , 'off',...
                 'Background', 'white',...
                 'string'    , '0',...
                 'BackgroundColor', viewerBackgroundColor('get'), ...
                 'ForegroundColor', viewerForegroundColor('get'), ...
                 'UserData', 'geometryTolerance', ...
                 'position', [0.262+0.013+0.115 ...
                              0.335+0.045-(3*0.028) ...
                              0.03 ...
                              0.023] ...
                 );

    chkSettingMaskValidationCorrectMask = ...
        uicontrol(uiRadiomics,...
                  'style'   , 'checkbox',...
                  'Units'   , 'normalized',...
                  'enable'  , 'off',...
                  'value'   , 0,...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'UserData', 'correctMask', ...
                  'position', [0.262+0.013 ...
                               0.335+0.045-(4*0.028) ...
                               0.02 ...
                               0.02], ...
                  'Callback', @chkSettingMaskValidationCorrectMaskCallback...
                  );

    txtSettingMaskValidationCorrectMask = ...
         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'on',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Correct Mask',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.262+(2*0.013) ...
                               0.335+0.045-(4*0.028) ...
                               0.1 ...
                               0.02], ...
                  'ButtonDownFcn', @chkSettingMaskValidationCorrectMaskCallback...
                  );
    % Other

    chkSettingOtherForce2D = ...
        uicontrol(uiRadiomics,...
                  'style'   , 'checkbox',...
                  'Units'   , 'normalized',...
                  'enable'  , 'on',...
                  'value'   , 0,...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'UserData', 'force2D', ...
                  'position', [0.262 ...
                               0.335+0.045-(6*0.028) ...
                               0.02 ...
                               0.02], ...
                  'Callback', @chkSettingOtherForce2DCallback...
                  );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'Inactive',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Force 2D Extraction (dim)',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.262+0.013 ...
                               0.335+0.045-(6*0.028) ...
                               0.1 ...
                               0.02], ...
                  'ButtonDownFcn', @chkSettingOtherForce2DCallback...
                  );

    edtSettingOtherForce2D = ...
       uicontrol(uiRadiomics,...
                 'style'     , 'edit',...
                 'Units'     , 'normalized',...
                 'enable'    , 'off',...
                 'Background', 'white',...
                 'string'    , '0',...
                 'BackgroundColor', viewerBackgroundColor('get'), ...
                 'ForegroundColor', viewerForegroundColor('get'), ...
                 'UserData', 'force2Ddimension', ...
                 'position', [0.262+0.013+0.115 ...
                              0.335+0.045-(6*0.028) ...
                              0.03 ...
                              0.023] ...
                 );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'Inactive',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Texture Matrix Weighting',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.262 ...
                               0.335+0.045-(7*0.028) ...
                               0.1 ...
                               0.02] ...
                  );

    asTextureMatrix = ...
        {'none',...
         'manhattan', ...
         'euclidean', ...
         'infinity', ...
         'no_weighting'
        };

    popSettingOtherTextureMatrix = ...
        uicontrol(uiRadiomics, ...
                  'enable'  , 'on',...
                  'Units'   , 'normalized',...
                  'Style'   , 'popup', ...
                  'UserData', 'weightingNorm', ...
                  'position', [0.262+0.013+0.115 ...
                               0.335+0.045-(7*0.028) ...
                               0.0955 ...
                               0.023], ...
                  'String'  , asTextureMatrix, ...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'Value'   , 1 ...
                  );

    chkSettingOtherSetDistanceToNeighbour = ...
        uicontrol(uiRadiomics,...
                  'style'   , 'checkbox',...
                  'Units'   , 'normalized',...
                  'enable'  , 'on',...
                  'value'   , 0,...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'UserData', 'distanceToNeighbour', ...
                  'position', [0.262 ...
                               0.335+0.045-(8*0.028) ...
                               0.02 ...
                               0.02], ...
                  'Callback', @chkSettingOtherSetDistanceToNeighbourCallback...
                  );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'Inactive',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Set distances to neighbour',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.262+0.013 ...
                               0.335+0.045-(8*0.028) ...
                               0.1 ...
                               0.02], ...
                  'ButtonDownFcn', @chkSettingOtherSetDistanceToNeighbourCallback...
                  );

    edtSettingOtherSetDistanceToNeighbour = ...
       uicontrol(uiRadiomics,...
                 'style'     , 'edit',...
                 'Units'     , 'normalized',...
                 'enable'    , 'off',...
                 'Background', 'white',...
                 'string'    , '0',...
                 'BackgroundColor', viewerBackgroundColor('get'), ...
                 'ForegroundColor', viewerForegroundColor('get'), ...
                 'UserData', 'distances', ...
                 'position', [0.262+0.013+0.115 ...
                              0.335+0.045-(8*0.028) ...
                              0.03 ...
                              0.023] ...
                 );

    chkSettingOtherPreCropping = ...
        uicontrol(uiRadiomics,...
                  'style'   , 'checkbox',...
                  'Units'   , 'normalized',...
                  'enable'  , 'on',...
                  'value'   , 0,...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'UserData', 'preCrop', ...
                  'position', [0.262 ...
                               0.335+0.045-(9*0.028) ...
                               0.02 ...
                               0.02], ...
                  'Callback', @chkSettingOtherPreCroppingCallback...
                  );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'Inactive',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Pre-cropping',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.262+0.013 ...
                               0.335+0.045-(9*0.028) ...
                               0.1 ...
                               0.02], ...
                  'ButtonDownFcn', @chkSettingOtherPreCroppingCallback...
                  );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'on',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Firstorder Voxel Array Shift',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.262 ...
                               0.335+0.045-(10*0.028) ...
                               0.1 ...
                               0.02] ...
                  );

    edtSettingOtherFirstOrderVoxelArrayShift = ...
       uicontrol(uiRadiomics,...
                 'style'     , 'edit',...
                 'Units'     , 'normalized',...
                 'enable'    , 'on',...
                 'Background', 'white',...
                 'string'    , '0',...
                 'BackgroundColor', viewerBackgroundColor('get'), ...
                 'ForegroundColor', viewerForegroundColor('get'), ...
                 'UserData', 'voxelArrayShift', ...
                 'position', [0.262+0.013+0.115 ...
                              0.335+0.045-(10*0.028) ...
                              0.03 ...
                              0.023] ...
                 );

    chkSettingOtherSymmetricalGclm = ...
        uicontrol(uiRadiomics,...
                  'style'   , 'checkbox',...
                  'Units'   , 'normalized',...
                  'enable'  , 'on',...
                  'value'   , 1,...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'UserData', 'symmetricalGLCM', ...
                  'position', [0.262 ...
                               0.335+0.045-(11*0.028) ...
                               0.02 ...
                               0.02], ...
                  'Callback', @chkSettingOtherSymmetricalGclmCallback...
                  );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'Inactive',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Symmetrical glcm',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.262+0.013 ...
                               0.335+0.045-(11*0.028) ...
                               0.1 ...
                               0.02], ...
                  'ButtonDownFcn', @chkSettingOtherSymmetricalGclmCallback...
                  );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'Inactive',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Gldm Alpha',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.262 ...
                               0.335+0.045-(12*0.028) ...
                               0.1 ...
                               0.02] ...
                  );

    edtSettingOtherGldmAlpha = ...
       uicontrol(uiRadiomics,...
                 'style'     , 'edit',...
                 'Units'     , 'normalized',...
                 'enable'    , 'on',...
                 'Background', 'white',...
                 'string'    , '0',...
                 'BackgroundColor', viewerBackgroundColor('get'), ...
                 'ForegroundColor', viewerForegroundColor('get'), ...
                 'UserData', 'gldm_a', ...
                 'position', [0.262+0.013+0.115 ...
                              0.335+0.045-(12*0.028) ...
                              0.03 ...
                              0.023] ...
                 );

    % Image Type

     uicontrol(uiRadiomics,...
              'style'     , 'text',...
              'Units'     , 'normalized',...
              'FontWeight', 'bold',...
              'FontSize'  , 12,...
              'FontName'  , 'MS Sans Serif', ...
              'string'    , 'Image Type',...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...
              'position', [0.515 ...
                           0.335 ...
                           0.1 ...
                           0.1] ...
              );

    % Image Type Original

    chkImageTypeOriginal = ...
        uicontrol(uiRadiomics,...
                  'style'   , 'checkbox',...
                  'Units'   , 'normalized',...
                  'enable'  , 'on',...
                  'value'   , 1,...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'UserData', 'Original', ...
                  'position', [0.515 ...
                               0.335+0.045-(0*0.028) ...
                               0.2 ...
                               0.02], ...
                  'Callback', @chkImageTypeOriginalCallback...
                  );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'Inactive',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Original',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.515+0.013 ...
                               0.335+0.045-(0*0.028) ...
                               0.1 ...
                               0.02], ...
                  'ButtonDownFcn', @chkImageTypeOriginalCallback...
                  );

    % Image Type Wavelet

    chkImageTypeWavelet = ...
        uicontrol(uiRadiomics,...
                  'style'   , 'checkbox',...
                  'Units'   , 'normalized',...
                  'enable'  , 'on',...
                  'value'   , 0,...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'UserData', 'Wavelet', ...
                  'position', [0.515 ...
                               0.335+0.045-(1*0.028) ...
                               0.2 ...
                               0.02], ...
                  'Callback', @chkImageTypeWaveletCallback...
                  );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'Inactive',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Wavelet',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.515+0.013 ...
                               0.335+0.045-(1*0.028) ...
                               0.1 ...
                               0.02], ...
                  'ButtonDownFcn', @chkImageTypeWaveletCallback...
                  );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'on',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Start Level',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.515+0.013 ...
                               0.335+0.045-(2*0.028) ...
                               0.1 ...
                               0.02] ...
                  );

    edtImageTypeWaveletStartLevel = ...
       uicontrol(uiRadiomics,...
                 'style'     , 'edit',...
                 'Units'     , 'normalized',...
                 'enable'    , 'off',...
                 'Background', 'white',...
                 'string'    , '0',...
                 'BackgroundColor', viewerBackgroundColor('get'), ...
                 'ForegroundColor', viewerForegroundColor('get'), ...
                 'UserData', 'start_level', ...
                 'position', [0.515+0.013+0.115 ...
                              0.335+0.045-(2*0.028) ...
                              0.03 ...
                              0.023] ...
                 );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'on',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Level',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.515+0.013 ...
                               0.335+0.045-(3*0.028) ...
                               0.1 ...
                               0.02] ...
                  );

    edtImageTypeWaveletLevel = ...
       uicontrol(uiRadiomics,...
                 'style'     , 'edit',...
                 'Units'     , 'normalized',...
                 'enable'    , 'off',...
                 'Background', 'white',...
                 'string'    , '1',...
                 'BackgroundColor', viewerBackgroundColor('get'), ...
                 'ForegroundColor', viewerForegroundColor('get'), ...
                 'UserData', 'level', ...
                 'position', [0.515+0.013+0.115 ...
                              0.335+0.045-(3*0.028) ...
                              0.03 ...
                              0.023] ...
                );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'on',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Wavelet',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.515+0.013 ...
                               0.335+0.045-(4*0.028) ...
                               0.1 ...
                               0.02] ...
                  );

    edtImageTypeWaveletWavelet = ...
       uicontrol(uiRadiomics,...
                 'style'     , 'edit',...
                 'Units'     , 'normalized',...
                 'enable'    , 'off',...
                 'Background', 'white',...
                 'string'    , 'coif1',...
                 'BackgroundColor', viewerBackgroundColor('get'), ...
                 'ForegroundColor', viewerForegroundColor('get'), ...
                 'UserData', 'wavelet', ...
                 'position', [0.515+0.013+0.115 ...
                              0.335+0.045-(4*0.028) ...
                              0.03 ...
                              0.023] ...
                 );

    % Image Type SquareRoot

    chkImageTypeSquareRoot = ...
        uicontrol(uiRadiomics,...
                  'style'   , 'checkbox',...
                  'Units'   , 'normalized',...
                  'enable'  , 'on',...
                  'value'   , 0,...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'UserData', 'SquareRoot', ...
                  'position', [0.515 ...
                               0.335+0.045-(5*0.028) ...
                               0.2 ...
                               0.02], ...
                  'Callback', @chkImageTypeSquareRootCallback...
                  );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'Inactive',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'SquareRoot',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.515+0.013 ...
                               0.335+0.045-(5*0.028) ...
                               0.1 ...
                               0.02], ...
                  'ButtonDownFcn', @chkImageTypeSquareRootCallback...
                  );

    % Image Type Exponential

    chkImageTypeExponential = ...
        uicontrol(uiRadiomics,...
                  'style'   , 'checkbox',...
                  'Units'   , 'normalized',...
                  'enable'  , 'on',...
                  'value'   , 0,...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'UserData', 'Exponential', ...
                  'position', [0.515 ...
                               0.335+0.045-(6*0.028) ...
                               0.2 ...
                               0.02], ...
                  'Callback', @chkImageTypeExponentialCallback...
                  );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'Inactive',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Exponential',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.515+0.013 ...
                               0.335+0.045-(6*0.028) ...
                               0.1 ...
                               0.02], ...
                  'ButtonDownFcn', @chkImageTypeExponentialCallback...
                  );

    % Image Type LoG

    chkImageTypeLoG = ...
        uicontrol(uiRadiomics,...
                  'style'   , 'checkbox',...
                  'Units'   , 'normalized',...
                  'enable'  , 'on',...
                  'value'   , 0,...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'UserData', 'LoG', ...
                  'position', [0.515 ...
                               0.335+0.045-(7*0.028) ...
                               0.2 ...
                               0.02], ...
                  'Callback', @chkImageTypeLoGCallback...
                  );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'Inactive',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'LoG',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.515+0.013 ...
                               0.335+0.045-(7*0.028) ...
                               0.1 ...
                               0.02], ...
                  'ButtonDownFcn', @chkImageTypeLoGCallback...
                  );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'on',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Sigma',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.515+0.013 ...
                               0.335+0.045-(8*0.028) ...
                               0.1 ...
                               0.02] ...
                  );

    edtImageTypeLoGSigma = ...
       uicontrol(uiRadiomics,...
                 'style'     , 'edit',...
                 'Units'     , 'normalized',...
                 'enable'    , 'off',...
                 'Background', 'white',...
                 'string'    , '1',...
                 'BackgroundColor', viewerBackgroundColor('get'), ...
                 'ForegroundColor', viewerForegroundColor('get'), ...
                 'UserData', 'sigma', ...
                 'position', [0.515+0.013+0.115 ...
                              0.335+0.045-(8*0.028) ...
                              0.03 ...
                              0.023] ...
                 );

    % Image Type Square

    chkImageTypeSquare = ...
        uicontrol(uiRadiomics,...
                  'style'   , 'checkbox',...
                  'Units'   , 'normalized',...
                  'enable'  , 'on',...
                  'value'   , 0,...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'UserData', 'Square', ...
                  'position', [0.515 ...
                               0.335+0.045-(9*0.028) ...
                               0.2 ...
                               0.02], ...
                  'Callback', @chkImageTypeSquareCallback...
                  );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'Inactive',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Square',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.515+0.013 ...
                               0.335+0.045-(9*0.028) ...
                               0.1 ...
                               0.02], ...
                  'ButtonDownFcn', @chkImageTypeSquareCallback...
                  );

    % Image Type Logarithm

    chkImageTypeLogarithm = ...
        uicontrol(uiRadiomics,...
                  'style'   , 'checkbox',...
                  'Units'   , 'normalized',...
                  'enable'  , 'on',...
                  'value'   , 0,...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'UserData', 'Logarithm', ...
                  'position', [0.515 ...
                               0.335+0.045-(10*0.028) ...
                               0.2 ...
                               0.02], ...
                  'Callback', @chkImageTypeLogarithmCallback...
                  );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'Inactive',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Logarithm',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.515+0.013 ...
                               0.335+0.045-(10*0.028) ...
                               0.1 ...
                               0.02], ...
                  'ButtonDownFcn', @chkImageTypeLogarithmCallback...
                  );

    % Image Type Gradient

    chkImageTypeGradient = ...
        uicontrol(uiRadiomics,...
                  'style'   , 'checkbox',...
                  'Units'   , 'normalized',...
                  'enable'  , 'on',...
                  'value'   , 0,...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'UserData', 'Gradient', ...
                  'position', [0.515 ...
                               0.335+0.045-(11*0.028) ...
                               0.2 ...
                               0.02], ...
                  'Callback', @chkImageTypeGradientCallback...
                  );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'Inactive',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Gradient',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.515+0.013 ...
                               0.335+0.045-(11*0.028) ...
                               0.1 ...
                               0.02], ...
                  'ButtonDownFcn', @chkImageTypeGradientCallback...
                  );

    chkImageTypeGradientUseSpacing = ...
        uicontrol(uiRadiomics,...
                  'style'   , 'checkbox',...
                  'Units'   , 'normalized',...
                  'enable'  , 'off',...
                  'value'   , 0,...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'UserData', 'gradientUseSpacing', ...
                  'position', [0.515+0.013 ...
                               0.335+0.045-(12*0.028) ...
                               0.02 ...
                               0.02], ...
                  'ButtonDownFcn', @chkImageTypeGradientUseSpacingCallback...
                  );

    txtImageTypeGradientUseSpacing = ...
         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'On',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Use spacing',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.515+(2*0.013) ...
                               0.335+0.045-(12*0.028) ...
                               0.1 ...
                               0.02], ...
                  'ButtonDownFcn', @chkImageTypeGradientUseSpacingCallback...
                  );

    % Preset protocol

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'FontWeight', 'bold',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Preset protocol',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.799 ...
                               0.180 ...
                               0.1 ...
                               0.02] ...
                  );


    popRadiomicsProtocol = ...
        uicontrol(uiRadiomics, ...
                  'enable'  , 'on',...
                  'Units'   , 'normalized',...
                  'Style'   , 'popup', ...
                  'position', [0.863 ...
                               0.180 ...
                               0.124 ...
                               0.02], ...
                  'String'  , getRadiomicsProtocolName(), ...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'Value'   , 1 ...
                  );

        uicontrol(uiRadiomics,...
                  'style'   , 'pushbutton',...
                  'Units'   , 'normalized',...
                  'String'  , 'Load',...
                  'position', [0.799 ...
                               0.120 ...
                               0.06 ...
                               0.03], ...
                  'Enable'  , 'on', ...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'Callback', @loadRadiomicsProtocolCallback...
                  );

        uicontrol(uiRadiomics,...
                  'style'   , 'pushbutton',...
                  'Units'   , 'normalized',...
                  'String'  ,'Save',...
                  'position', [0.863 ...
                               0.120 ...
                               0.06 ...
                               0.03], ...
                  'Enable'  , 'on', ...
                  'BackgroundColor', [0.5300 0.6300 0.4000], ...
                  'ForegroundColor', [0.1 0.1 0.1], ...
                  'Callback', @saveRadiomicsProtocolCallback...
                  );

        uicontrol(uiRadiomics, ...
                  'style'   , 'pushbutton',...
                  'Units'   , 'normalized',...
                  'String'  , 'Delete',...
                  'position', [0.927 ...
                               0.120 ...
                               0.06 ...
                               0.03], ...
                  'Enable'  , 'on', ...
                  'BackgroundColor', [0.3255, 0.1137, 0.1137], ...
                  'ForegroundColor', [0.94 0.94 0.94], ...
                  'Callback', @deleteRadiomicsProtocolCallback...
                  );

     uicontrol(uiRadiomics,...
              'style'     , 'text',...
              'Units'     , 'normalized',...
              'FontWeight', 'bold',...
              'FontSize'  , 12,...
              'FontName'  , 'MS Sans Serif', ...
              'string'    , 'Options',...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...
              'position', [0.700 ...
                           0.335 ...
                           0.1 ...
                           0.1] ...
              );

    % Contours

    chkRadiomicsContour = ...
        uicontrol(uiRadiomics,...
                  'style'   , 'checkbox',...
                  'Units'   , 'normalized',...
                  'enable'  , 'off',...
                  'value'   , 0,...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.700 ...
                               0.312+0.068 ...
                               0.02 ...
                               0.02], ...
                  'Callback', @chkRadiomicsContourCallback...
                  );

    txtRadiomicsContour = ...
         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'enable'    , 'On',...
                  'Units'     , 'normalized',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Contour',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.700+0.013 ...
                               0.312+0.068 ...
                               0.1 ...
                               0.02], ...
                  'ButtonDownFcn', @chkRadiomicsContourCallback...
                  );

    atVoiInput = voiTemplate('get', get(uiSeriesPtr('get'), 'Value'));

    if isempty(atVoiInput)
        asVoiTag = ' ';
    else
        asVoiTag = cell(1, numel(atVoiInput));
        for vv=1:numel(atVoiInput)
            asVoiTag{vv} = atVoiInput{vv}.Label;
        end
    end

    popRadiomicsContours = ...
        uicontrol(uiRadiomics, ...
                  'enable'  , 'off',...
                  'Units'   , 'normalized',...
                  'Style'   , 'popup', ...
                  'position', [0.785 ...
                               0.312+0.068 ...
                               0.202 ...
                               0.02], ...
                  'String'  , asVoiTag, ...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'Value'   , 1 ...
                  );

    chkRadiomicsAllContours = ...
        uicontrol(uiRadiomics,...
                  'style'   , 'checkbox',...
                  'Units'   , 'normalized',...
                  'enable'  , 'on',...
                  'value'   , 1,...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.700 ...
                               0.282+0.068 ...
                               0.02 ...
                               0.02], ...
                  'Callback', @chkRadiomicsAllContoursCallback...
                  );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'Inactive',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'All contours',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.700+0.013 ...
                               0.282+0.068 ...
                               0.1 ...
                               0.02], ...
                  'ButtonDownFcn', @chkRadiomicsAllContoursCallback...
                  );

    chkRadiomicsEntireVolume = ...
        uicontrol(uiRadiomics,...
                  'style'   , 'checkbox',...
                  'Units'   , 'normalized',...
                  'enable'  , 'on',...
                  'value'   , radiomicsEntireVolume('get'),...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.700 ...
                               0.222+0.068 ...
                               0.02 ...
                               0.02], ...
                  'Callback', @chkRadiomicsEntireVolumeCallback...
                  );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'Inactive',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Total contoured volume',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.700+0.013 ...
                               0.222+0.068 ...
                               0.2 ...
                               0.02], ...
                  'ButtonDownFcn', @chkRadiomicsEntireVolumeCallback...
                  );

    chkRadiomicsContourType = ...
        uicontrol(uiRadiomics,...
                  'style'   , 'checkbox',...
                  'Units'   , 'normalized',...
                  'enable'  , 'on',...
                  'value'   , radiomicsContourType('get'),...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.700 ...
                               0.192+0.068 ...
                               0.02 ...
                               0.02], ...
                  'Callback', @chkRadiomicsContourTypeCallback...
                  );

         uicontrol(uiRadiomics,...
                  'style'     , 'text',...
                  'Units'     , 'normalized',...
                  'enable'    , 'Inactive',...
                  'FontWeight', 'normal',...
                  'FontSize'  , 10,...
                  'FontName'  , 'MS Sans Serif', ...
                  'string'    , 'Lesion classification',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'position', [0.700+0.013 ...
                               0.192+0.068 ...
                               0.2 ...
                               0.02], ...
                  'ButtonDownFcn', @chkRadiomicsContourTypeCallback...
                  );

     % Cancel or Proceed

     uicontrol(uiRadiomics,...
               'String'  ,'Cancel',...
               'Units'   , 'normalized',...
               'position', [0.927 ...
                            0.01 ...
                            0.06 ...
                            0.03], ...
               'BackgroundColor', viewerBackgroundColor('get'), ...
               'ForegroundColor', viewerForegroundColor('get'), ...
               'Callback', @cancelRadiomicsFromContoursCallback...
               );

     uicontrol(uiRadiomics,...
               'String','Compute',...
               'Units'   , 'normalized',...
               'FontWeight', 'bold',...
               'position', [0.863 ...
                            0.01 ...
                            0.06 ...
                            0.03], ...
              'BackgroundColor', [0.6300 0.6300 0.4000], ...
              'ForegroundColor', [0.1 0.1 0.1], ...
              'Callback', @computeRadiomicsFromContoursCallback...
              );

     uicontrol(uiRadiomics,...
              'style'     , 'text',...
              'enable'    , 'Inactive',...
              'FontWeight', 'normal',...
              'FontSize'  , 10,...
              'FontName'  , 'MS Sans Serif', ...
              'string'    , 'Module documentation: https://www.radiomics.io/',...
              'horizontalalignment', 'left',...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', 'white', ...
              'position', [10 ...
                           10 ...
                           500 ...
                           20], ...
              'ButtonDownFcn', @visitPyRadiomics...
              );

    function visitPyRadiomics(~, ~)
        web('https://www.radiomics.io/');
    end

    % FirstOrder

    function chkFeatureClassFirstorderCallback(hObject, ~)

        bObjectValue = get(chkFeatureClassFirstorder, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkFeatureClassFirstorder, 'Value', ~bObjectValue);
        end

        bObjectValue = get(chkFeatureClassFirstorder, 'Value');

        for aa=1:numel(chkFirstOrderFeatures)

            set(chkFirstOrderFeatures{aa}, 'Value', bObjectValue);

        end
    end

    function chkFirstOrderFeaturesCallback(hObject, ~)

        dObjectOffset = get(hObject, 'UserData');

        bObjectValue = get(chkFirstOrderFeatures{dObjectOffset}, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkFirstOrderFeatures{dObjectOffset}, 'Value', ~bObjectValue);
        end

        % Verify if at least 1 object is active

        adOffset = find(cellfun( @(chkFirstOrderFeatures) chkFirstOrderFeatures.Value, chkFirstOrderFeatures, 'uni', true ), true);

        if isempty(adOffset)
            set(chkFeatureClassFirstorder, 'Value', false);
        else
            set(chkFeatureClassFirstorder, 'Value', true);
        end

    end

    % Shape

    function chkFeatureClassShapeCallback(hObject, ~)

        bObjectValue = get(chkFeatureClassShape, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkFeatureClassShape, 'Value', ~bObjectValue);
        end

        bObjectValue = get(chkFeatureClassShape, 'Value');

        for aa=1:numel(chkShapeFeatures)

            set(chkShapeFeatures{aa}, 'Value', bObjectValue);

        end
    end

    function chkShapeFeaturesCallback(hObject, ~)

        dObjectOffset = get(hObject, 'UserData');

        bObjectValue = get(chkShapeFeatures{dObjectOffset}, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkShapeFeatures{dObjectOffset}, 'Value', ~bObjectValue);
        end

        % Verify if at least 1 object is active

        adOffset = find(cellfun( @(chkShapeFeatures) chkShapeFeatures.Value, chkShapeFeatures, 'uni', true ), true);

        if isempty(adOffset)
            set(chkFeatureClassShape, 'Value', false);
        else
            set(chkFeatureClassShape, 'Value', true);
        end

    end

    % Glcm

    function chkFeatureClassGlcmCallback(hObject, ~)

        bObjectValue = get(chkFeatureClassGlcm, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkFeatureClassGlcm, 'Value', ~bObjectValue);
        end

        bObjectValue = get(chkFeatureClassGlcm, 'Value');

        for aa=1:numel(chkGlcmFeatures)

            set(chkGlcmFeatures{aa}, 'Value', bObjectValue);

        end
    end

    function chkGlcmFeaturesCallback(hObject, ~)

        dObjectOffset = get(hObject, 'UserData');

        bObjectValue = get(chkGlcmFeatures{dObjectOffset}, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkGlcmFeatures{dObjectOffset}, 'Value', ~bObjectValue);
        end

        % Verify if at least 1 object is active

        adOffset = find(cellfun( @(chkGlcmFeatures) chkGlcmFeatures.Value, chkGlcmFeatures, 'uni', true ), true);

        if isempty(adOffset)
            set(chkFeatureClassGlcm, 'Value', false);
        else
            set(chkFeatureClassGlcm, 'Value', true);
        end

    end

    % Gldm

    function chkFeatureClassGldmCallback(hObject, ~)

        bObjectValue = get(chkFeatureClassGldm, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkFeatureClassGldm, 'Value', ~bObjectValue);
        end

        bObjectValue = get(chkFeatureClassGldm, 'Value');

        for aa=1:numel(chkGldmFeatures)

            set(chkGldmFeatures{aa}, 'Value', bObjectValue);

        end
    end

    function chkGldmFeaturesCallback(hObject, ~)

        dObjectOffset = get(hObject, 'UserData');

        bObjectValue = get(chkGldmFeatures{dObjectOffset}, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkGldmFeatures{dObjectOffset}, 'Value', ~bObjectValue);
        end

        % Verify if at least 1 object is active

        adOffset = find(cellfun( @(chkGldmFeatures) chkGldmFeatures.Value, chkGldmFeatures, 'uni', true ), true);

        if isempty(adOffset)
            set(chkFeatureClassGldm, 'Value', false);
        else
            set(chkFeatureClassGldm, 'Value', true);
        end

    end

    % Glrlm

    function chkFeatureClassGlrlmCallback(hObject, ~)

        bObjectValue = get(chkFeatureClassGlrlm, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkFeatureClassGlrlm, 'Value', ~bObjectValue);
        end

        bObjectValue = get(chkFeatureClassGlrlm, 'Value');

        for aa=1:numel(chkGlrlmFeatures)

            set(chkGlrlmFeatures{aa}, 'Value', bObjectValue);

        end
    end

    function chkGlrlmFeaturesCallback(hObject, ~)

        dObjectOffset = get(hObject, 'UserData');

        bObjectValue = get(chkGlrlmFeatures{dObjectOffset}, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkGlrlmFeatures{dObjectOffset}, 'Value', ~bObjectValue);
        end

        % Verify if at least 1 object is active

        adOffset = find(cellfun( @(chkGlrlmFeatures) chkGlrlmFeatures.Value, chkGlrlmFeatures, 'uni', true ), true);

        if isempty(adOffset)
            set(chkFeatureClassGlrlm, 'Value', false);
        else
            set(chkFeatureClassGlrlm, 'Value', true);
        end

    end

    % Glszm

    function chkFeatureClassGlszmCallback(hObject, ~)

        bObjectValue = get(chkFeatureClassGlszm, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkFeatureClassGlszm, 'Value', ~bObjectValue);
        end

        bObjectValue = get(chkFeatureClassGlszm, 'Value');

        for aa=1:numel(chkGlszmFeatures)

            set(chkGlszmFeatures{aa}, 'Value', bObjectValue);

        end
    end

    function chkGlszmFeaturesCallback(hObject, ~)

        dObjectOffset = get(hObject, 'UserData');

        bObjectValue = get(chkGlszmFeatures{dObjectOffset}, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkGlszmFeatures{dObjectOffset}, 'Value', ~bObjectValue);
        end

        % Verify if at least 1 object is active

        adOffset = find(cellfun( @(chkGlszmFeatures) chkGlszmFeatures.Value, chkGlszmFeatures, 'uni', true ), true);

        if isempty(adOffset)
            set(chkFeatureClassGlszm, 'Value', false);
        else
            set(chkFeatureClassGlszm, 'Value', true);
        end

    end

    % Ngtdm

    function chkFeatureClassNgtdmCallback(hObject, ~)

        bObjectValue = get(chkFeatureClassNgtdm, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkFeatureClassNgtdm, 'Value', ~bObjectValue);
        end

        bObjectValue = get(chkFeatureClassNgtdm, 'Value');

        for aa=1:numel(chkNgtdmFeatures)

            set(chkNgtdmFeatures{aa}, 'Value', bObjectValue);

        end
    end

    function chkNgtdmFeaturesCallback(hObject, ~)

        dObjectOffset = get(hObject, 'UserData');

        bObjectValue = get(chkNgtdmFeatures{dObjectOffset}, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkNgtdmFeatures{dObjectOffset}, 'Value', ~bObjectValue);
        end

        % Verify if at least 1 object is active

        adOffset = find(cellfun( @(chkNgtdmFeatures) chkNgtdmFeatures.Value, chkNgtdmFeatures, 'uni', true ), true);

        if isempty(adOffset)
            set(chkFeatureClassNgtdm, 'Value', false);
        else
            set(chkFeatureClassNgtdm, 'Value', true);
        end

    end

    % Bin Width

    function chkSettingBinWidthCallback(hObject, ~)

        bObjectValue = get(chkSettingBinWidth, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkSettingBinWidth, 'Value', ~bObjectValue);
        end

        bObjectValue = get(chkSettingBinWidth, 'Value');

        if bObjectValue == true

            set(edtSettingBinWidth, 'Enable', 'on');

            set(chkSettingResegmentation   , 'Enable', 'on');
            set(txtSettingResegmentation   , 'Enable', 'inactive');

            if get(chkSettingResegmentation, 'Value') == true
                set(edtSettingResegmentationMin, 'Enable', 'on');
                set(edtSettingResegmentationMax, 'Enable', 'on');
            else
                set(edtSettingResegmentationMin, 'Enable', 'off');
                set(edtSettingResegmentationMax, 'Enable', 'off');
            end

            set(edtSettingBinPerRoi, 'Enable', 'off');

            set(chkSettingBinPerRoi, 'Value', false);
        else
            set(edtSettingBinWidth, 'Enable', 'off');

            set(chkSettingResegmentation   , 'Enable', 'off');
            set(txtSettingResegmentation   , 'Enable', 'on');
            set(edtSettingResegmentationMin, 'Enable', 'off');
            set(edtSettingResegmentationMax, 'Enable', 'off');

            set(edtSettingBinPerRoi, 'Enable', 'on');

            set(chkSettingBinPerRoi, 'Value', true);
            set(chkSettingResegmentation, 'Value', false);
        end

    end

    function chkSettingResegmentationCallback(hObject, ~)

        bObjectValue = get(chkSettingResegmentation, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkSettingResegmentation, 'Value', ~bObjectValue);
        end

        bObjectValue = get(chkSettingResegmentation, 'Value');

        if bObjectValue == true

            set(edtSettingResegmentationMin, 'Enable', 'on');
            set(edtSettingResegmentationMax, 'Enable', 'on');
        else
            set(edtSettingResegmentationMin, 'Enable', 'off');
            set(edtSettingResegmentationMax, 'Enable', 'off');
        end
    end

    function chkSettingBinPerRoiCallback(hObject, ~)

        bObjectValue = get(chkSettingBinPerRoi, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkSettingBinPerRoi, 'Value', ~bObjectValue);
        end

        bObjectValue = get(chkSettingBinPerRoi, 'Value');

        if bObjectValue == true

            set(edtSettingBinPerRoi, 'Enable', 'on');

            set(chkSettingBinWidth, 'Value', false);
            set(edtSettingBinWidth, 'Enable', 'off');

            set(chkSettingResegmentation, 'Value', false);
            set(chkSettingResegmentation, 'Enable', 'off');

            set(txtSettingResegmentation, 'Enable', 'on');

            set(edtSettingResegmentationMin, 'Enable', 'off');
            set(edtSettingResegmentationMax, 'Enable', 'off');
        else
            set(edtSettingBinPerRoi, 'Enable', 'off');

            set(chkSettingBinWidth, 'Value', true);
            set(edtSettingBinWidth, 'Enable', 'on');

            set(txtSettingResegmentation, 'Enable', 'inactive');

        end
    end

    % Resample Image

    function chkSettingResampleImageCallback(hObject, ~)

         bObjectValue = get(chkSettingResampleImage, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkSettingResampleImage, 'Value', ~bObjectValue);
        end

        bObjectValue = get(chkSettingResampleImage, 'Value');

        if bObjectValue == true

            set(edtSettingResampleImageX, 'Enable', 'on');
            set(edtSettingResampleImageY, 'Enable', 'on');
            set(edtSettingResampleImageZ, 'Enable', 'on');

            set(popSettingResampleImageInterpolation, 'Enable', 'on');

            set(edtSettingResampleImagePadDistance, 'Enable', 'on');
        else
            set(edtSettingResampleImageX, 'Enable', 'off');
            set(edtSettingResampleImageY, 'Enable', 'off');
            set(edtSettingResampleImageZ, 'Enable', 'off');

            set(popSettingResampleImageInterpolation, 'Enable', 'off');

            set(edtSettingResampleImagePadDistance, 'Enable', 'off');
        end
    end

    % Normalization

    function chkSettingNormalizeImageCallback(hObject, ~)

        bObjectValue = get(chkSettingNormalizeImage, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkSettingNormalizeImage, 'Value', ~bObjectValue);
        end

        bObjectValue = get(chkSettingNormalizeImage, 'Value');

        if bObjectValue == true

            set(edtSettingNormalizeImageScale         , 'Enable', 'on');
            set(edtSettingNormalizeImageRemoveOutliers, 'Enable', 'on');

        else
            set(edtSettingNormalizeImageScale         , 'Enable', 'off');
            set(edtSettingNormalizeImageRemoveOutliers, 'Enable', 'off');
        end

    end

    % Mask Validation

    function chkSettingMaskValidationCallback(hObject, ~)

        bObjectValue = get(chkSettingMaskValidation, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkSettingMaskValidation, 'Value', ~bObjectValue);
        end

        bObjectValue = get(chkSettingMaskValidation, 'Value');

        if bObjectValue == true

             set(edtSettingMaskValidationMinRoiDim        , 'Enable', 'on');
             set(edtSettingMaskValidationMinRoiSize       , 'Enable', 'on');
             set(edtSettingMaskValidationGeometryTolerance, 'Enable', 'on');

            set(chkSettingMaskValidationCorrectMask, 'Enable', 'on');
            set(txtSettingMaskValidationCorrectMask, 'Enable', 'inactive');
        else
             set(edtSettingMaskValidationMinRoiDim        , 'Enable', 'off');
             set(edtSettingMaskValidationMinRoiSize       , 'Enable', 'off');
             set(edtSettingMaskValidationGeometryTolerance, 'Enable', 'off');

             set(chkSettingMaskValidationCorrectMask, 'Value', false);

             set(chkSettingMaskValidationCorrectMask, 'Enable', 'off');
             set(txtSettingMaskValidationCorrectMask, 'Enable', 'on');
        end

    end

    function chkSettingMaskValidationCorrectMaskCallback(hObject, ~)

        bObjectValue = get(chkSettingMaskValidationCorrectMask, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkSettingMaskValidationCorrectMask, 'Value', ~bObjectValue);
        end
    end

    % Other

    function chkSettingOtherForce2DCallback(hObject, ~)

        bObjectValue = get(chkSettingOtherForce2D, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkSettingOtherForce2D, 'Value', ~bObjectValue);
        end

        bObjectValue = get(chkSettingOtherForce2D, 'Value');

        if bObjectValue == true
            set(edtSettingOtherForce2D, 'Enable', 'on');
        else
            set(edtSettingOtherForce2D, 'Enable', 'off');
        end

    end

    function chkSettingOtherSetDistanceToNeighbourCallback(hObject, ~)

        bObjectValue = get(chkSettingOtherSetDistanceToNeighbour, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkSettingOtherSetDistanceToNeighbour, 'Value', ~bObjectValue);
        end

        bObjectValue = get(chkSettingOtherSetDistanceToNeighbour, 'Value');

        if bObjectValue == true
            set(edtSettingOtherSetDistanceToNeighbour, 'Enable', 'on');
        else
            set(edtSettingOtherSetDistanceToNeighbour, 'Enable', 'off');
        end

    end

    function chkSettingOtherPreCroppingCallback(hObject, ~)

        bObjectValue = get(chkSettingOtherPreCropping, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkSettingOtherPreCropping, 'Value', ~bObjectValue);
        end
    end

    function chkSettingOtherSymmetricalGclmCallback(hObject, ~)

        bObjectValue = get(chkSettingOtherSymmetricalGclm, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkSettingOtherSymmetricalGclm, 'Value', ~bObjectValue);
        end
    end

    % Image Type

    % Image Type Original

    function chkImageTypeOriginalCallback(hObject, ~)

        bObjectValue = get(chkImageTypeOriginal, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkImageTypeOriginal, 'Value', ~bObjectValue);
        end
    end

    % Image Type Wavelet

    function chkImageTypeWaveletCallback(hObject, ~)

        bObjectValue = get(chkImageTypeWavelet, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkImageTypeWavelet, 'Value', ~bObjectValue);
        end

        bObjectValue = get(chkImageTypeWavelet, 'Value');

        if bObjectValue == true
            set(edtImageTypeWaveletStartLevel, 'Enable', 'on');
            set(edtImageTypeWaveletLevel     , 'Enable', 'on');
            set(edtImageTypeWaveletWavelet   , 'Enable', 'on');
        else
            set(edtImageTypeWaveletStartLevel, 'Enable', 'off');
            set(edtImageTypeWaveletLevel     , 'Enable', 'off');
            set(edtImageTypeWaveletWavelet   , 'Enable', 'off');
        end
    end

    % Image Type SquareRoot

    function chkImageTypeSquareRootCallback(hObject, ~)

        bObjectValue = get(chkImageTypeSquareRoot, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkImageTypeSquareRoot, 'Value', ~bObjectValue);
        end
    end

    % Image Type Exponential

    function chkImageTypeExponentialCallback(hObject, ~)

        bObjectValue = get(chkImageTypeExponential, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkImageTypeExponential, 'Value', ~bObjectValue);
        end
    end

    % Image Type LoG

    function chkImageTypeLoGCallback(hObject, ~)

        bObjectValue = get(chkImageTypeLoG, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkImageTypeLoG, 'Value', ~bObjectValue);
        end

        bObjectValue = get(chkImageTypeLoG, 'Value');

        if bObjectValue == true

            set(edtImageTypeLoGSigma, 'Enable', 'on');
        else
            set(edtImageTypeLoGSigma, 'Enable', 'off');
        end
    end

    % Image Type Square

    function chkImageTypeSquareCallback(hObject, ~)

        bObjectValue = get(chkImageTypeSquare, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkImageTypeSquare, 'Value', ~bObjectValue);
        end

    end

    % Image Type Logarithm

    function chkImageTypeLogarithmCallback(hObject, ~)

        bObjectValue = get(chkImageTypeLogarithm, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkImageTypeLogarithm, 'Value', ~bObjectValue);
        end

    end

    % Image Type Gradien

    function chkImageTypeGradientCallback(hObject, ~)

        bObjectValue = get(chkImageTypeGradient, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkImageTypeGradient, 'Value', ~bObjectValue);
        end

        bObjectValue = get(chkImageTypeGradient, 'Value');

        if bObjectValue == true

            set(chkImageTypeGradientUseSpacing, 'Enable', 'on');
            set(txtImageTypeGradientUseSpacing, 'Enable', 'inactive');
        else
            set(chkImageTypeGradientUseSpacing, 'Enable', 'off');
            set(txtImageTypeGradientUseSpacing, 'Enable', 'on');
            set(chkImageTypeGradientUseSpacing, 'Value' , false);
        end
    end

    function chkImageTypeGradientUseSpacingCallback(hObject, ~)

        bObjectValue = get(chkImageTypeGradientUseSpacing, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkImageTypeGradientUseSpacing, 'Value', ~bObjectValue);
        end
    end

    % Contours

    function chkRadiomicsContourCallback(hObject, ~)

        bObjectValue = get(chkRadiomicsContour, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkRadiomicsContour, 'Value', ~bObjectValue);
        end

        bObjectValue = get(chkRadiomicsContour, 'Value');

        if bObjectValue == false
            set(popRadiomicsContours, 'Enable', 'off');
        else
            set(popRadiomicsContours, 'Enable', 'on');
        end

    end

    function chkRadiomicsAllContoursCallback(hObject, ~)

        bObjectValue = get(chkRadiomicsAllContours, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkRadiomicsAllContours, 'Value', ~bObjectValue);
        end

        bObjectValue = get(chkRadiomicsAllContours, 'Value');

        if bObjectValue == true
            set(popRadiomicsContours, 'Enable', 'off');

            set(txtRadiomicsContour , 'Enable', 'on');
            set(chkRadiomicsContour , 'Enable', 'off');
            set(chkRadiomicsContour , 'Value' , false);
        else
            set(popRadiomicsContours, 'Enable', 'on');

            set(txtRadiomicsContour , 'Enable', 'Inactive');
            set(chkRadiomicsContour , 'Enable', 'on');
            set(chkRadiomicsContour , 'Value' , true);
        end

    end

    function chkRadiomicsEntireVolumeCallback(hObject, ~)

        bObjectValue = get(chkRadiomicsEntireVolume, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkRadiomicsEntireVolume, 'Value', ~bObjectValue);
        end

        radiomicsEntireVolume('set', get(chkRadiomicsEntireVolume, 'Value'));
    end

    function chkRadiomicsContourTypeCallback(hObject, ~)

        bObjectValue = get(chkRadiomicsContourType, 'Value');

        if strcmpi(get(hObject, 'Style'), 'text')

            set(chkRadiomicsContourType, 'Value', ~bObjectValue);
        end

        radiomicsContourType('set', get(chkRadiomicsContourType, 'Value'));

    end

    function asRadiomicsProtocol = getRadiomicsProtocolName()

        sRootPath = viewerRootPath('get');
        sProtocolPath = sprintf('%s/protocol/', sRootPath);

        f = java.io.File(char(sProtocolPath));
        asListing = f.listFiles();

        sXmlProtocolFileName = '';

        for yy=1:numel(asListing) % If file exist
            if contains(char(asListing(yy)), 'radiomics.xml')
                sXmlProtocolFileName = char(asListing(yy));
            end
        end

        if isempty(sXmlProtocolFileName)
            asRadiomicsProtocol{1} = ' ';
        else
            stXml = xml2struct(sXmlProtocolFileName);

            if isfield (stXml.radiomics, 'protocol')
                dNbXmlProtocol = numel(stXml.radiomics.protocol);
                if dNbXmlProtocol
                    if dNbXmlProtocol >1

                        asRadiomicsProtocol = cell(1, dNbXmlProtocol);
                        for zz=1:dNbXmlProtocol
                            asRadiomicsProtocol{zz}=stXml.radiomics.protocol{1, zz}.protocolName.Text;
                        end
                    else
                        asRadiomicsProtocol{1} = stXml.radiomics.protocol.protocolName.Text;
                    end
                else
                    asRadiomicsProtocol{1} = ' ';
                end
            else
                asRadiomicsProtocol{1} = ' ';
            end
        end
    end

    % Delete

    function deleteRadiomicsProtocolCallback(~, ~)

        sRootPath = viewerRootPath('get');
        sProtocolPath = sprintf('%s/protocol/', sRootPath);

        f = java.io.File(char(sProtocolPath));
        asListing = f.listFiles();

        sXmlProtocolFileName = '';

        for kk=1:numel(asListing) % If file exist
            if contains(char(asListing(kk)), 'radiomics.xml')
                sXmlProtocolFileName = char(asListing(kk));
                break;
            end
        end

        asProtocolList  = get(popRadiomicsProtocol, 'String');
        dProtocolOffset = get(popRadiomicsProtocol, 'Value');

        sProtocolName = strtrim(asProtocolList{dProtocolOffset});

        if ~isempty(sXmlProtocolFileName) && ...  % Protocol file exist
           ~isempty(sProtocolName)

            st = xml2struct(sXmlProtocolFileName);
            if isfield (st.radiomics, 'protocol')

                dNbProtocol = numel(st.radiomics.protocol);
                if dNbProtocol > 1
                    for pp=1:dNbProtocol
                        if strcmpi(st.radiomics.protocol{1,pp}.protocolName.Text, sProtocolName)
                            st.radiomics.protocol{1,pp}=[];
                            st.radiomics.protocol(cellfun(@isempty, st.radiomics.protocol)) = [];
                            break;
                        end
                    end
                else
                    if strcmpi(st.radiomics.protocol.protocolName.Text, sProtocolName)
                        st.radiomics.protocol=[];
                        st.radiomics = rmfield(st.radiomics, 'protocol');
                    end
                end
            end

            struct2xml(st, sXmlProtocolFileName);

            set(popRadiomicsProtocol, 'Value', 1);
            set(popRadiomicsProtocol, 'String', getRadiomicsProtocolName());
        end

    end

    % Save

    function saveRadiomicsProtocolCallback(~, ~)

        DLG_PROTOCOL_NAME_X = 380;
        DLG_PROTOCOL_NAME_Y = 100;

        if viewerUIFigure('get') == true
    
            dlgProtocolName = ...
                uifigure('Position', [(getMainWindowPosition('xpos')+(getMainWindowSize('xsize')/2)-DLG_PROTOCOL_NAME_X/2) ...
                                    (getMainWindowPosition('ypos')+(getMainWindowSize('ysize')/2)-DLG_PROTOCOL_NAME_Y/2) ...
                                    DLG_PROTOCOL_NAME_X ...
                                    DLG_PROTOCOL_NAME_Y ...
                                    ],...
                         'Resize'     , 'off', ...
                         'Color'      , viewerBackgroundColor('get'),...
                         'WindowStyle', 'modal', ...
                         'Name'       , 'Protocol Name'...
                        );
         else
    
            dlgProtocolName = ...
                dialog('Position', [(getMainWindowPosition('xpos')+(getMainWindowSize('xsize')/2)-DLG_PROTOCOL_NAME_X/2) ...
                                    (getMainWindowPosition('ypos')+(getMainWindowSize('ysize')/2)-DLG_PROTOCOL_NAME_Y/2) ...
                                    DLG_PROTOCOL_NAME_X ...
                                    DLG_PROTOCOL_NAME_Y ...
                                    ],...
                       'MenuBar', 'none',...
                       'Resize', 'off', ...
                       'NumberTitle','off',...
                       'MenuBar', 'none',...
                       'Color', viewerBackgroundColor('get'), ...
                       'Name', 'Protocol Name',...
                       'Toolbar','none'...
                       );
        end

        setObjectIcon(dlgProtocolName);
        
        axeProtocolName = ...
            axes(dlgProtocolName, ...
                 'Units'   , 'pixels', ...
                 'Position', [0 0 DLG_PROTOCOL_NAME_X DLG_PROTOCOL_NAME_Y], ...
                 'Color'   , viewerBackgroundColor('get'),...
                 'XColor'  , viewerForegroundColor('get'),...
                 'YColor'  , viewerForegroundColor('get'),...
                 'ZColor'  , viewerForegroundColor('get'),...
                 'Visible' , 'off'...
                 );
        axeProtocolName.Interactions = [];
        deleteAxesToolbar(axeProtocolName);

            uicontrol(dlgProtocolName,...
                      'style'   , 'text',...
                      'string'  , 'Protocol Name',...
                      'horizontalalignment', 'left',...
                      'BackgroundColor', viewerBackgroundColor('get'), ...
                      'ForegroundColor', viewerForegroundColor('get'), ...
                      'position', [20 55 150 20]...
                      );

        edtProtocolName = ...
            uicontrol(dlgProtocolName,...
                      'style'   , 'edit',...
                      'string'  , ' ',...
                      'horizontalalignment', 'left',...
                      'BackgroundColor', viewerBackgroundColor('get'), ...
                      'ForegroundColor', viewerForegroundColor('get'), ...
                      'position', [170 55 190 20]...
                      );

         % Cancel or Proceed

         uicontrol(dlgProtocolName,...
                   'String','Cancel',...
                   'Position',[285 7 75 25],...
                   'BackgroundColor', viewerBackgroundColor('get'), ...
                   'ForegroundColor', viewerForegroundColor('get'), ...
                   'Callback', @cancelSaveRadiomicsProtocol...
                   );

         uicontrol(dlgProtocolName,...
                  'String','Save',...
                  'Position',[200 7 75 25],...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'Callback', @saveRadiomicsProtocol...
                  );

        function cancelSaveRadiomicsProtocol(~, ~)

            delete(dlgProtocolName);
        end

        function saveRadiomicsProtocol(~, ~)

            asProtocolList = strtrim(get(popRadiomicsProtocol, 'String'));

            for nn=1:numel(asProtocolList)
                if strcmpi(asProtocolList{nn}, strtrim(get(edtProtocolName, 'String')))

                    progressBar('Error: Protocol name invalid or exist, please use a valid name!');
                    errordlg('Protocol name invalid or exist, please use a valid name!', 'Protocol Name Validation');
                    return;
                end
            end

            st.radiomics.guiName.Text = 'Radiomics';
            st.radiomics.defaultProtocol.Text = '1';
            st.radiomics.Attributes.version = '1.0';

            sRootPath = viewerRootPath('get');
            sProtocolPath = sprintf('%s/protocol/', sRootPath);

            f = java.io.File(char(sProtocolPath));
            asListing = f.listFiles();

            sXmlProtocolFileName = '';

            for kk=1:numel(asListing) % If file exist
                if contains(char(asListing(kk)), 'radiomics.xml')
                    sXmlProtocolFileName = char(asListing(kk));
                    break;
                end
            end

            if isempty(sXmlProtocolFileName)
                dNbProtocol = 0;
                sXmlProtocolFileName = sprintf('%s/protocol/radiomics.xml', sRootPath);
            else
                stOld = xml2struct(sXmlProtocolFileName);

                if isfield (stOld.radiomics, 'protocol')

                    dNbProtocol = numel(stOld.radiomics.protocol);

                    st.radiomics.protocol = cell(1, dNbProtocol+1);

                    if dNbProtocol > 1
                        for pp=1:dNbProtocol
                            st.radiomics.protocol{1,pp} = stOld.radiomics.protocol{1,pp};
                        end
                    else
                        st.radiomics.protocol{1,1} = stOld.radiomics.protocol;
                    end
                else
                    dNbProtocol = 0;
                end
            end

            dProtocolOffset = dNbProtocol+1;

            st.radiomics.protocol{1,dProtocolOffset}.protocolName.Text = strtrim(get(edtProtocolName, 'String'));

            delete(dlgProtocolName);

            % firstorder

            for aa=1:numel(asFirstOrderFeatures)
                st.radiomics.protocol{1,dProtocolOffset}.firstorder.field{1, aa}.fieldName.Text  = asFirstOrderFeatures{aa};
                st.radiomics.protocol{1,dProtocolOffset}.firstorder.field{1, aa}.fieldType.Text  = get(chkFirstOrderFeatures{aa}, 'Style');
                st.radiomics.protocol{1,dProtocolOffset}.firstorder.field{1, aa}.fieldValue.Text = get(chkFirstOrderFeatures{aa}, 'Value');
            end

            % shape

            for aa=1:numel(asShapeFeatures)
                st.radiomics.protocol{1,dProtocolOffset}.shape.field{1, aa}.fieldName.Text  = asShapeFeatures{aa};
                st.radiomics.protocol{1,dProtocolOffset}.shape.field{1, aa}.fieldType.Text  = get(chkShapeFeatures{aa}, 'Style');
                st.radiomics.protocol{1,dProtocolOffset}.shape.field{1, aa}.fieldValue.Text = get(chkShapeFeatures{aa}, 'Value');
            end

            % glcm

            for aa=1:numel(asGlcmFeatures)
                st.radiomics.protocol{1,dProtocolOffset}.glcm.field{1, aa}.fieldName.Text  = asGlcmFeatures{aa};
                st.radiomics.protocol{1,dProtocolOffset}.glcm.field{1, aa}.fieldType.Text  = get(chkGlcmFeatures{aa}, 'Style');
                st.radiomics.protocol{1,dProtocolOffset}.glcm.field{1, aa}.fieldValue.Text = get(chkGlcmFeatures{aa}, 'Value');
            end

            % gldm

            for aa=1:numel(asGldmFeatures)
                st.radiomics.protocol{1,dProtocolOffset}.gldm.field{1, aa}.fieldName.Text  = asGldmFeatures{aa};
                st.radiomics.protocol{1,dProtocolOffset}.gldm.field{1, aa}.fieldType.Text  = get(chkGldmFeatures{aa}, 'Style');
                st.radiomics.protocol{1,dProtocolOffset}.gldm.field{1, aa}.fieldValue.Text = get(chkGldmFeatures{aa}, 'Value');
            end

            % glrlm

            for aa=1:numel(asGlrlmFeatures)
                st.radiomics.protocol{1,dProtocolOffset}.glrlm.field{1, aa}.fieldName.Text  = asGlrlmFeatures{aa};
                st.radiomics.protocol{1,dProtocolOffset}.glrlm.field{1, aa}.fieldType.Text  = get(chkGlrlmFeatures{aa}, 'Style');
                st.radiomics.protocol{1,dProtocolOffset}.glrlm.field{1, aa}.fieldValue.Text = get(chkGlrlmFeatures{aa}, 'Value');
            end

            % glszm

            for aa=1:numel(asGlszmFeatures)
                st.radiomics.protocol{1,dProtocolOffset}.glszm.field{1, aa}.fieldName.Text  = asGlszmFeatures{aa};
                st.radiomics.protocol{1,dProtocolOffset}.glszm.field{1, aa}.fieldType.Text  = get(chkGlszmFeatures{aa}, 'Style');
                st.radiomics.protocol{1,dProtocolOffset}.glszm.field{1, aa}.fieldValue.Text = get(chkGlszmFeatures{aa}, 'Value');
            end

            % ngtdm

            for aa=1:numel(asNgtdmFeatures)
                st.radiomics.protocol{1,dProtocolOffset}.ngtdm.field{1, aa}.fieldName.Text  = asNgtdmFeatures{aa};
                st.radiomics.protocol{1,dProtocolOffset}.ngtdm.field{1, aa}.fieldType.Text  = get(chkNgtdmFeatures{aa}, 'Style');
                st.radiomics.protocol{1,dProtocolOffset}.ngtdm.field{1, aa}.fieldValue.Text = get(chkNgtdmFeatures{aa}, 'Value');
            end

            % Setting

            % (1) Bin width

            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,1}.fieldName.Text  = get(chkSettingBinWidth, 'UserData');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,1}.fieldType.Text  = get(chkSettingBinWidth, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,1}.fieldValue.Text = get(chkSettingBinWidth, 'Value');

            % Set Edit Box width (1)
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,1}.field{1,1}.fieldType.Text  = get(edtSettingBinWidth, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,1}.field{1,1}.fieldValue.Text = get(edtSettingBinWidth, 'String');

            % (2) Resegmentation

            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,2}.fieldName.Text  = get(chkSettingResegmentation, 'UserData');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,2}.fieldType.Text  = get(chkSettingResegmentation, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,2}.fieldValue.Text = get(chkSettingResegmentation, 'Value');

            % Set Edit Box min (1)
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,2}.field{1,1}.fieldType.Text  = get(edtSettingResegmentationMin, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,2}.field{1,1}.fieldValue.Text = get(edtSettingResegmentationMin, 'String');

            % Set Edit Box max (2)
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,2}.field{1,2}.fieldType.Text  = get(edtSettingResegmentationMax, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,2}.field{1,2}.fieldValue.Text = get(edtSettingResegmentationMax, 'String');

            % (3) Bin per ROI

            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,3}.fieldName.Text  = get(chkSettingBinPerRoi, 'UserData');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,3}.fieldType.Text  = get(chkSettingBinPerRoi, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,3}.fieldValue.Text = get(chkSettingBinPerRoi, 'Value');

            % Set Edit Box  (1)
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,3}.field{1,1}.fieldType.Text  = get(edtSettingBinPerRoi, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,3}.field{1,1}.fieldValue.Text = get(edtSettingBinPerRoi, 'String');

            % (4) Resample Image

            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,4}.fieldName.Text  = get(chkSettingResampleImage, 'UserData');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,4}.fieldType.Text  = get(chkSettingResampleImage, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,4}.fieldValue.Text = get(chkSettingResampleImage, 'Value');

            % Set Edit Box X (1)
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,4}.field{1,1}.fieldType.Text  = get(edtSettingResampleImageX, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,4}.field{1,1}.fieldValue.Text = get(edtSettingResampleImageX, 'String');

            % Set Edit Box Y (2)
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,4}.field{1,2}.fieldType.Text  = get(edtSettingResampleImageY, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,4}.field{1,2}.fieldValue.Text = get(edtSettingResampleImageY, 'String');

            % Set Edit Box Z (3)
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,4}.field{1,3}.fieldType.Text  = get(edtSettingResampleImageZ, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,4}.field{1,3}.fieldValue.Text = get(edtSettingResampleImageZ, 'String');

            % Set pop interpolation (4)
            asGetInterpolation = get(popSettingResampleImageInterpolation, 'String');
            dGetInterpolaton   = get(popSettingResampleImageInterpolation, 'Value');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,4}.field{1,4}.fieldType.Text  = get(popSettingResampleImageInterpolation, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,4}.field{1,4}.fieldValue.Text = asGetInterpolation{dGetInterpolaton};

            % Set Edit Pad distance (5)
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,4}.field{1,5}.fieldType.Text  = get(edtSettingResampleImagePadDistance, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,4}.field{1,5}.fieldValue.Text = get(edtSettingResampleImagePadDistance, 'String');

            % (5) Normalize image

            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,5}.fieldName.Text  = get(chkSettingNormalizeImage, 'UserData');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,5}.fieldType.Text  = get(chkSettingNormalizeImage, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,5}.fieldValue.Text = get(chkSettingNormalizeImage, 'Value');

            % Set Edit Box normalization scale (1)
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,5}.field{1,1}.fieldType.Text  = get(edtSettingNormalizeImageScale, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,5}.field{1,1}.fieldValue.Text = get(edtSettingNormalizeImageScale, 'String');

            % Set Edit Box remove outfiers (2)
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,5}.field{1,2}.fieldType.Text  = get(edtSettingNormalizeImageRemoveOutliers, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,5}.field{1,2}.fieldValue.Text = get(edtSettingNormalizeImageRemoveOutliers, 'String');

            % (6) Validate mask

            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,6}.fieldName.Text  = get(chkSettingMaskValidation, 'UserData');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,6}.fieldType.Text  = get(chkSettingMaskValidation, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,6}.fieldValue.Text = get(chkSettingMaskValidation, 'Value');

             % Set Edit Box min roi dim (1)
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,6}.field{1,1}.fieldType.Text  = get(edtSettingMaskValidationMinRoiDim, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,6}.field{1,1}.fieldValue.Text = get(edtSettingMaskValidationMinRoiDim, 'String');

             % Set Edit Box roi size (2)
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,6}.field{1,2}.fieldType.Text  = get(edtSettingMaskValidationMinRoiSize, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,6}.field{1,2}.fieldValue.Text = get(edtSettingMaskValidationMinRoiSize, 'String');

             % Set Edit Box geometry tolerence (3)
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,6}.field{1,3}.fieldType.Text  = get(edtSettingMaskValidationGeometryTolerance, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,6}.field{1,3}.fieldValue.Text = get(edtSettingMaskValidationGeometryTolerance, 'String');

             % Set Check Box correct mask (4)
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,6}.field{1,4}.fieldType.Text  = get(chkSettingMaskValidationCorrectMask, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,6}.field{1,4}.fieldValue.Text = get(chkSettingMaskValidationCorrectMask, 'Value');

            % (7) Force 2D

            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,7}.fieldName.Text  = get(chkSettingOtherForce2D, 'UserData');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,7}.fieldType.Text  = get(chkSettingOtherForce2D, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,7}.fieldValue.Text = get(chkSettingOtherForce2D, 'Value');

             % Set Edit Box extraction dim (1)
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,7}.field{1,1}.fieldType.Text  = get(edtSettingOtherForce2D, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,7}.field{1,1}.fieldValue.Text = get(edtSettingOtherForce2D, 'String');

            % (8) Texture matrix

            asGetTextureMatrix = get(popSettingResampleImageInterpolation, 'String');
            dGetTextureMatrix  = get(popSettingResampleImageInterpolation, 'Value');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,8}.fieldName.Text  = get(popSettingOtherTextureMatrix, 'UserData');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,8}.fieldType.Text  = get(popSettingOtherTextureMatrix, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,8}.fieldValue.Text = asGetTextureMatrix{dGetTextureMatrix};

            % (9) Distance to neighbour

            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,9}.fieldName.Text  = get(chkSettingOtherSetDistanceToNeighbour, 'UserData');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,9}.fieldType.Text  = get(chkSettingOtherSetDistanceToNeighbour, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,9}.fieldValue.Text = get(chkSettingOtherSetDistanceToNeighbour, 'Value');

             % Set Edit Box distance to neighbour (1)
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,9}.field{1,1}.fieldType.Text  = get(edtSettingOtherSetDistanceToNeighbour, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,9}.field{1,1}.fieldValue.Text = get(edtSettingOtherSetDistanceToNeighbour, 'String');

            % (10) Pre-cropping

            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,10}.fieldName.Text  = get(chkSettingOtherPreCropping, 'UserData');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,10}.fieldType.Text  = get(chkSettingOtherPreCropping, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,10}.fieldValue.Text = get(chkSettingOtherPreCropping, 'Value');

            % (11) Voxel array shift

            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,11}.fieldName.Text  = get(edtSettingOtherFirstOrderVoxelArrayShift, 'UserData');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,11}.fieldType.Text  = get(edtSettingOtherFirstOrderVoxelArrayShift, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,11}.fieldValue.Text = get(edtSettingOtherFirstOrderVoxelArrayShift, 'String');

            % (12) Voxel Symmetrical Gclm

            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,12}.fieldName.Text  = get(chkSettingOtherSymmetricalGclm, 'UserData');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,12}.fieldType.Text  = get(chkSettingOtherSymmetricalGclm, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,12}.fieldValue.Text = get(chkSettingOtherSymmetricalGclm, 'Value');

            % (13) Voxel alpha Gclm

            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,13}.fieldName.Text  = get(edtSettingOtherGldmAlpha, 'UserData');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,13}.fieldType.Text  = get(edtSettingOtherGldmAlpha, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.setting.field{1,13}.fieldValue.Text = get(edtSettingOtherGldmAlpha, 'String');

            % Image Type

            % (1) Original

            st.radiomics.protocol{1,dProtocolOffset}.imageType.field{1,1}.fieldName.Text  = get(chkImageTypeOriginal, 'UserData');
            st.radiomics.protocol{1,dProtocolOffset}.imageType.field{1,1}.fieldType.Text  = get(chkImageTypeOriginal, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.imageType.field{1,1}.fieldValue.Text = get(chkImageTypeOriginal, 'Value');

            % (2) Wavelet

            st.radiomics.protocol{1,dProtocolOffset}.imageType.field{1,2}.fieldName.Text  = get(chkImageTypeWavelet, 'UserData');
            st.radiomics.protocol{1,dProtocolOffset}.imageType.field{1,2}.fieldType.Text  = get(chkImageTypeWavelet, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.imageType.field{1,2}.fieldValue.Text = get(chkImageTypeWavelet, 'Value');

             % Set Edit Box start level (1)
            st.radiomics.protocol{1,dProtocolOffset}.imageType.field{1,2}.field{1,1}.fieldType.Text  = get(edtImageTypeWaveletStartLevel, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.imageType.field{1,2}.field{1,1}.fieldValue.Text = get(edtImageTypeWaveletStartLevel, 'String');

             % Set Edit Box level (2)
            st.radiomics.protocol{1,dProtocolOffset}.imageType.field{1,2}.field{1,2}.fieldType.Text  = get(edtImageTypeWaveletLevel, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.imageType.field{1,2}.field{1,2}.fieldValue.Text = get(edtImageTypeWaveletLevel, 'String');

             % Set Edit Box Wavelet Wavelet (3)
            st.radiomics.protocol{1,dProtocolOffset}.imageType.field{1,2}.field{1,3}.fieldType.Text  = get(edtImageTypeWaveletWavelet, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.imageType.field{1,2}.field{1,3}.fieldValue.Text = get(edtImageTypeWaveletWavelet, 'String');

            % (3) SquareRoot

            st.radiomics.protocol{1,dProtocolOffset}.imageType.field{1,3}.fieldName.Text  = get(chkImageTypeSquareRoot, 'UserData');
            st.radiomics.protocol{1,dProtocolOffset}.imageType.field{1,3}.fieldType.Text  = get(chkImageTypeSquareRoot, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.imageType.field{1,3}.fieldValue.Text = get(chkImageTypeSquareRoot, 'Value');

            % (4) Exponential

            st.radiomics.protocol{1,dProtocolOffset}.imageType.field{1,4}.fieldName.Text  = get(chkImageTypeExponential, 'UserData');
            st.radiomics.protocol{1,dProtocolOffset}.imageType.field{1,4}.fieldType.Text  = get(chkImageTypeExponential, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.imageType.field{1,4}.fieldValue.Text = get(chkImageTypeExponential, 'Value');

            % (5) LoG

            st.radiomics.protocol{1,dProtocolOffset}.imageType.field{1,5}.fieldName.Text  = get(chkImageTypeLoG, 'UserData');
            st.radiomics.protocol{1,dProtocolOffset}.imageType.field{1,5}.fieldType.Text  = get(chkImageTypeLoG, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.imageType.field{1,5}.fieldValue.Text = get(chkImageTypeLoG, 'Value');

             % Set Edit Box sigma (1)
            st.radiomics.protocol{1,dProtocolOffset}.imageType.field{1,5}.field{1,1}.fieldType.Text  = get(edtImageTypeLoGSigma, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.imageType.field{1,5}.field{1,1}.fieldValue.Text = get(edtImageTypeLoGSigma, 'String');

            % (6) Square

            st.radiomics.protocol{1,dProtocolOffset}.imageType.field{1,6}.fieldName.Text  = get(chkImageTypeSquare, 'UserData');
            st.radiomics.protocol{1,dProtocolOffset}.imageType.field{1,6}.fieldType.Text  = get(chkImageTypeSquare, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.imageType.field{1,6}.fieldValue.Text = get(chkImageTypeSquare, 'Value');

            % (7) Logarithm

            st.radiomics.protocol{1,dProtocolOffset}.imageType.field{1,7}.fieldName.Text  = get(chkImageTypeLogarithm, 'UserData');
            st.radiomics.protocol{1,dProtocolOffset}.imageType.field{1,7}.fieldType.Text  = get(chkImageTypeLogarithm, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.imageType.field{1,7}.fieldValue.Text = get(chkImageTypeLogarithm, 'Value');

            % (8) Gradient

            st.radiomics.protocol{1,dProtocolOffset}.imageType.field{1,8}.fieldName.Text  = get(chkImageTypeGradient, 'UserData');
            st.radiomics.protocol{1,dProtocolOffset}.imageType.field{1,8}.fieldType.Text  = get(chkImageTypeGradient, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.imageType.field{1,8}.fieldValue.Text = get(chkImageTypeGradient, 'Value');

             % Set Check Box use spacing (1)
            st.radiomics.protocol{1,dProtocolOffset}.imageType.field{1,8}.field{1,1}.fieldType.Text  = get(chkImageTypeGradientUseSpacing, 'Style');
            st.radiomics.protocol{1,dProtocolOffset}.imageType.field{1,8}.field{1,1}.fieldValue.Text = get(chkImageTypeGradientUseSpacing, 'Value');

            struct2xml(st, sXmlProtocolFileName);

            set(popRadiomicsProtocol, 'String', getRadiomicsProtocolName());
        end
    end

    % Load

    function loadRadiomicsProtocolCallback(~, ~)

        % Refer saveRadiomicsProtocol() for the saved element list

        sRootPath = viewerRootPath('get');
        sProtocolPath = sprintf('%s/protocol/', sRootPath);

        f = java.io.File(char(sProtocolPath));
        asListing = f.listFiles();

        sXmlProtocolFileName = '';

        for kk=1:numel(asListing) % If file exist
            if contains(char(asListing(kk)), 'radiomics.xml')
                sXmlProtocolFileName = char(asListing(kk));
                break;
            end
        end

        asProtocolList  = get(popRadiomicsProtocol, 'String');
        dProtocolOffset = get(popRadiomicsProtocol, 'Value');

        sProtocolName = asProtocolList{dProtocolOffset};

        if ~isempty(sXmlProtocolFileName)  % Protocol file exist

            st = xml2struct(sXmlProtocolFileName);
            if isfield (st.radiomics, 'protocol')

                stRadiomics = [];

                dNbProtocol = numel(st.radiomics.protocol);
                if dNbProtocol > 1
                    for pp=1:dNbProtocol
                        if strcmpi(st.radiomics.protocol{1,pp}.protocolName.Text, sProtocolName)
                            stRadiomics = st.radiomics.protocol{1,pp};
                        end
                    end
                else
                    if strcmpi(st.radiomics.protocol.protocolName.Text, sProtocolName)
                        stRadiomics = st.radiomics.protocol;
                    end
                end

                if ~isempty(stRadiomics)

                    % firstorder

                    for aa=1:numel(stRadiomics.firstorder.field)

                        dOffset = find(strcmpi(asFirstOrderFeatures, stRadiomics.firstorder.field{1, aa}.fieldName.Text), 1);

                        if ~isempty(dOffset)

                            set(chkFirstOrderFeatures{dOffset}, 'Value', str2double(stRadiomics.firstorder.field{1, aa}.fieldValue.Text));

                        end
                    end

                    % Verify if at least 1 object is active

                    adOffset = find(cellfun( @(chkFirstOrderFeatures) chkFirstOrderFeatures.Value, chkFirstOrderFeatures, 'uni', true ), true);

                    if isempty(adOffset)
                        set(chkFeatureClassFirstorder, 'Value', false);
                    else
                        set(chkFeatureClassFirstorder, 'Value', true);
                    end

                    % shape

                    for aa=1:numel(stRadiomics.shape.field)

                        dOffset = find(strcmpi(asShapeFeatures, stRadiomics.shape.field{1, aa}.fieldName.Text), 1);

                        if ~isempty(dOffset)

                            set(chkShapeFeatures{dOffset}, 'Value', str2double(stRadiomics.shape.field{1, aa}.fieldValue.Text));

                        end
                    end

                    % Verify if at least 1 object is active

                    adOffset = find(cellfun( @(chkShapeFeatures) chkShapeFeatures.Value, chkShapeFeatures, 'uni', true ), true);

                    if isempty(adOffset)
                        set(chkFeatureClassShape, 'Value', false);
                    else
                        set(chkFeatureClassShape, 'Value', true);
                    end

                    % glcm

                    for aa=1:numel(stRadiomics.glcm.field)

                        dOffset = find(strcmpi(asGlcmFeatures, stRadiomics.glcm.field{1, aa}.fieldName.Text), 1);

                        if ~isempty(dOffset)

                            set(chkGlcmFeatures{dOffset}, 'Value', str2double(stRadiomics.glcm.field{1, aa}.fieldValue.Text));

                        end
                    end

                    % Verify if at least 1 object is active

                    adOffset = find(cellfun( @(chkGlcmFeatures) chkGlcmFeatures.Value, chkGlcmFeatures, 'uni', true ), true);

                    if isempty(adOffset)
                        set(chkFeatureClassGlcm, 'Value', false);
                    else
                        set(chkFeatureClassGlcm, 'Value', true);
                    end

                    % Gldm

                    for aa=1:numel(stRadiomics.gldm.field)

                        dOffset = find(strcmpi(asGldmFeatures, stRadiomics.gldm.field{1, aa}.fieldName.Text), 1);

                        if ~isempty(dOffset)

                            set(chkGldmFeatures{dOffset}, 'Value', str2double(stRadiomics.gldm.field{1, aa}.fieldValue.Text));

                        end
                    end

                    % Verify if at least 1 object is active

                    adOffset = find(cellfun( @(chkGldmFeatures) chkGldmFeatures.Value, chkGldmFeatures, 'uni', true ), true);

                    if isempty(adOffset)
                        set(chkFeatureClassGldm, 'Value', false);
                    else
                        set(chkFeatureClassGldm, 'Value', true);
                    end

                    % glrlm

                    for aa=1:numel(stRadiomics.glrlm.field)

                        dOffset = find(strcmpi(asGlrlmFeatures, stRadiomics.glrlm.field{1, aa}.fieldName.Text), 1);

                        if ~isempty(dOffset)

                            set(chkGlrlmFeatures{dOffset}, 'Value', str2double(stRadiomics.glrlm.field{1, aa}.fieldValue.Text));

                        end
                    end

                    % Verify if at least 1 object is active

                    adOffset = find(cellfun( @(chkGlrlmFeatures) chkGlrlmFeatures.Value, chkGlrlmFeatures, 'uni', true ), true);

                    if isempty(adOffset)
                        set(chkFeatureClassGlrlm, 'Value', false);
                    else
                        set(chkFeatureClassGlrlm, 'Value', true);
                    end

                    % glszm

                    for aa=1:numel(stRadiomics.glszm.field)

                        dOffset = find(strcmpi(asGlszmFeatures, stRadiomics.glszm.field{1, aa}.fieldName.Text), 1);

                        if ~isempty(dOffset)

                            set(chkGlszmFeatures{dOffset}, 'Value', str2double(stRadiomics.glszm.field{1, aa}.fieldValue.Text));

                        end
                    end

                    % Verify if at least 1 object is active

                    adOffset = find(cellfun( @(chkGlszmFeatures) chkGlszmFeatures.Value, chkGlszmFeatures, 'uni', true ), true);

                    if isempty(adOffset)
                        set(chkFeatureClassGlszm, 'Value', false);
                    else
                        set(chkFeatureClassGlszm, 'Value', true);
                    end

                    % ngtdm

                    for aa=1:numel(stRadiomics.ngtdm.field)

                        dOffset = find(strcmpi(asNgtdmFeatures, stRadiomics.ngtdm.field{1, aa}.fieldName.Text), 1);

                        if ~isempty(dOffset)

                            set(chkNgtdmFeatures{dOffset}, 'Value', str2double(stRadiomics.ngtdm.field{1, aa}.fieldValue.Text));

                        end
                    end

                    % Verify if at least 1 object is active

                    adOffset = find(cellfun( @(chkNgtdmFeatures) chkNgtdmFeatures.Value, chkNgtdmFeatures, 'uni', true ), true);

                    if isempty(adOffset)
                        set(chkFeatureClassNgtdm, 'Value', false);
                    else
                        set(chkFeatureClassNgtdm, 'Value', true);
                    end

                    % Setting

                    for st=1:numel(stRadiomics.setting.field)


                        % (1) Bin width

                        if strcmpi(stRadiomics.setting.field{1,st}.fieldName.Text, 'binWidth')

                            set(chkSettingBinWidth, 'Value', str2double(stRadiomics.setting.field{1,st}.fieldValue.Text));

                            % Set Edit Box width (1)
                            set(edtSettingBinWidth, 'String', stRadiomics.setting.field{1,st}.field.fieldValue.Text);
                        end

                        % (2) Resegmentation

                        if strcmpi(stRadiomics.setting.field{1,st}.fieldName.Text, 'resegmentRange')

                            set(chkSettingResegmentation, 'Value', str2double(stRadiomics.setting.field{1,st}.fieldValue.Text));

                            % Set Edit Box min (1)
                            set(edtSettingResegmentationMin, 'String', stRadiomics.setting.field{1,st}.field{1,1}.fieldValue.Text);

                            % Set Edit Box max (2)
                            set(edtSettingResegmentationMax, 'String', stRadiomics.setting.field{1,st}.field{1,2}.fieldValue.Text);
                        end

                        % (3) Bin per ROI

                        if strcmpi(stRadiomics.setting.field{1,st}.fieldName.Text, 'binCount')

                            set(chkSettingBinPerRoi, 'Value', str2double(stRadiomics.setting.field{1,st}.fieldValue.Text));

                            % Set Edit Box bin per roi (1)
                            set(edtSettingBinPerRoi, 'String', stRadiomics.setting.field{1,st}.field.fieldValue.Text);
                        end

                        % (4) Resample Image

                        if strcmpi(stRadiomics.setting.field{1,st}.fieldName.Text, 'resampledPixelSpacing')

                            set(chkSettingResampleImage, 'Value', str2double(stRadiomics.setting.field{1,st}.fieldValue.Text));

                            % Set Edit Box X (1)
                            set(edtSettingResampleImageX, 'String', stRadiomics.setting.field{1,st}.field{1,1}.fieldValue.Text);

                            % Set Edit Box Y (2)
                            set(edtSettingResampleImageY, 'String', stRadiomics.setting.field{1,st}.field{1,2}.fieldValue.Text);

                            % Set Edit Box Z (3)
                            set(edtSettingResampleImageZ, 'String', stRadiomics.setting.field{1,st}.field{1,3}.fieldValue.Text);

                            % Set pop interpolation (4)
                            sGetInterpolation = stRadiomics.setting.field{1,st}.field{1,4}.fieldValue.Text;
                            for ii=1:numel(asInterpolation)
                                if strcmpi(asInterpolation{ii}, sGetInterpolation)
                                    set(popSettingResampleImageInterpolation, 'Value', ii);
                                    break;
                                end
                            end

                            % Set Edit Pad distance (5)
                            set(edtSettingResampleImagePadDistance, 'String', stRadiomics.setting.field{1,st}.field{1,5}.fieldValue.Text);

                        end

                        % (5) Normalize image

                        if strcmpi(stRadiomics.setting.field{1,st}.fieldName.Text, 'normalize')

                            set(chkSettingNormalizeImage, 'Value', str2double(stRadiomics.setting.field{1,st}.fieldValue.Text));

                            % Set Edit Box normalization scale (1)
                            set(edtSettingNormalizeImageScale, 'String', stRadiomics.setting.field{1,st}.field{1,1}.fieldValue.Text);

                            % Set Edit Box remove outfiers (2)
                            set(edtSettingNormalizeImageRemoveOutliers, 'String', stRadiomics.setting.field{1,st}.field{1,2}.fieldValue.Text);

                        end

                        % (6) Validate mask

                        if strcmpi(stRadiomics.setting.field{1,st}.fieldName.Text, 'validateMask')

                            set(chkSettingMaskValidation, 'Value', str2double(stRadiomics.setting.field{1,st}.fieldValue.Text));

                            % Set Edit Box min roi dim (1)
                            set(edtSettingMaskValidationMinRoiDim, 'String', stRadiomics.setting.field{1,st}.field{1,1}.fieldValue.Text);

                            % Set Edit Box roi size (2)
                            set(edtSettingMaskValidationMinRoiSize, 'String', stRadiomics.setting.field{1,st}.field{1,2}.fieldValue.Text);

                            % Set Edit Box geometry tolerence (3)
                            set(edtSettingMaskValidationGeometryTolerance, 'String', stRadiomics.setting.field{1,st}.field{1,3}.fieldValue.Text);

                            % Set Check Box correct mask (4)
                            set(chkSettingMaskValidationCorrectMask, 'String', str2double(stRadiomics.setting.field{1,st}.field{1,4}.fieldValue.Text));
                        end

                        % (7) Force 2D

                        if strcmpi(stRadiomics.setting.field{1,st}.fieldName.Text, 'force2D')

                            set(chkSettingOtherForce2D, 'Value', str2double(stRadiomics.setting.field{1,st}.fieldValue.Text));

                            % Set Edit Box extraction dim (1)
                            set(edtSettingOtherForce2D, 'String', stRadiomics.setting.field{1,st}.field.fieldValue.Text);

                        end

                        % (8) Texture matrix

                        if strcmpi(stRadiomics.setting.field{1,st}.fieldName.Text, 'interpolator')

                            sGetTextureMatrix =  stRadiomics.setting.field{1,st}.fieldValue.Text;
                            for ii=1:numel(asTextureMatrix)
                                if strcmpi(asTextureMatrix{ii}, sGetTextureMatrix)
                                    set(popSettingResampleImageInterpolation, 'Value', ii);
                                    break;
                                end
                            end
                        end


                        % (9) Distance to neighbour

                        if strcmpi(stRadiomics.setting.field{1,st}.fieldName.Text, 'distanceToNeighbour')

                            set(chkSettingOtherSetDistanceToNeighbour, 'Value', str2double(stRadiomics.setting.field{1,st}.fieldValue.Text));

                            % Set Edit Box distance to neighbour (1)
                            set(edtSettingOtherSetDistanceToNeighbour, 'String', stRadiomics.setting.field{1,st}.field.fieldValue.Text);
                        end


                        % (10) Pre-cropping

                        if strcmpi(stRadiomics.setting.field{1,st}.fieldName.Text, 'preCrop')

                            set(chkSettingOtherPreCropping, 'Value', str2double(stRadiomics.setting.field{1,st}.fieldValue.Text));
                        end


                        % (11) Voxel array shift

                        if strcmpi(stRadiomics.setting.field{1,st}.fieldName.Text, 'voxelArrayShift')

                            set(edtSettingOtherFirstOrderVoxelArrayShift, 'String', stRadiomics.setting.field{1,st}.fieldValue.Text);
                        end


                        % (12) Voxel Symmetrical Gclm

                        if strcmpi(stRadiomics.setting.field{1,st}.fieldName.Text, 'SymmetricalGclm')

                            set(chkSettingOtherSymmetricalGclm, 'Value', str2double(stRadiomics.setting.field{1,st}.fieldValue.Text));
                        end


                        % (13) Voxel alpha Gclm

                        if strcmpi(stRadiomics.setting.field{1,st}.fieldName.Text, 'gldm_a')

                            set(edtSettingOtherGldmAlpha, 'String', stRadiomics.setting.field{1,st}.fieldValue.Text);
                        end
                    end

                    % Image Type

                    for it=1:numel(stRadiomics.imageType.field)

                        if strcmpi(stRadiomics.imageType.field{1,it}.fieldName.Text, 'Original')

                            % (1) Original

                            set(chkImageTypeOriginal, 'Value', str2double(stRadiomics.imageType.field{1,it}.fieldValue.Text));
                        end

                        % (2) Wavelet

                        if strcmpi(stRadiomics.imageType.field{1,it}.fieldName.Text, 'Wavelet')

                            set(chkImageTypeWavelet, 'Value', str2double(stRadiomics.imageType.field{1,it}.fieldValue.Text));

                            % Set Edit Box start level (1)
                            set(edtImageTypeWaveletStartLevel, 'String', stRadiomics.imageType.field{1,it}.field{1,1}.fieldValue.Text);

                            % Set Edit Box level (2)
                            set(edtImageTypeWaveletLevel, 'String', stRadiomics.imageType.field{1,it}.field{1,2}.fieldValue.Text);

                            % Set Edit Box Wavelet Wavelet (3)
                            set(edtImageTypeWaveletWavelet, 'String', stRadiomics.imageType.field{1,it}.field{1,3}.fieldValue.Text);
                        end

                        % (3) SquareRoot

                        if strcmpi(stRadiomics.imageType.field{1,it}.fieldName.Text, 'SquareRoot')

                            set(chkImageTypeSquareRoot, 'Value', str2double(stRadiomics.imageType.field{1,it}.fieldValue.Text));
                        end

                        % (4) Exponential

                        if strcmpi(stRadiomics.imageType.field{1,it}.fieldName.Text, 'Exponential')

                            set(chkImageTypeExponential, 'Value', str2double(stRadiomics.imageType.field{1,it}.fieldValue.Text));
                        end


                        % (5) LoG

                        if strcmpi(stRadiomics.imageType.field{1,it}.fieldName.Text, 'LoG')

                            set(chkImageTypeLoG, 'Value', str2double(stRadiomics.imageType.field{1,it}.fieldValue.Text));

                            % Set Edit Box sigma (1)
                            set(edtImageTypeLoGSigma, 'String', stRadiomics.imageType.field{1,it}.field.fieldValue.Text);
                        end

                        % (6) Square

                        if strcmpi(stRadiomics.imageType.field{1,it}.fieldName.Text, 'Square')

                            set(chkImageTypeSquare, 'Value', str2double(stRadiomics.imageType.field{1,it}.fieldValue.Text));
                        end

                        % (7) Logarithm

                        if strcmpi(stRadiomics.imageType.field{1,it}.fieldName.Text, 'Logarithm')

                            set(chkImageTypeLogarithm, 'Value', str2double(stRadiomics.imageType.field{1,it}.fieldValue.Text));
                        end

                        % (8) Gradient

                        if strcmpi(stRadiomics.imageType.field{1,it}.fieldName.Text, 'Gradient')

                            set(chkImageTypeGradient, 'Value', str2double(stRadiomics.imageType.field{1,it}.fieldValue.Text));

                            % Set Check Box use spacing (1)
                            set(chkImageTypeGradientUseSpacing, 'Value', str2double(stRadiomics.imageType.field{1,it}.field.fieldValue.Text));
                        end
                    end
                end
            end
        end
    end

    function cancelRadiomicsFromContoursCallback(~, ~)

        delete(dlgRadiomics);
    end

    function computeRadiomicsFromContoursCallback(~, ~)

        atMetaData = dicomMetaData('get', [],  get(uiSeriesPtr('get'), 'Value'));

        tRadiomics = getRadiomicsFeaturestemplate();

        bContour       = get(chkRadiomicsContour     , 'Value');
        dContourOffset = get(popRadiomicsContours    , 'Value');

        bAllContours   = get(chkRadiomicsAllContours , 'Value');

        bEntireVolume  = get(chkRadiomicsEntireVolume, 'Value');
        bContourType   = get(chkRadiomicsContourType, 'Value');

        delete(dlgRadiomics);

        sUnit = getSerieUnitValue(get(uiSeriesPtr('get'), 'Value'));

        if (strcmpi(atMetaData{1}.Modality, 'pt') || ...
            strcmpi(atMetaData{1}.Modality, 'nm'))&& ...
            strcmpi(sUnit, 'SUV' )

            tQuantification = quantificationTemplate('get', [], get(uiSeriesPtr('get'), 'Value'));

            bSUVUnit  = true;
            dSUVScale = tQuantification.tSUV.dScale;
        else
            bSUVUnit  = false;
            dSUVScale = [];
        end

        if bAllContours == true % All Contours
            extractRadiomicsFromContours(sRadiomicsScript, tRadiomics, bSUVUnit, dSUVScale, bEntireVolume, bContourType);
        else % single contour
            if bContour == false && bEntireVolume == false %
                progressBar('Error: At least one contour option must be selected!');
                errordlg('At least one contour option must be selected!!', 'Contour validation');
            else
                extractRadiomicsFromContours(sRadiomicsScript, tRadiomics, bSUVUnit, dSUVScale, bEntireVolume, bContourType, dContourOffset);
            end
        end

    end

    function tRadiomics = getRadiomicsFeaturestemplate()

        % featureClass

        % firstOrder

        % Verify if at least 1 object is active

        adOffset = find(cellfun( @(chkFirstOrderFeatures) chkFirstOrderFeatures.Value, chkFirstOrderFeatures, 'uni', true ), true);

        if isempty(adOffset)
            tRadiomics.featureClass.firstOrder = [];
        else
            tRadiomics.featureClass.firstOrder.name = 'firstorder';
            bb=0;
            for aa=1:numel(asFirstOrderFeatures)
                if get(chkFirstOrderFeatures{aa}, 'Value')
                    bb=bb+1;
                    tRadiomics.featureClass.firstOrder.feature{bb} = asFirstOrderFeatures{aa};
                end
            end

            if aa==bb % All features active
                tRadiomics.featureClass.firstOrder.all = true;
            else
                tRadiomics.featureClass.firstOrder.all = false;
            end
        end

        % shape

        adOffset = find(cellfun( @(chkShapeFeatures) chkShapeFeatures.Value, chkShapeFeatures, 'uni', true ), true);

        if isempty(adOffset)
            tRadiomics.featureClass.shape = [];
        else
            tRadiomics.featureClass.shape.name = 'shape';
            bb=0;
            for aa=1:numel(asShapeFeatures)
                if get(chkShapeFeatures{aa}, 'Value')
                    bb=bb+1;
                    tRadiomics.featureClass.shape.feature{bb} = asShapeFeatures{aa};
                end
            end

            if aa==bb % All features active
                tRadiomics.featureClass.shape.all = true;
            else
                tRadiomics.featureClass.shape.all = false;
            end
        end

        % glcm

        adOffset = find(cellfun( @(chkGlcmFeatures) chkGlcmFeatures.Value, chkGlcmFeatures, 'uni', true ), true);

        if isempty(adOffset)
            tRadiomics.featureClass.glcm = [];
        else
            tRadiomics.featureClass.glcm.name = 'glcm';
            bb=0;
            for aa=1:numel(asGlcmFeatures)
                if get(chkGlcmFeatures{aa}, 'Value')
                    bb=bb+1;
                    tRadiomics.featureClass.glcm.feature{bb} = asGlcmFeatures{aa};
                end
            end

            if aa==bb % All features active
                tRadiomics.featureClass.glcm.all = true;
            else
                tRadiomics.featureClass.glcm.all = false;
            end
        end

        % Gldm

        adOffset = find(cellfun( @(chkGldmFeatures) chkGldmFeatures.Value, chkGldmFeatures, 'uni', true ), true);

        if isempty(adOffset)
            tRadiomics.featureClass.gldm = [];
        else
            tRadiomics.featureClass.gldm.name = 'gldm';
            bb=0;
            for aa=1:numel(asGldmFeatures)
                if get(chkGldmFeatures{aa}, 'Value')
                    bb=bb+1;
                    tRadiomics.featureClass.gldm.feature{bb} = asGldmFeatures{aa};
                end
            end

            if aa==bb % All features active
                tRadiomics.featureClass.gldm.all = true;
            else
                tRadiomics.featureClass.gldm.all = false;
            end
        end

        % glrlm

        adOffset = find(cellfun( @(chkGlrlmFeatures) chkGlrlmFeatures.Value, chkGlrlmFeatures, 'uni', true ), true);

        if isempty(adOffset)
            tRadiomics.featureClass.glrlm = [];
        else
            tRadiomics.featureClass.glrlm.name = 'glrlm';
            bb=0;
            for aa=1:numel(asGlrlmFeatures)
                if get(chkGlrlmFeatures{aa}, 'Value')
                    bb=bb+1;
                    tRadiomics.featureClass.glrlm.feature{bb} = asGlrlmFeatures{aa};
                end
            end

            if aa==bb % All features active
                tRadiomics.featureClass.glrlm.all = true;
            else
                tRadiomics.featureClass.glrlm.all = false;
            end
        end

        % glszm

        adOffset = find(cellfun( @(chkGlszmFeatures) chkGlszmFeatures.Value, chkGlszmFeatures, 'uni', true ), true);

        if isempty(adOffset)
            tRadiomics.featureClass.glszm = [];
        else
            tRadiomics.featureClass.glszm.name = 'glszm';
            bb=0;
            for aa=1:numel(asGlszmFeatures)
                if get(chkGlrlmFeatures{aa}, 'Value')
                    bb=bb+1;
                    tRadiomics.featureClass.glszm.feature{bb} = asGlszmFeatures{aa};
                end
            end

            if aa==bb % All features active
                tRadiomics.featureClass.glszm.all = true;
            else
                tRadiomics.featureClass.glszm.all = false;
            end
        end

        % ngtdm

        adOffset = find(cellfun( @(chkNgtdmFeatures) chkNgtdmFeatures.Value, chkNgtdmFeatures, 'uni', true ), true);

        if isempty(adOffset)
            tRadiomics.featureClass.ngtdm = [];
        else
            tRadiomics.featureClass.ngtdm.name = 'ngtdm';
            bb=0;
            for aa=1:numel(asNgtdmFeatures)
                if get(chkNgtdmFeatures{aa}, 'Value')
                    bb=bb+1;
                    tRadiomics.featureClass.ngtdm.feature{bb} = asNgtdmFeatures{aa};
                end
            end

            if aa==bb % All features active
                tRadiomics.featureClass.ngtdm.all = true;
            else
                tRadiomics.featureClass.ngtdm.all = false;
            end
        end

        % Setting

        % binWidth

        tRadiomics.setting.binWidth.name   = get(chkSettingBinWidth, 'UserData');
        tRadiomics.setting.binWidth.enable = get(chkSettingBinWidth, 'Value');
        tRadiomics.setting.binWidth.value  = str2double(get(edtSettingBinWidth, 'String'));

        % resegmentRange

        tRadiomics.setting.resegmentRange.name   = get(chkSettingResegmentation, 'UserData');
        tRadiomics.setting.resegmentRange.enable = get(chkSettingResegmentation, 'Value');
        tRadiomics.setting.resegmentRange.value.min  = str2double(get(edtSettingResegmentationMin, 'String'));
        tRadiomics.setting.resegmentRange.value.max  = str2double(get(edtSettingResegmentationMax, 'String'));

        % binCount

        tRadiomics.setting.binCount.name   = get(chkSettingBinPerRoi, 'UserData');
        tRadiomics.setting.binCount.enable = get(chkSettingBinPerRoi, 'Value');
        tRadiomics.setting.binCount.value  = str2double(get(edtSettingBinPerRoi, 'String'));

        % resampledPixelSpacing

        tRadiomics.setting.resampledPixelSpacing.name   = get(chkSettingResampleImage, 'UserData');
        tRadiomics.setting.resampledPixelSpacing.enable = get(chkSettingResampleImage, 'Value');
        tRadiomics.setting.resampledPixelSpacing.value.x  = str2double(get(edtSettingResampleImageX, 'String'));
        tRadiomics.setting.resampledPixelSpacing.value.y  = str2double(get(edtSettingResampleImageY, 'String'));
        tRadiomics.setting.resampledPixelSpacing.value.z  = str2double(get(edtSettingResampleImageZ, 'String'));

        % interpolator (resampledPixelSpacing must be enable)

        tRadiomics.setting.interpolator.name   = get(popSettingResampleImageInterpolation, 'UserData');
        tRadiomics.setting.interpolator.enable = get(chkSettingResampleImage, 'Value');

        asGetInterpolation = get(popSettingResampleImageInterpolation, 'String');
        dGetInterpolation  = get(popSettingResampleImageInterpolation, 'Value');
        tRadiomics.setting.interpolator.value  = asGetInterpolation{dGetInterpolation};

        % padDistance (resampledPixelSpacing must be enable)

        tRadiomics.setting.padDistance.name   = get(edtSettingResampleImagePadDistance, 'UserData');
        tRadiomics.setting.padDistance.enable = get(chkSettingResampleImage, 'Value');
        tRadiomics.setting.padDistance.value  = str2double(get(edtSettingResampleImagePadDistance, 'String'));

        % normalize

        tRadiomics.setting.normalize.name   = get(chkSettingNormalizeImage, 'UserData');
        tRadiomics.setting.normalize.enable = get(chkSettingNormalizeImage, 'Value');
        if get(chkSettingNormalizeImage, 'Value') == true
            sNormalize= 'true';
        else
            sNormalize= 'false';
        end
        tRadiomics.setting.normalize.value  = sNormalize;

        % normalizeScale (normalize must be enable)

        tRadiomics.setting.normalizeScale.name   = get(edtSettingNormalizeImageScale, 'UserData');
        tRadiomics.setting.normalizeScale.enable = get(chkSettingNormalizeImage, 'Value');
        tRadiomics.setting.normalizeScale.value  = str2double(get(edtSettingNormalizeImageScale, 'String'));

        % removeOutliers (normalize must be enable)

        dRemoveOutliers = str2double(get(edtSettingNormalizeImageRemoveOutliers, 'String'));
        if get(chkSettingNormalizeImage, 'Value') == true
            if dRemoveOutliers > 0
                bRemoveOutliersEnable = true;
            else
                bRemoveOutliersEnable = false;
            end
        else
            bRemoveOutliersEnable = false;
        end

        tRadiomics.setting.removeOutliers.name   = get(edtSettingNormalizeImageRemoveOutliers, 'UserData');
        tRadiomics.setting.removeOutliers.enable = bRemoveOutliersEnable;
        tRadiomics.setting.removeOutliers.value  = str2double(get(edtSettingNormalizeImageRemoveOutliers, 'String'));

        % Mask validation

        % minimumROIDimensions (mask validation must be enable)

        tRadiomics.setting.minimumROIDimensions.name = get(edtSettingMaskValidationMinRoiDim, 'UserData');
        if get(chkSettingMaskValidation, 'Value') == true
            dMinRoiDim = str2double(get(edtSettingMaskValidationMinRoiDim, 'String'));
            if dMinRoiDim > 0
                bROIDimensionsEnable = true;
            else
                bROIDimensionsEnable = false;
            end
        else
            bROIDimensionsEnable = false;
        end

        tRadiomics.setting.minimumROIDimensions.enable = bROIDimensionsEnable;
        tRadiomics.setting.minimumROIDimensions.value  = str2double(get(edtSettingMaskValidationMinRoiDim, 'String'));

        % minimumROISize (mask validation must be enable)

        tRadiomics.setting.minimumROISize.name = get(edtSettingMaskValidationMinRoiSize, 'UserData');
        if get(chkSettingMaskValidation, 'Value') == true
            dMinRoiSize = str2double(get(edtSettingMaskValidationMinRoiSize, 'String'));
            if dMinRoiSize > 0
                bROISizeEnable = true;
            else
                bROISizeEnable = false;
            end
        else
            bROISizeEnable = false;
        end

        tRadiomics.setting.minimumROISize.enable = bROISizeEnable;
        tRadiomics.setting.minimumROISize.value  = str2double(get(edtSettingMaskValidationMinRoiSize, 'String'));

        % geometryTolerance (mask validation must be enable)

        tRadiomics.setting.geometryTolerance.name = get(edtSettingMaskValidationGeometryTolerance, 'UserData');
        if get(chkSettingMaskValidation, 'Value') == true
            dGeometryTolerance = str2double(get(edtSettingMaskValidationGeometryTolerance, 'String'));
            if dGeometryTolerance > 0
                bGeometryTolerancEnable = true;
            else
                bGeometryTolerancEnable = false;
            end
        else
            bGeometryTolerancEnable = false;
        end

        tRadiomics.setting.geometryTolerance.enable = bGeometryTolerancEnable;
        tRadiomics.setting.geometryTolerance.value  = str2double(get(edtSettingMaskValidationGeometryTolerance, 'String'));

        % correctMask (mask validation must be enable)

        tRadiomics.setting.correctMask.name = get(chkSettingMaskValidationCorrectMask, 'UserData');
        if get(chkSettingMaskValidation, 'Value') == true
            bCorrectMaskEnable = true;
        else
            bCorrectMaskEnable = false;
        end

        bCorrectMask = get(chkSettingMaskValidationCorrectMask, 'Value');
        if bCorrectMask == true
            sCorrectMask = 'true';
        else
            sCorrectMask = 'false';
        end

        tRadiomics.setting.correctMask.enable = bCorrectMaskEnable;
        tRadiomics.setting.correctMask.value  = sCorrectMask;

        % force2D

        tRadiomics.setting.force2D.name = get(chkSettingOtherForce2D, 'UserData');
        if get(chkSettingOtherForce2D, 'Value') == true
            bForce2DEnable = true;
        else
            bForce2DEnable = false;
        end

        if get(chkSettingOtherForce2D, 'Value') == true
            sForce2D = 'true';
        else
            sForce2D = 'false';
        end

        tRadiomics.setting.force2D.enable = bForce2DEnable;
        tRadiomics.setting.force2D.value  = sForce2D;

        % force2Ddimension (force2D must be enablr)

        tRadiomics.setting.force2Ddimension.name = get(edtSettingOtherForce2D, 'UserData');
        if get(chkSettingOtherForce2D, 'Value') == true
            dForce2Ddimension = str2double(get(edtSettingOtherForce2D, 'String'));
            if dForce2Ddimension > 0
                bForce2DdimensionEnable = true;
            else
                bForce2DdimensionEnable = false;
            end

        else
            bForce2DdimensionEnable = false;
        end

        tRadiomics.setting.force2Ddimension.enable = bForce2DdimensionEnable;
        tRadiomics.setting.force2Ddimension.value  = str2double(get(edtSettingOtherForce2D, 'String'));

        % weightingNorm

        tRadiomics.setting.weightingNorm.name = get(popSettingOtherTextureMatrix, 'UserData');

        asGetTextureMatrix =  get(popSettingOtherTextureMatrix, 'String');
        dGetTextureMatrix  =  get(popSettingOtherTextureMatrix, 'Value');

        if strcmpi(asGetTextureMatrix{dGetTextureMatrix}, 'none')
            bTextureMatrixEnable = false;
        else
            bTextureMatrixEnable = true;
        end

        tRadiomics.setting.weightingNorm.enable = bTextureMatrixEnable;
        tRadiomics.setting.weightingNorm.value  = asGetTextureMatrix{dGetTextureMatrix};

        % distances

        tRadiomics.setting.distances.name   = get(edtSettingOtherSetDistanceToNeighbour, 'UserData');
        tRadiomics.setting.distances.enable = get(chkSettingOtherSetDistanceToNeighbour, 'Value');
        tRadiomics.setting.distances.value  = str2double(get(edtSettingOtherSetDistanceToNeighbour, 'String'));

        % preCrop

        tRadiomics.setting.preCrop.name   = get(chkSettingOtherPreCropping, 'UserData');

        if get(chkSettingOtherPreCropping, 'Value') == true
            bPreCroppingEnable = true;
        else
            bPreCroppingEnable = false;
        end

        if get(chkSettingOtherPreCropping, 'Value') == true
            sPreCropping = 'true';
        else
            sPreCropping = 'false';
        end

        tRadiomics.setting.preCrop.enable = bPreCroppingEnable;
        tRadiomics.setting.preCrop.value  = sPreCropping;

        % voxelArrayShift

        tRadiomics.setting.voxelArrayShift.name = get(edtSettingOtherFirstOrderVoxelArrayShift, 'UserData');

        adOffset = find(cellfun( @(chkFirstOrderFeatures) chkFirstOrderFeatures.Value, chkFirstOrderFeatures, 'uni', true ), true);

        if ~isempty(adOffset) % At least one firstOrder is activate

           dVoxelArrayShift = str2double(get(edtSettingOtherFirstOrderVoxelArrayShift, 'String'));

           if dVoxelArrayShift > 0

                bVoxelArrayShiftEnable = true;
           else
                bVoxelArrayShiftEnable = false;
           end
        else
            bVoxelArrayShiftEnable = false;
        end

        tRadiomics.setting.voxelArrayShift.enable = bVoxelArrayShiftEnable;
        tRadiomics.setting.voxelArrayShift.value  = str2double(get(edtSettingOtherFirstOrderVoxelArrayShift, 'String'));

        % symmetricalGLCM

        tRadiomics.setting.symmetricalGLCM.name = get(chkSettingOtherSymmetricalGclm, 'UserData');

        adOffset = find(cellfun( @(chkGlcmFeatures) chkGlcmFeatures.Value, chkGlcmFeatures, 'uni', true ), true);

        if ~isempty(adOffset) % At least one glcm is activate
            bSymmetricalGLCMEnable = true;
        else
            bSymmetricalGLCMEnable = false;
        end

        if get(chkSettingOtherPreCropping, 'Value') == true
            sSymmetricalGLCM = 'true';
        else
            sSymmetricalGLCM = 'false';
        end

        tRadiomics.setting.symmetricalGLCM.enable = bSymmetricalGLCMEnable;
        tRadiomics.setting.symmetricalGLCM.value  = sSymmetricalGLCM;

        % gldm_a

        tRadiomics.setting.gldm_a.name = get(edtSettingOtherGldmAlpha, 'UserData');

        if str2double(get(edtSettingOtherGldmAlpha, 'String')) > 0
            bGldmAlphaEnable = true;
        else
            bGldmAlphaEnable = false;
        end

        tRadiomics.setting.gldm_a.enable = bGldmAlphaEnable;
        tRadiomics.setting.gldm_a.value  = str2double(get(edtSettingOtherGldmAlpha, 'String'));

        % imageType

        % Original

        tRadiomics.imageType.original.name   = get(chkImageTypeOriginal, 'UserData');
        tRadiomics.imageType.original.enable = get(chkImageTypeOriginal, 'Value');
        tRadiomics.imageType.original.value  = '';

        % Wavelet

        tRadiomics.imageType.wavelet.name   = get(chkImageTypeWavelet, 'UserData');
        tRadiomics.imageType.wavelet.enable = get(chkImageTypeWavelet, 'Value');

        % start_level
        sWaveletStartLevelName  = get(edtImageTypeWaveletStartLevel, 'UserData');
        sWaveletStartLevelValue = get(edtImageTypeWaveletStartLevel, 'String');

        % level
        sWaveletLevelName  = get(edtImageTypeWaveletLevel, 'UserData');
        sWaveletLevelValue = get(edtImageTypeWaveletLevel, 'String');

        % wavelet
        sWaveletWaveletName  = get(edtImageTypeWaveletWavelet, 'UserData');
        sWaveletWaveletValue = get(edtImageTypeWaveletWavelet, 'String');

        sWaveletValue = sprintf("'%s' : %s, '%s' : %s, '%s' : '%s'", ... % {'start_level' : 0, 'level' : 1, 'wavelet' : "coif1" }
            sWaveletStartLevelName, sWaveletStartLevelValue, sWaveletLevelName, sWaveletLevelValue, sWaveletWaveletName, sWaveletWaveletValue);

        tRadiomics.imageType.wavelet.value = sWaveletValue;

        % SquareRoot

        tRadiomics.imageType.squareRoot.name   = get(chkImageTypeSquareRoot, 'UserData');
        tRadiomics.imageType.squareRoot.enable = get(chkImageTypeSquareRoot, 'Value');
        tRadiomics.imageType.squareRoot.value  = '';

        % Exponential

        tRadiomics.imageType.exponential.name   = get(chkImageTypeExponential, 'UserData');
        tRadiomics.imageType.exponential.enable = get(chkImageTypeExponential, 'Value');
        tRadiomics.imageType.exponential.value  = '';

        % LoG

        tRadiomics.imageType.loG.name   = get(chkImageTypeLoG, 'UserData');
        tRadiomics.imageType.loG.enable = get(chkImageTypeLoG, 'Value');

        sLoGSigmaName  = get(edtImageTypeLoGSigma, 'UserData');
        sLoGSigmaValue = get(edtImageTypeLoGSigma, 'String');

        sLoGValue = sprintf("'%s' : [%s]", sLoGSigmaName, sLoGSigmaValue);

        tRadiomics.imageType.loG.value  = sLoGValue;

        % Square

        tRadiomics.imageType.square.name   = get(chkImageTypeSquare, 'UserData');
        tRadiomics.imageType.square.enable = get(chkImageTypeSquare, 'Value');
        tRadiomics.imageType.square.value  = '';

        % Logarithm

        tRadiomics.imageType.logarithm.name   = get(chkImageTypeLogarithm, 'UserData');
        tRadiomics.imageType.logarithm.enable = get(chkImageTypeLogarithm, 'Value');
        tRadiomics.imageType.logarithm.value  = '';

        % Gradient

        tRadiomics.imageType.gradient.name   = get(chkImageTypeGradient, 'UserData');
        tRadiomics.imageType.gradient.enable = get(chkImageTypeGradient, 'Value');

        sGradientUseSpacingName  = get(chkImageTypeGradientUseSpacing, 'UserData');
        bGradientUseSpacingValue = get(chkImageTypeGradientUseSpacing, 'Value');

        if bGradientUseSpacingValue == true
            sGradientUseSpacingValue = 'true';
        else
            sGradientUseSpacingValue = 'false';
        end

        sUseSpacingValue = sprintf("'%s' : %s", sGradientUseSpacingName, sGradientUseSpacingValue);

        tRadiomics.imageType.gradient.value  = sUseSpacingValue;
    end

    function uiRadiomicsSliderCallback(~, ~)

        val = get(uiRadiomicsSlider, 'Value');

        aPosition = get(uiRadiomics, 'Position');

        dPanelOffset = -((1-val) * aPosition(4));

        set(uiRadiomics, ...
            'Position', [aPosition(1) ...
                         0-dPanelOffset ...
                         aPosition(3) ...
                         aPosition(4) ...
                         ] ...
            );
    end

end
