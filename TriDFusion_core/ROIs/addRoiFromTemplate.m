function tRoi = addRoiFromTemplate(tRoi, dSeriesOffset)
%function tRoi = addRoiFromTemplate(tRoi, dSeriesOffset)
%Add ROI to ROI template.
%See TriDFuison.doc (or pdf) for more information about options.
%
%Author: Daniel Lafontaine, lafontad@mskcc.org
%
%Last specifications modified:
%
% Copyright 2025, Daniel Lafontaine, on behalf of the TriDFusion development team.
%
% This file is part of The Triple Dimention Fusion (TriDFusion).
%
% TriDFusion development has been led by:  Daniel Lafontaine
%
% TriDFusion is distributed under the terms of the Lesser GNU Public License.
%
%     This version of TriDFusion is free software: you can redistribute it and/or modify
%     it under the terms of the GNU General Public License as published by
%     the Free Software Foundation, either version 3 of the License, or
%     (at your option) any later version.
%
% TriDFusion is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
% without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
% See the GNU General Public License for more details.
%
% You should have received a copy of the GNU General Public License
% along with TriDFusion.  If not, see <http://www.gnu.org/licenses/>.

    switch lower(tRoi.Axe)

        case 'axes1'
            axRoi = axes1Ptr('get', [], dSeriesOffset);

        case 'axes2'
            axRoi = axes2Ptr('get', [], dSeriesOffset);

        case 'axes3'
            axRoi = axes3Ptr('get', [], dSeriesOffset);

        case 'axe'
            axRoi = axePtr('get', [], dSeriesOffset);

        otherwise
            tRoi = [];
            return;
    end

    switch lower(tRoi.Type)

        case lower('images.roi.line')

            roiPtr = images.roi.Line(axRoi, ...
                                     'Position'           , tRoi.Position, ...
                                     'Color'              , tRoi.Color, ...
                                     'LineWidth'          , tRoi.LineWidth, ...
                                     'Label'              , tRoi.Label, ...
                                     'LabelVisible'       , tRoi.LabelVisible, ...
                                     'Tag'                , tRoi.Tag, ...
                                     'StripeColor'        , tRoi.StripeColor, ...
                                     'InteractionsAllowed', tRoi.InteractionsAllowed, ...
                                     'UserData'           , tRoi.UserData, ...
                                     'Visible'            , 'off' ...
                                     );

            uimenu(roiPtr.UIContextMenu, 'Label', 'Copy Contour' , 'UserData', roiPtr, 'Callback', @copyRoiCallback, 'Separator', 'on');
            uimenu(roiPtr.UIContextMenu, 'Label', 'Paste Contour', 'UserData', roiPtr, 'Callback', @pasteRoiCallback);

            uimenu(roiPtr.UIContextMenu,'Label', 'Snap To Circles'   , 'UserData',roiPtr, 'Callback',@snapLinesToCirclesCallback, 'Separator', 'on');
            uimenu(roiPtr.UIContextMenu,'Label', 'Snap To Rectangles', 'UserData',roiPtr, 'Callback',@snapLinesToRectanglesCallback);

            uimenu(roiPtr.UIContextMenu,'Label', 'Edit Label'     , 'UserData',roiPtr, 'Callback',@editLabelCallback, 'Separator', 'on');
            uimenu(roiPtr.UIContextMenu,'Label', 'Hide/View Label', 'UserData',roiPtr, 'Callback',@hideViewLabelCallback);
            uimenu(roiPtr.UIContextMenu,'Label', 'Edit Color'     , 'UserData',roiPtr, 'Callback',@editColorCallback);

            constraintMenu(roiPtr);

            cropMenu(roiPtr);

            uimenu(roiPtr.UIContextMenu,'Label', 'Display Statistics' , 'UserData',roiPtr, 'Callback',@figRoiDialogCallback, 'Separator', 'on');


        case lower('images.roi.freehand')

            roiPtr = images.roi.Freehand(axRoi, ...
                                         'Position'           , tRoi.Position, ...
                                         'Smoothing'          , tRoi.Smoothing, ...
                                         'Color'              , tRoi.Color, ...
                                         'FaceAlpha'          , tRoi.FaceAlpha, ...
                                         'LineWidth'          , tRoi.LineWidth, ...
                                         'Label'              , tRoi.Label, ...
                                         'LabelVisible'       , tRoi.LabelVisible, ...
                                         'FaceSelectable'     , tRoi.FaceSelectable, ...
                                         'Tag'                , tRoi.Tag, ...
                                         'StripeColor'        , tRoi.StripeColor, ...
                                         'InteractionsAllowed', tRoi.InteractionsAllowed, ...
                                         'UserData'           , tRoi.UserData, ...
                                         'Visible'            , 'off' ...
                                         );

            if ~isempty(tRoi.Waypoints)
                roiPtr.Waypoints(:) = tRoi.Waypoints(:);
            else
                roiPtr.Waypoints(:) = 0;    
            end
            
            addRoiMenu(roiPtr);

            % voiDefaultMenu(roiPtr);
            % 
            % roiDefaultMenu(roiPtr);
            % 
            % uimenu(roiPtr.UIContextMenu,'Label', 'Hide/View Face Alpha', 'UserData', roiPtr, 'Callback', @hideViewFaceAlhaCallback);
            % uimenu(roiPtr.UIContextMenu,'Label', 'Clear Waypoints' , 'UserData', roiPtr, 'Callback', @clearWaypointsCallback);
            % 
            % constraintMenu(roiPtr);
            % 
            % cropMenu(roiPtr);
            % 
            % uimenu(roiPtr.UIContextMenu,'Label', 'Display Statistics' , 'UserData',roiPtr, 'Callback',@figRoiDialogCallback, 'Separator', 'on');

            addlistener(roiPtr, 'WaypointAdded'  , @waypointEvents);
            addlistener(roiPtr, 'WaypointRemoved', @waypointEvents);

        case lower('images.roi.assistedfreehand')

            roiPtr = images.roi.AssistedFreehand(axRoi, ...
                                                 'Position'           , tRoi.Position, ...
                                                 'Color'              , tRoi.Color, ...
                                                 'FaceAlpha'          , tRoi.FaceAlpha, ...
                                                 'LineWidth'          , tRoi.LineWidth, ...
                                                 'Label'              , tRoi.Label, ...
                                                 'LabelVisible'       , tRoi.LabelVisible, ...
                                                 'FaceSelectable'     , tRoi.FaceSelectable, ...
                                                 'Tag'                , tRoi.Tag, ...
                                                 'StripeColor'        , tRoi.StripeColor, ...
                                                 'InteractionsAllowed', tRoi.InteractionsAllowed, ...
                                                 'UserData'           , tRoi.UserData, ...
                                                 'Visible'            , 'off' ...
                                                 );

            if ~isempty(tRoi.Waypoints)
                roiPtr.Waypoints(:) = tRoi.Waypoints(:);
            else
                roiPtr.Waypoints(:) = 0;    
            end

            addRoiMenu(roiPtr);

            % voiDefaultMenu(roiPtr);
            % 
            % roiDefaultMenu(roiPtr);
            % 
            % uimenu(roiPtr.UIContextMenu,'Label', 'Hide/View Face Alpha', 'UserData', roiPtr, 'Callback', @hideViewFaceAlhaCallback);
            % uimenu(roiPtr.UIContextMenu,'Label', 'Clear Waypoints' , 'UserData', roiPtr, 'Callback', @clearWaypointsCallback);
            % 
            % constraintMenu(roiPtr);
            % 
            % cropMenu(roiPtr);
            % 
            % uimenu(roiPtr.UIContextMenu,'Label', 'Display Statistics' , 'UserData',roiPtr, 'Callback',@figRoiDialogCallback, 'Separator', 'on');

            addlistener(roiPtr, 'WaypointAdded'  , @waypointEvents);
            addlistener(roiPtr, 'WaypointRemoved', @waypointEvents);

        case lower('images.roi.polygon')

            roiPtr = images.roi.Polygon(axRoi, ...
                                        'Position'           , tRoi.Position, ...
                                        'Color'              , tRoi.Color, ...
                                        'FaceAlpha'          , tRoi.FaceAlpha, ...
                                        'LineWidth'          , tRoi.LineWidth, ...
                                        'Label'              , tRoi.Label, ...
                                        'LabelVisible'       , tRoi.LabelVisible, ...
                                        'FaceSelectable'     , tRoi.FaceSelectable, ...
                                        'Tag'                , tRoi.Tag, ...
                                        'StripeColor'        , tRoi.StripeColor, ...
                                        'InteractionsAllowed', tRoi.InteractionsAllowed, ...
                                        'UserData'           , tRoi.UserData, ...
                                        'Visible'            , 'off' ...
                                        );
            addRoiMenu(roiPtr);

            % voiDefaultMenu(roiPtr);
            % 
            % roiDefaultMenu(roiPtr);
            % 
            % uimenu(roiPtr.UIContextMenu,'Label', 'Hide/View Face Alpha', 'UserData', roiPtr, 'Callback', @hideViewFaceAlhaCallback);
            % 
            % constraintMenu(roiPtr);
            % 
            % cropMenu(roiPtr);
            % 
            % uimenu(roiPtr.UIContextMenu,'Label', 'Display Statistics' , 'UserData',roiPtr, 'Callback',@figRoiDialogCallback, 'Separator', 'on');

        case lower('images.roi.circle')

            roiPtr = images.roi.Circle(axRoi, ...
                                       'Position'           , tRoi.Position, ...
                                       'Radius'             , tRoi.Radius, ...
                                       'Color'              , tRoi.Color, ...
                                       'FaceAlpha'          , tRoi.FaceAlpha, ...
                                       'LineWidth'          , tRoi.LineWidth, ...
                                       'Label'              , tRoi.Label, ...
                                       'LabelVisible'       , tRoi.LabelVisible, ...
                                       'FaceSelectable'     , tRoi.FaceSelectable, ...
                                       'Tag'                , tRoi.Tag, ...
                                       'StripeColor'        , tRoi.StripeColor, ...
                                       'InteractionsAllowed', tRoi.InteractionsAllowed, ...
                                       'UserData'           , tRoi.UserData, ...
                                       'Visible'            , 'off' ...
                                       );
            addRoiMenu(roiPtr);

            % voiDefaultMenu(roiPtr);
            % 
            % roiDefaultMenu(roiPtr);
            % 
            % constraintMenu(roiPtr);
            % 
            % cropMenu(roiPtr);
            % 
            % uimenu(roiPtr.UIContextMenu,'Label', 'Display Statistics' , 'UserData',roiPtr, 'Callback',@figRoiDialogCallback, 'Separator', 'on');

        case lower('images.roi.ellipse')

            roiPtr = images.roi.Ellipse(axRoi, ...
                                        'Position'           , tRoi.Position, ...
                                        'SemiAxes'           , tRoi.SemiAxes, ...
                                        'RotationAngle'      , tRoi.RotationAngle, ...
                                        'Color'              , tRoi.Color, ...
                                        'FaceAlpha'          , tRoi.FaceAlpha, ...
                                        'LineWidth'          , tRoi.LineWidth, ...
                                        'Label'              , tRoi.Label, ...
                                        'LabelVisible'       , tRoi.LabelVisible, ...
                                        'FaceSelectable'     , tRoi.FaceSelectable, ...
                                        'Tag'                , tRoi.Tag, ...
                                        'StripeColor'        , tRoi.StripeColor, ...
                                        'InteractionsAllowed', tRoi.InteractionsAllowed, ...
                                        'FixedAspectRatio'   , tRoi.FixedAspectRatio, ...
                                        'UserData'           , tRoi.UserData, ...
                                        'Visible'            , 'off' ...
                                        );
            addRoiMenu(roiPtr);

            % voiDefaultMenu(roiPtr);
            % 
            % roiDefaultMenu(roiPtr);
            % 
            % uimenu(roiPtr.UIContextMenu,'Label', 'Hide/View Face Alpha', 'UserData', roiPtr, 'Callback', @hideViewFaceAlhaCallback);
            % 
            % constraintMenu(roiPtr);
            % 
            % cropMenu(roiPtr);
            % 
            % uimenu(roiPtr.UIContextMenu,'Label', 'Display Statistics' , 'UserData',roiPtr, 'Callback',@figRoiDialogCallback, 'Separator', 'on');

        case lower('images.roi.rectangle')

            roiPtr = images.roi.Rectangle(axRoi, ...
                                          'Position'           , tRoi.Position, ...
                                          'Rotatable'          , tRoi.Rotatable, ...
                                          'RotationAngle'      , tRoi.RotationAngle, ...
                                          'Color'              , tRoi.Color, ...
                                          'FaceAlpha'          , tRoi.FaceAlpha, ...
                                          'LineWidth'          , tRoi.LineWidth, ...
                                          'Label'              , tRoi.Label, ...
                                          'LabelVisible'       , tRoi.LabelVisible, ...
                                          'FaceSelectable'     , tRoi.FaceSelectable, ...
                                          'Tag'                , tRoi.Tag, ...
                                          'StripeColor'        , tRoi.StripeColor, ...
                                          'InteractionsAllowed', tRoi.InteractionsAllowed, ...
                                          'FixedAspectRatio'   , tRoi.FixedAspectRatio, ...
                                          'UserData'           , tRoi.UserData, ...
                                          'Visible'            , 'off' ...
                                          );
            addRoiMenu(roiPtr);

            % voiDefaultMenu(roiPtr);
            % 
            % roiDefaultMenu(roiPtr);
            % 
            % uimenu(roiPtr.UIContextMenu,'Label', 'Hide/View Face Alpha', 'UserData', roiPtr, 'Callback', @hideViewFaceAlhaCallback);
            % 
            % constraintMenu(roiPtr);
            % 
            % cropMenu(roiPtr);
            % 
            % uimenu(roiPtr.UIContextMenu,'Label', 'Display Statistics' , 'UserData', roiPtr, 'Callback', @figRoiDialogCallback, 'Separator', 'on');

    end

    addlistener(roiPtr, 'DeletingROI', @deleteRoiEvents);
    addlistener(roiPtr, 'ROIMoved'   , @movedRoiEvents );

    tRoi.Object = roiPtr;
end